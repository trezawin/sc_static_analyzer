{
  "metadata": {
    "name": "ERC-3643 Baseline (ABI)",
    "version": "0.2",
    "source": "Phase2-Lite + HKMA/SFC"
  },
  "rules": [
    {
      "id": "E3643-01",
      "title": "Token exposes identityRegistry getter",
      "contract": "Token",
      "requiresAny": ["identityRegistry()", "identityRegistry(address) view returns (address)"]
    },
    {
      "id": "E3643-02",
      "title": "Token allows wiring the IdentityRegistry",
      "contract": "Token",
      "requiresAny": ["setIdentityRegistry(address)"]
    },
    {
      "id": "E3643-03",
      "title": "Token exposes compliance hooks (at least one of mint/forcedTransfer)",
      "contract": "Token",
      "requiresAny": ["mint(address,uint256)", "forcedTransfer(address,address,uint256)"]
    },
    {
      "id": "E3643-04",
      "title": "ClaimTopicsRegistry exposes topic management",
      "contract": "ClaimTopicsRegistry",
      "requiresAll": ["addClaimTopic(uint256)"]
    },
    {
      "id": "E3643-05",
      "title": "TrustedIssuersRegistry exposes issuer management",
      "contract": "TrustedIssuersRegistry",
      "requiresAny": ["addTrustedIssuer(address,uint256[])", "addTrustedIssuer(IClaimIssuer,uint256[])"]
    },
    {
      "id": "E3643-06",
      "title": "IdentityRegistry exposes verification surface",
      "contract": "IdentityRegistry",
      "requiresAny": ["isVerified(address)"]
    },
    {
      "id": "E3643-07",
      "title": "Upgradeable-style init exists (best-effort)",
      "contract": "IdentityRegistry",
      "requiresAny": ["init(address,address,address)"]
    },
    
    {
      "id": "HKMA-01",
      "title": "Address freezing capability (incident control)",
      "contract": "Token",
      "requiresAll": ["setAddressFrozen(address,bool)"]
    },
    {
      "id": "HKMA-02",
      "title": "Partial token freeze (granular remediation)",
      "contract": "Token",
      "requiresAll": ["freezePartialTokens(address,uint256)", "unfreezePartialTokens(address,uint256)"]
    },
    {
      "id": "HKMA-03",
      "title": "Recovery flow for lost wallets",
      "contract": "Token",
      "requiresAll": ["recoveryAddress(address,address,address)"]
    },
    {
      "id": "HKMA-04",
      "title": "Batch operations for efficiency",
      "contract": "Token",
      "requiresAll": ["batchTransfer(address[],uint256[])", "batchMint(address[],uint256[])", "batchBurn(address[],uint256[])"]
    },
    {
      "id": "SFC-01",
      "title": "KYC/AML gating via IdentityRegistry (wiring function present)",
      "contract": "Token",
      "requiresAll": ["setIdentityRegistry(address)"]
    },
    {
      "id": "SFC-02",
      "title": "IdentityRegistry exposes verification",
      "contract": "IdentityRegistry",
      "requiresAll": ["isVerified(address)"]
    },
    {
      "id": "SFC-03",
      "title": "ClaimTopicsRegistry: add/remove topics and list",
      "contract": "ClaimTopicsRegistry",
      "requiresAll": ["addClaimTopic(uint256)", "removeClaimTopic(uint256)", "getClaimTopics()"]
    },
    {
      "id": "SFC-04",
      "title": "TrustedIssuersRegistry: manage issuers & topics",
      "contract": "TrustedIssuersRegistry",
      "requiresAll": ["addTrustedIssuer(address,uint256[])", "removeTrustedIssuer(address)", "updateIssuerClaimTopics(address,uint256[])", "getTrustedIssuerClaimTopics(address)"]
    },
    {
      "id": "SFC-05",
      "title": "Operational role separation (agent role)",
      "contract": "Token",
      "requiresAll": ["addAgent(address)", "removeAgent(address)", "isAgent(address)"]
    },
    {
      "id": "SFC-06",
      "title": "Compliance module wiring",
      "contract": "Token",
      "requiresAll": ["setCompliance(address)"]
    }
  ]
}