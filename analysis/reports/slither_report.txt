/Users/treza/erc_venv/lib/python3.13/site-packages/slither/utils/output.py:10: UserWarning: pkg_resources is deprecated as an API. See https://setuptools.pypa.io/en/latest/pkg_resources.html. The pkg_resources package is slated for removal as early as 2025-11-30. Refrain from using this package or pin to Setuptools<81.
  from pkg_resources import require
INFO:Detectors:
Reentrancy in Token.recoveryAddress(address,address,address) (node_modules/@tokenysolutions/t-rex/contracts/token/Token.sol#297-322):
	External calls:
	- _tokenIdentityRegistry.registerIdentity(_newWallet,_onchainID,_tokenIdentityRegistry.investorCountry(_lostWallet)) (node_modules/@tokenysolutions/t-rex/contracts/token/Token.sol#308-309)
	- forcedTransfer(_lostWallet,_newWallet,investorTokens) (node_modules/@tokenysolutions/t-rex/contracts/token/Token.sol#310)
		- _tokenCompliance.transferred(_from,_to,_amount) (node_modules/@tokenysolutions/t-rex/contracts/token/Token.sol#445)
	State variables written after the call(s):
	- forcedTransfer(_lostWallet,_newWallet,investorTokens) (node_modules/@tokenysolutions/t-rex/contracts/token/Token.sol#310)
		- _balances[_from] = _balances[_from] - _amount (node_modules/@tokenysolutions/t-rex/contracts/token/Token.sol#544)
		- _balances[_to] = _balances[_to] + _amount (node_modules/@tokenysolutions/t-rex/contracts/token/Token.sol#545)
	TokenStorage._balances (node_modules/@tokenysolutions/t-rex/contracts/token/TokenStorage.sol#70) can be used in cross function reentrancies:
	- Token._burn(address,uint256) (node_modules/@tokenysolutions/t-rex/contracts/token/Token.sol#565-573)
	- Token._mint(address,uint256) (node_modules/@tokenysolutions/t-rex/contracts/token/Token.sol#552-560)
	- Token._transfer(address,address,uint256) (node_modules/@tokenysolutions/t-rex/contracts/token/Token.sol#534-547)
	- Token.balanceOf(address) (node_modules/@tokenysolutions/t-rex/contracts/token/Token.sol#527-529)
	- forcedTransfer(_lostWallet,_newWallet,investorTokens) (node_modules/@tokenysolutions/t-rex/contracts/token/Token.sol#310)
		- _frozenTokens[_from] = _frozenTokens[_from] - (tokensToUnfreeze) (node_modules/@tokenysolutions/t-rex/contracts/token/Token.sol#440)
	TokenStorage._frozenTokens (node_modules/@tokenysolutions/t-rex/contracts/token/TokenStorage.sol#83) can be used in cross function reentrancies:
	- Token.burn(address,uint256) (node_modules/@tokenysolutions/t-rex/contracts/token/Token.sol#464-474)
	- Token.forcedTransfer(address,address,uint256) (node_modules/@tokenysolutions/t-rex/contracts/token/Token.sol#431-449)
	- Token.freezePartialTokens(address,uint256) (node_modules/@tokenysolutions/t-rex/contracts/token/Token.sol#488-493)
	- Token.getFrozenTokens(address) (node_modules/@tokenysolutions/t-rex/contracts/token/Token.sol#369-371)
	- Token.recoveryAddress(address,address,address) (node_modules/@tokenysolutions/t-rex/contracts/token/Token.sol#297-322)
	- Token.transfer(address,uint256) (node_modules/@tokenysolutions/t-rex/contracts/token/Token.sol#417-426)
	- Token.transferFrom(address,address,uint256) (node_modules/@tokenysolutions/t-rex/contracts/token/Token.sol#220-234)
	- Token.unfreezePartialTokens(address,uint256) (node_modules/@tokenysolutions/t-rex/contracts/token/Token.sol#498-502)
	- freezePartialTokens(_newWallet,frozenTokens) (node_modules/@tokenysolutions/t-rex/contracts/token/Token.sol#312)
		- _frozenTokens[_userAddress] = _frozenTokens[_userAddress] + (_amount) (node_modules/@tokenysolutions/t-rex/contracts/token/Token.sol#491)
	TokenStorage._frozenTokens (node_modules/@tokenysolutions/t-rex/contracts/token/TokenStorage.sol#83) can be used in cross function reentrancies:
	- Token.burn(address,uint256) (node_modules/@tokenysolutions/t-rex/contracts/token/Token.sol#464-474)
	- Token.forcedTransfer(address,address,uint256) (node_modules/@tokenysolutions/t-rex/contracts/token/Token.sol#431-449)
	- Token.freezePartialTokens(address,uint256) (node_modules/@tokenysolutions/t-rex/contracts/token/Token.sol#488-493)
	- Token.getFrozenTokens(address) (node_modules/@tokenysolutions/t-rex/contracts/token/Token.sol#369-371)
	- Token.recoveryAddress(address,address,address) (node_modules/@tokenysolutions/t-rex/contracts/token/Token.sol#297-322)
	- Token.transfer(address,uint256) (node_modules/@tokenysolutions/t-rex/contracts/token/Token.sol#417-426)
	- Token.transferFrom(address,address,uint256) (node_modules/@tokenysolutions/t-rex/contracts/token/Token.sol#220-234)
	- Token.unfreezePartialTokens(address,uint256) (node_modules/@tokenysolutions/t-rex/contracts/token/Token.sol#498-502)
Reentrancy in Token.setCompliance(address) (node_modules/@tokenysolutions/t-rex/contracts/token/Token.sol#515-522):
	External calls:
	- _tokenCompliance.unbindToken(address(this)) (node_modules/@tokenysolutions/t-rex/contracts/token/Token.sol#517)
	State variables written after the call(s):
	- _tokenCompliance = IModularCompliance(_compliance) (node_modules/@tokenysolutions/t-rex/contracts/token/Token.sol#519)
	TokenStorage._tokenCompliance (node_modules/@tokenysolutions/t-rex/contracts/token/TokenStorage.sol#91) can be used in cross function reentrancies:
	- Token.burn(address,uint256) (node_modules/@tokenysolutions/t-rex/contracts/token/Token.sol#464-474)
	- Token.compliance() (node_modules/@tokenysolutions/t-rex/contracts/token/Token.sol#348-350)
	- Token.forcedTransfer(address,address,uint256) (node_modules/@tokenysolutions/t-rex/contracts/token/Token.sol#431-449)
	- Token.mint(address,uint256) (node_modules/@tokenysolutions/t-rex/contracts/token/Token.sol#454-459)
	- Token.setCompliance(address) (node_modules/@tokenysolutions/t-rex/contracts/token/Token.sol#515-522)
	- Token.transfer(address,uint256) (node_modules/@tokenysolutions/t-rex/contracts/token/Token.sol#417-426)
	- Token.transferFrom(address,address,uint256) (node_modules/@tokenysolutions/t-rex/contracts/token/Token.sol#220-234)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#reentrancy-vulnerabilities-1
INFO:Detectors:
Token.init(address,address,string,string,uint8,address) (node_modules/@tokenysolutions/t-rex/contracts/token/Token.sol#100-132) contains a tautology or contradiction:
	- require(bool,string)(0 <= _decimals && _decimals <= 18,decimals between 0 and 18) (node_modules/@tokenysolutions/t-rex/contracts/token/Token.sol#122)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#tautology-or-contradiction
INFO:Detectors:
IdentityRegistry.isVerified(address) (node_modules/@tokenysolutions/t-rex/contracts/registry/implementation/IdentityRegistry.sol#173-223) ignores return value by (foundClaimTopic,scheme,issuer,sig,data,None) = identity(_userAddress).getClaim(claimIds[j]) (node_modules/@tokenysolutions/t-rex/contracts/registry/implementation/IdentityRegistry.sol#198)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#unused-return
INFO:Detectors:
Token.allowance(address,address)._owner (node_modules/@tokenysolutions/t-rex/contracts/token/Token.sol#334) shadows:
	- OwnableUpgradeable._owner (node_modules/@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol#22) (state variable)
Token._approve(address,address,uint256)._owner (node_modules/@tokenysolutions/t-rex/contracts/token/Token.sol#579) shadows:
	- OwnableUpgradeable._owner (node_modules/@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol#22) (state variable)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#local-variable-shadowing
INFO:Detectors:
Token.init(address,address,string,string,uint8,address)._onchainID (node_modules/@tokenysolutions/t-rex/contracts/token/Token.sol#107) lacks a zero-check on :
		- _tokenOnchainID = _onchainID (node_modules/@tokenysolutions/t-rex/contracts/token/Token.sol#127)
Token.setOnchainID(address)._onchainID (node_modules/@tokenysolutions/t-rex/contracts/token/Token.sol#180) lacks a zero-check on :
		- _tokenOnchainID = _onchainID (node_modules/@tokenysolutions/t-rex/contracts/token/Token.sol#181)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#missing-zero-address-validation
INFO:Detectors:
IdentityRegistry.registerIdentity(address,IIdentity,uint16) (node_modules/@tokenysolutions/t-rex/contracts/registry/implementation/IdentityRegistry.sol#266-273) has external calls inside a loop: _tokenIdentityStorage.addIdentityToStorage(_userAddress,_identity,_country) (node_modules/@tokenysolutions/t-rex/contracts/registry/implementation/IdentityRegistry.sol#271)
IdentityRegistry.isVerified(address) (node_modules/@tokenysolutions/t-rex/contracts/registry/implementation/IdentityRegistry.sol#173-223) has external calls inside a loop: trustedIssuers = _tokenIssuersRegistry.getTrustedIssuersForClaimTopic(requiredClaimTopics[claimTopic]) (node_modules/@tokenysolutions/t-rex/contracts/registry/implementation/IdentityRegistry.sol#187-188)
IdentityRegistry.identity(address) (node_modules/@tokenysolutions/t-rex/contracts/registry/implementation/IdentityRegistry.sol#278-280) has external calls inside a loop: _tokenIdentityStorage.storedIdentity(_userAddress) (node_modules/@tokenysolutions/t-rex/contracts/registry/implementation/IdentityRegistry.sol#279)
IdentityRegistry.isVerified(address) (node_modules/@tokenysolutions/t-rex/contracts/registry/implementation/IdentityRegistry.sol#173-223) has external calls inside a loop: (foundClaimTopic,scheme,issuer,sig,data,None) = identity(_userAddress).getClaim(claimIds[j]) (node_modules/@tokenysolutions/t-rex/contracts/registry/implementation/IdentityRegistry.sol#198)
IdentityRegistry.isVerified(address) (node_modules/@tokenysolutions/t-rex/contracts/registry/implementation/IdentityRegistry.sol#173-223) has external calls inside a loop: _validity = IClaimIssuer(issuer).isClaimValid(identity(_userAddress),requiredClaimTopics[claimTopic],sig,data) (node_modules/@tokenysolutions/t-rex/contracts/registry/implementation/IdentityRegistry.sol#201-216)
Token.transfer(address,uint256) (node_modules/@tokenysolutions/t-rex/contracts/token/Token.sol#417-426) has external calls inside a loop: _tokenIdentityRegistry.isVerified(_to) && _tokenCompliance.canTransfer(msg.sender,_to,_amount) (node_modules/@tokenysolutions/t-rex/contracts/token/Token.sol#420)
Token.transfer(address,uint256) (node_modules/@tokenysolutions/t-rex/contracts/token/Token.sol#417-426) has external calls inside a loop: _tokenCompliance.transferred(msg.sender,_to,_amount) (node_modules/@tokenysolutions/t-rex/contracts/token/Token.sol#422)
Token.forcedTransfer(address,address,uint256) (node_modules/@tokenysolutions/t-rex/contracts/token/Token.sol#431-449) has external calls inside a loop: _tokenIdentityRegistry.isVerified(_to) (node_modules/@tokenysolutions/t-rex/contracts/token/Token.sol#443)
Token.forcedTransfer(address,address,uint256) (node_modules/@tokenysolutions/t-rex/contracts/token/Token.sol#431-449) has external calls inside a loop: _tokenCompliance.transferred(_from,_to,_amount) (node_modules/@tokenysolutions/t-rex/contracts/token/Token.sol#445)
Token.mint(address,uint256) (node_modules/@tokenysolutions/t-rex/contracts/token/Token.sol#454-459) has external calls inside a loop: require(bool,string)(_tokenIdentityRegistry.isVerified(_to),Identity is not verified.) (node_modules/@tokenysolutions/t-rex/contracts/token/Token.sol#455)
Token.mint(address,uint256) (node_modules/@tokenysolutions/t-rex/contracts/token/Token.sol#454-459) has external calls inside a loop: require(bool,string)(_tokenCompliance.canTransfer(address(0),_to,_amount),Compliance not followed) (node_modules/@tokenysolutions/t-rex/contracts/token/Token.sol#456)
Token.mint(address,uint256) (node_modules/@tokenysolutions/t-rex/contracts/token/Token.sol#454-459) has external calls inside a loop: _tokenCompliance.created(_to,_amount) (node_modules/@tokenysolutions/t-rex/contracts/token/Token.sol#458)
Token.burn(address,uint256) (node_modules/@tokenysolutions/t-rex/contracts/token/Token.sol#464-474) has external calls inside a loop: _tokenCompliance.destroyed(_userAddress,_amount) (node_modules/@tokenysolutions/t-rex/contracts/token/Token.sol#473)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation/#calls-inside-a-loop
INFO:Detectors:
Reentrancy in Token.recoveryAddress(address,address,address) (node_modules/@tokenysolutions/t-rex/contracts/token/Token.sol#297-322):
	External calls:
	- _tokenIdentityRegistry.registerIdentity(_newWallet,_onchainID,_tokenIdentityRegistry.investorCountry(_lostWallet)) (node_modules/@tokenysolutions/t-rex/contracts/token/Token.sol#308-309)
	- forcedTransfer(_lostWallet,_newWallet,investorTokens) (node_modules/@tokenysolutions/t-rex/contracts/token/Token.sol#310)
		- _tokenCompliance.transferred(_from,_to,_amount) (node_modules/@tokenysolutions/t-rex/contracts/token/Token.sol#445)
	State variables written after the call(s):
	- setAddressFrozen(_newWallet,true) (node_modules/@tokenysolutions/t-rex/contracts/token/Token.sol#315)
		- _frozen[_userAddress] = _freeze (node_modules/@tokenysolutions/t-rex/contracts/token/Token.sol#480)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#reentrancy-vulnerabilities-2
INFO:Detectors:
Reentrancy in IdentityRegistry.deleteIdentity(address) (node_modules/@tokenysolutions/t-rex/contracts/registry/implementation/IdentityRegistry.sol#139-143):
	External calls:
	- _tokenIdentityStorage.removeIdentityFromStorage(_userAddress) (node_modules/@tokenysolutions/t-rex/contracts/registry/implementation/IdentityRegistry.sol#141)
	Event emitted after the call(s):
	- IdentityRemoved(_userAddress,oldIdentity) (node_modules/@tokenysolutions/t-rex/contracts/registry/implementation/IdentityRegistry.sol#142)
Reentrancy in Token.init(address,address,string,string,uint8,address) (node_modules/@tokenysolutions/t-rex/contracts/token/Token.sol#100-132):
	External calls:
	- setCompliance(_compliance) (node_modules/@tokenysolutions/t-rex/contracts/token/Token.sol#130)
		- _tokenCompliance.unbindToken(address(this)) (node_modules/@tokenysolutions/t-rex/contracts/token/Token.sol#517)
		- _tokenCompliance.bindToken(address(this)) (node_modules/@tokenysolutions/t-rex/contracts/token/Token.sol#520)
	Event emitted after the call(s):
	- UpdatedTokenInformation(_tokenName,_tokenSymbol,_tokenDecimals,_TOKEN_VERSION,_tokenOnchainID) (node_modules/@tokenysolutions/t-rex/contracts/token/Token.sol#131)
Reentrancy in Token.recoveryAddress(address,address,address) (node_modules/@tokenysolutions/t-rex/contracts/token/Token.sol#297-322):
	External calls:
	- _tokenIdentityRegistry.registerIdentity(_newWallet,_onchainID,_tokenIdentityRegistry.investorCountry(_lostWallet)) (node_modules/@tokenysolutions/t-rex/contracts/token/Token.sol#308-309)
	- forcedTransfer(_lostWallet,_newWallet,investorTokens) (node_modules/@tokenysolutions/t-rex/contracts/token/Token.sol#310)
		- _tokenCompliance.transferred(_from,_to,_amount) (node_modules/@tokenysolutions/t-rex/contracts/token/Token.sol#445)
	Event emitted after the call(s):
	- AddressFrozen(_userAddress,_freeze,msg.sender) (node_modules/@tokenysolutions/t-rex/contracts/token/Token.sol#482)
		- setAddressFrozen(_newWallet,true) (node_modules/@tokenysolutions/t-rex/contracts/token/Token.sol#315)
	- TokensFrozen(_userAddress,_amount) (node_modules/@tokenysolutions/t-rex/contracts/token/Token.sol#492)
		- freezePartialTokens(_newWallet,frozenTokens) (node_modules/@tokenysolutions/t-rex/contracts/token/Token.sol#312)
	- TokensUnfrozen(_from,tokensToUnfreeze) (node_modules/@tokenysolutions/t-rex/contracts/token/Token.sol#441)
		- forcedTransfer(_lostWallet,_newWallet,investorTokens) (node_modules/@tokenysolutions/t-rex/contracts/token/Token.sol#310)
	- Transfer(_from,_to,_amount) (node_modules/@tokenysolutions/t-rex/contracts/token/Token.sol#546)
		- forcedTransfer(_lostWallet,_newWallet,investorTokens) (node_modules/@tokenysolutions/t-rex/contracts/token/Token.sol#310)
Reentrancy in Token.recoveryAddress(address,address,address) (node_modules/@tokenysolutions/t-rex/contracts/token/Token.sol#297-322):
	External calls:
	- _tokenIdentityRegistry.registerIdentity(_newWallet,_onchainID,_tokenIdentityRegistry.investorCountry(_lostWallet)) (node_modules/@tokenysolutions/t-rex/contracts/token/Token.sol#308-309)
	- forcedTransfer(_lostWallet,_newWallet,investorTokens) (node_modules/@tokenysolutions/t-rex/contracts/token/Token.sol#310)
		- _tokenCompliance.transferred(_from,_to,_amount) (node_modules/@tokenysolutions/t-rex/contracts/token/Token.sol#445)
	- _tokenIdentityRegistry.deleteIdentity(_lostWallet) (node_modules/@tokenysolutions/t-rex/contracts/token/Token.sol#317)
	Event emitted after the call(s):
	- RecoverySuccess(_lostWallet,_newWallet,_investorOnchainID) (node_modules/@tokenysolutions/t-rex/contracts/token/Token.sol#318)
Reentrancy in IdentityRegistry.registerIdentity(address,IIdentity,uint16) (node_modules/@tokenysolutions/t-rex/contracts/registry/implementation/IdentityRegistry.sol#266-273):
	External calls:
	- _tokenIdentityStorage.addIdentityToStorage(_userAddress,_identity,_country) (node_modules/@tokenysolutions/t-rex/contracts/registry/implementation/IdentityRegistry.sol#271)
	Event emitted after the call(s):
	- IdentityRegistered(_userAddress,_identity) (node_modules/@tokenysolutions/t-rex/contracts/registry/implementation/IdentityRegistry.sol#272)
Reentrancy in Token.setCompliance(address) (node_modules/@tokenysolutions/t-rex/contracts/token/Token.sol#515-522):
	External calls:
	- _tokenCompliance.unbindToken(address(this)) (node_modules/@tokenysolutions/t-rex/contracts/token/Token.sol#517)
	- _tokenCompliance.bindToken(address(this)) (node_modules/@tokenysolutions/t-rex/contracts/token/Token.sol#520)
	Event emitted after the call(s):
	- ComplianceAdded(_compliance) (node_modules/@tokenysolutions/t-rex/contracts/token/Token.sol#521)
Reentrancy in IdentityRegistry.updateCountry(address,uint16) (node_modules/@tokenysolutions/t-rex/contracts/registry/implementation/IdentityRegistry.sol#131-134):
	External calls:
	- _tokenIdentityStorage.modifyStoredInvestorCountry(_userAddress,_country) (node_modules/@tokenysolutions/t-rex/contracts/registry/implementation/IdentityRegistry.sol#132)
	Event emitted after the call(s):
	- CountryUpdated(_userAddress,_country) (node_modules/@tokenysolutions/t-rex/contracts/registry/implementation/IdentityRegistry.sol#133)
Reentrancy in IdentityRegistry.updateIdentity(address,IIdentity) (node_modules/@tokenysolutions/t-rex/contracts/registry/implementation/IdentityRegistry.sol#122-126):
	External calls:
	- _tokenIdentityStorage.modifyStoredIdentity(_userAddress,_identity) (node_modules/@tokenysolutions/t-rex/contracts/registry/implementation/IdentityRegistry.sol#124)
	Event emitted after the call(s):
	- IdentityUpdated(oldIdentity,_identity) (node_modules/@tokenysolutions/t-rex/contracts/registry/implementation/IdentityRegistry.sol#125)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#reentrancy-vulnerabilities-3
INFO:Detectors:
AddressUpgradeable._revert(bytes,string) (node_modules/@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol#231-243) uses assembly
	- INLINE ASM (node_modules/@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol#236-239)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#assembly-usage
INFO:Detectors:
Token.recoveryAddress(address,address,address) (node_modules/@tokenysolutions/t-rex/contracts/token/Token.sol#297-322) compares to a boolean constant:
	-_frozen[_lostWallet] == true (node_modules/@tokenysolutions/t-rex/contracts/token/Token.sol#314)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#boolean-equality
INFO:Detectors:
Different versions of Solidity are used:
	- Version used: ['0.8.17', '^0.8.0', '^0.8.1', '^0.8.2']
	- 0.8.17 (node_modules/@onchain-id/solidity/contracts/interface/IClaimIssuer.sol#2)
	- 0.8.17 (node_modules/@onchain-id/solidity/contracts/interface/IERC734.sol#2)
	- 0.8.17 (node_modules/@onchain-id/solidity/contracts/interface/IERC735.sol#2)
	- 0.8.17 (node_modules/@onchain-id/solidity/contracts/interface/IIdentity.sol#2)
	- 0.8.17 (node_modules/@tokenysolutions/t-rex/contracts/compliance/modular/IModularCompliance.sol#63)
	- 0.8.17 (node_modules/@tokenysolutions/t-rex/contracts/registry/implementation/ClaimTopicsRegistry.sol#63)
	- 0.8.17 (node_modules/@tokenysolutions/t-rex/contracts/registry/implementation/IdentityRegistry.sol#63)
	- 0.8.17 (node_modules/@tokenysolutions/t-rex/contracts/registry/implementation/IdentityRegistryStorage.sol#63)
	- 0.8.17 (node_modules/@tokenysolutions/t-rex/contracts/registry/implementation/TrustedIssuersRegistry.sol#64)
	- 0.8.17 (node_modules/@tokenysolutions/t-rex/contracts/registry/interface/IClaimTopicsRegistry.sol#63)
	- 0.8.17 (node_modules/@tokenysolutions/t-rex/contracts/registry/interface/IIdentityRegistry.sol#63)
	- 0.8.17 (node_modules/@tokenysolutions/t-rex/contracts/registry/interface/IIdentityRegistryStorage.sol#63)
	- 0.8.17 (node_modules/@tokenysolutions/t-rex/contracts/registry/interface/ITrustedIssuersRegistry.sol#64)
	- 0.8.17 (node_modules/@tokenysolutions/t-rex/contracts/registry/storage/CTRStorage.sol#64)
	- 0.8.17 (node_modules/@tokenysolutions/t-rex/contracts/registry/storage/IRSStorage.sol#64)
	- 0.8.17 (node_modules/@tokenysolutions/t-rex/contracts/registry/storage/IRStorage.sol#64)
	- 0.8.17 (node_modules/@tokenysolutions/t-rex/contracts/registry/storage/TIRStorage.sol#64)
	- 0.8.17 (node_modules/@tokenysolutions/t-rex/contracts/roles/AgentRoleUpgradeable.sol#64)
	- 0.8.17 (node_modules/@tokenysolutions/t-rex/contracts/roles/Roles.sol#64)
	- 0.8.17 (node_modules/@tokenysolutions/t-rex/contracts/token/IToken.sol#64)
	- 0.8.17 (node_modules/@tokenysolutions/t-rex/contracts/token/Token.sol#64)
	- 0.8.17 (node_modules/@tokenysolutions/t-rex/contracts/token/TokenStorage.sol#64)
	- 0.8.17 (contracts/TREXImports_0817.sol#2)
	- 0.8.17 (contracts/_IncludeTrexToken.sol#3)
	- ^0.8.0 (node_modules/@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol#4)
	- ^0.8.0 (node_modules/@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol#4)
	- ^0.8.0 (node_modules/@openzeppelin/contracts/token/ERC20/IERC20.sol#4)
	- ^0.8.1 (node_modules/@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol#4)
	- ^0.8.2 (node_modules/@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol#4)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#different-pragma-directives-are-used
INFO:Detectors:
ClaimTopicsRegistry.removeClaimTopic(uint256) (node_modules/@tokenysolutions/t-rex/contracts/registry/implementation/ClaimTopicsRegistry.sol#91-101) has costly operations inside a loop:
	- _claimTopics.pop() (node_modules/@tokenysolutions/t-rex/contracts/registry/implementation/ClaimTopicsRegistry.sol#96)
IdentityRegistryStorage.unbindIdentityRegistry(address) (node_modules/@tokenysolutions/t-rex/contracts/registry/implementation/IdentityRegistryStorage.sol#144-157) has costly operations inside a loop:
	- _identityRegistries.pop() (node_modules/@tokenysolutions/t-rex/contracts/registry/implementation/IdentityRegistryStorage.sol#151)
TrustedIssuersRegistry.removeTrustedIssuer(IClaimIssuer) (node_modules/@tokenysolutions/t-rex/contracts/registry/implementation/TrustedIssuersRegistry.sol#98-126) has costly operations inside a loop:
	- _trustedIssuers.pop() (node_modules/@tokenysolutions/t-rex/contracts/registry/implementation/TrustedIssuersRegistry.sol#105)
Token._mint(address,uint256) (node_modules/@tokenysolutions/t-rex/contracts/token/Token.sol#552-560) has costly operations inside a loop:
	- _totalSupply = _totalSupply + _amount (node_modules/@tokenysolutions/t-rex/contracts/token/Token.sol#557)
Token._burn(address,uint256) (node_modules/@tokenysolutions/t-rex/contracts/token/Token.sol#565-573) has costly operations inside a loop:
	- _totalSupply = _totalSupply - _amount (node_modules/@tokenysolutions/t-rex/contracts/token/Token.sol#571)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#costly-operations-inside-a-loop
INFO:Detectors:
Pragma version0.8.17 (node_modules/@onchain-id/solidity/contracts/interface/IClaimIssuer.sol#2) allows old versions
Pragma version0.8.17 (node_modules/@onchain-id/solidity/contracts/interface/IERC734.sol#2) allows old versions
Pragma version0.8.17 (node_modules/@onchain-id/solidity/contracts/interface/IERC735.sol#2) allows old versions
Pragma version0.8.17 (node_modules/@onchain-id/solidity/contracts/interface/IIdentity.sol#2) allows old versions
Pragma version^0.8.0 (node_modules/@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol#4) allows old versions
Pragma version^0.8.2 (node_modules/@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol#4) allows old versions
Pragma version^0.8.1 (node_modules/@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol#4) allows old versions
Pragma version^0.8.0 (node_modules/@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol#4) allows old versions
Pragma version^0.8.0 (node_modules/@openzeppelin/contracts/token/ERC20/IERC20.sol#4) allows old versions
Pragma version0.8.17 (node_modules/@tokenysolutions/t-rex/contracts/compliance/modular/IModularCompliance.sol#63) allows old versions
Pragma version0.8.17 (node_modules/@tokenysolutions/t-rex/contracts/registry/implementation/ClaimTopicsRegistry.sol#63) allows old versions
Pragma version0.8.17 (node_modules/@tokenysolutions/t-rex/contracts/registry/implementation/IdentityRegistry.sol#63) allows old versions
Pragma version0.8.17 (node_modules/@tokenysolutions/t-rex/contracts/registry/implementation/IdentityRegistryStorage.sol#63) allows old versions
Pragma version0.8.17 (node_modules/@tokenysolutions/t-rex/contracts/registry/implementation/TrustedIssuersRegistry.sol#64) allows old versions
Pragma version0.8.17 (node_modules/@tokenysolutions/t-rex/contracts/registry/interface/IClaimTopicsRegistry.sol#63) allows old versions
Pragma version0.8.17 (node_modules/@tokenysolutions/t-rex/contracts/registry/interface/IIdentityRegistry.sol#63) allows old versions
Pragma version0.8.17 (node_modules/@tokenysolutions/t-rex/contracts/registry/interface/IIdentityRegistryStorage.sol#63) allows old versions
Pragma version0.8.17 (node_modules/@tokenysolutions/t-rex/contracts/registry/interface/ITrustedIssuersRegistry.sol#64) allows old versions
Pragma version0.8.17 (node_modules/@tokenysolutions/t-rex/contracts/registry/storage/CTRStorage.sol#64) allows old versions
Pragma version0.8.17 (node_modules/@tokenysolutions/t-rex/contracts/registry/storage/IRSStorage.sol#64) allows old versions
Pragma version0.8.17 (node_modules/@tokenysolutions/t-rex/contracts/registry/storage/IRStorage.sol#64) allows old versions
Pragma version0.8.17 (node_modules/@tokenysolutions/t-rex/contracts/registry/storage/TIRStorage.sol#64) allows old versions
Pragma version0.8.17 (node_modules/@tokenysolutions/t-rex/contracts/roles/AgentRoleUpgradeable.sol#64) allows old versions
Pragma version0.8.17 (node_modules/@tokenysolutions/t-rex/contracts/roles/Roles.sol#64) allows old versions
Pragma version0.8.17 (node_modules/@tokenysolutions/t-rex/contracts/token/IToken.sol#64) allows old versions
Pragma version0.8.17 (node_modules/@tokenysolutions/t-rex/contracts/token/Token.sol#64) allows old versions
Pragma version0.8.17 (node_modules/@tokenysolutions/t-rex/contracts/token/TokenStorage.sol#64) allows old versions
Pragma version0.8.17 (contracts/TREXImports_0817.sol#2) allows old versions
Pragma version0.8.17 (contracts/_IncludeTrexToken.sol#3) allows old versions
solc-0.8.17 is not recommended for deployment
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#incorrect-versions-of-solidity
INFO:Detectors:
Low level call in AddressUpgradeable.sendValue(address,uint256) (node_modules/@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol#64-69):
	- (success) = recipient.call{value: amount}() (node_modules/@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol#67)
Low level call in AddressUpgradeable.functionCallWithValue(address,bytes,uint256,string) (node_modules/@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol#128-137):
	- (success,returndata) = target.call{value: value}(data) (node_modules/@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol#135)
Low level call in AddressUpgradeable.functionStaticCall(address,bytes,string) (node_modules/@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol#155-162):
	- (success,returndata) = target.staticcall(data) (node_modules/@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol#160)
Low level call in AddressUpgradeable.functionDelegateCall(address,bytes,string) (node_modules/@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol#180-187):
	- (success,returndata) = target.delegatecall(data) (node_modules/@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol#185)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#low-level-calls
INFO:Detectors:
Function OwnableUpgradeable.__Ownable_init() (node_modules/@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol#29-31) is not in mixedCase
Function OwnableUpgradeable.__Ownable_init_unchained() (node_modules/@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol#33-35) is not in mixedCase
Variable OwnableUpgradeable.__gap (node_modules/@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol#94) is not in mixedCase
Function ContextUpgradeable.__Context_init() (node_modules/@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol#18-19) is not in mixedCase
Function ContextUpgradeable.__Context_init_unchained() (node_modules/@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol#21-22) is not in mixedCase
Variable ContextUpgradeable.__gap (node_modules/@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol#36) is not in mixedCase
Parameter ClaimTopicsRegistry.addClaimTopic(uint256)._claimTopic (node_modules/@tokenysolutions/t-rex/contracts/registry/implementation/ClaimTopicsRegistry.sol#78) is not in mixedCase
Parameter ClaimTopicsRegistry.removeClaimTopic(uint256)._claimTopic (node_modules/@tokenysolutions/t-rex/contracts/registry/implementation/ClaimTopicsRegistry.sol#91) is not in mixedCase
Parameter IdentityRegistry.init(address,address,address)._trustedIssuersRegistry (node_modules/@tokenysolutions/t-rex/contracts/registry/implementation/IdentityRegistry.sol#88) is not in mixedCase
Parameter IdentityRegistry.init(address,address,address)._claimTopicsRegistry (node_modules/@tokenysolutions/t-rex/contracts/registry/implementation/IdentityRegistry.sol#89) is not in mixedCase
Parameter IdentityRegistry.init(address,address,address)._identityStorage (node_modules/@tokenysolutions/t-rex/contracts/registry/implementation/IdentityRegistry.sol#90) is not in mixedCase
Parameter IdentityRegistry.batchRegisterIdentity(address[],IIdentity[],uint16[])._userAddresses (node_modules/@tokenysolutions/t-rex/contracts/registry/implementation/IdentityRegistry.sol#110) is not in mixedCase
Parameter IdentityRegistry.batchRegisterIdentity(address[],IIdentity[],uint16[])._identities (node_modules/@tokenysolutions/t-rex/contracts/registry/implementation/IdentityRegistry.sol#111) is not in mixedCase
Parameter IdentityRegistry.batchRegisterIdentity(address[],IIdentity[],uint16[])._countries (node_modules/@tokenysolutions/t-rex/contracts/registry/implementation/IdentityRegistry.sol#112) is not in mixedCase
Parameter IdentityRegistry.updateIdentity(address,IIdentity)._userAddress (node_modules/@tokenysolutions/t-rex/contracts/registry/implementation/IdentityRegistry.sol#122) is not in mixedCase
Parameter IdentityRegistry.updateIdentity(address,IIdentity)._identity (node_modules/@tokenysolutions/t-rex/contracts/registry/implementation/IdentityRegistry.sol#122) is not in mixedCase
Parameter IdentityRegistry.updateCountry(address,uint16)._userAddress (node_modules/@tokenysolutions/t-rex/contracts/registry/implementation/IdentityRegistry.sol#131) is not in mixedCase
Parameter IdentityRegistry.updateCountry(address,uint16)._country (node_modules/@tokenysolutions/t-rex/contracts/registry/implementation/IdentityRegistry.sol#131) is not in mixedCase
Parameter IdentityRegistry.deleteIdentity(address)._userAddress (node_modules/@tokenysolutions/t-rex/contracts/registry/implementation/IdentityRegistry.sol#139) is not in mixedCase
Parameter IdentityRegistry.setIdentityRegistryStorage(address)._identityRegistryStorage (node_modules/@tokenysolutions/t-rex/contracts/registry/implementation/IdentityRegistry.sol#148) is not in mixedCase
Parameter IdentityRegistry.setClaimTopicsRegistry(address)._claimTopicsRegistry (node_modules/@tokenysolutions/t-rex/contracts/registry/implementation/IdentityRegistry.sol#156) is not in mixedCase
Parameter IdentityRegistry.setTrustedIssuersRegistry(address)._trustedIssuersRegistry (node_modules/@tokenysolutions/t-rex/contracts/registry/implementation/IdentityRegistry.sol#164) is not in mixedCase
Parameter IdentityRegistry.isVerified(address)._userAddress (node_modules/@tokenysolutions/t-rex/contracts/registry/implementation/IdentityRegistry.sol#173) is not in mixedCase
Parameter IdentityRegistry.investorCountry(address)._userAddress (node_modules/@tokenysolutions/t-rex/contracts/registry/implementation/IdentityRegistry.sol#228) is not in mixedCase
Parameter IdentityRegistry.contains(address)._userAddress (node_modules/@tokenysolutions/t-rex/contracts/registry/implementation/IdentityRegistry.sol#256) is not in mixedCase
Parameter IdentityRegistry.registerIdentity(address,IIdentity,uint16)._userAddress (node_modules/@tokenysolutions/t-rex/contracts/registry/implementation/IdentityRegistry.sol#267) is not in mixedCase
Parameter IdentityRegistry.registerIdentity(address,IIdentity,uint16)._identity (node_modules/@tokenysolutions/t-rex/contracts/registry/implementation/IdentityRegistry.sol#268) is not in mixedCase
Parameter IdentityRegistry.registerIdentity(address,IIdentity,uint16)._country (node_modules/@tokenysolutions/t-rex/contracts/registry/implementation/IdentityRegistry.sol#269) is not in mixedCase
Parameter IdentityRegistry.identity(address)._userAddress (node_modules/@tokenysolutions/t-rex/contracts/registry/implementation/IdentityRegistry.sol#278) is not in mixedCase
Parameter IdentityRegistryStorage.addIdentityToStorage(address,IIdentity,uint16)._userAddress (node_modules/@tokenysolutions/t-rex/contracts/registry/implementation/IdentityRegistryStorage.sol#81) is not in mixedCase
Parameter IdentityRegistryStorage.addIdentityToStorage(address,IIdentity,uint16)._identity (node_modules/@tokenysolutions/t-rex/contracts/registry/implementation/IdentityRegistryStorage.sol#82) is not in mixedCase
Parameter IdentityRegistryStorage.addIdentityToStorage(address,IIdentity,uint16)._country (node_modules/@tokenysolutions/t-rex/contracts/registry/implementation/IdentityRegistryStorage.sol#83) is not in mixedCase
Parameter IdentityRegistryStorage.modifyStoredIdentity(address,IIdentity)._userAddress (node_modules/@tokenysolutions/t-rex/contracts/registry/implementation/IdentityRegistryStorage.sol#98) is not in mixedCase
Parameter IdentityRegistryStorage.modifyStoredIdentity(address,IIdentity)._identity (node_modules/@tokenysolutions/t-rex/contracts/registry/implementation/IdentityRegistryStorage.sol#98) is not in mixedCase
Parameter IdentityRegistryStorage.modifyStoredInvestorCountry(address,uint16)._userAddress (node_modules/@tokenysolutions/t-rex/contracts/registry/implementation/IdentityRegistryStorage.sol#112) is not in mixedCase
Parameter IdentityRegistryStorage.modifyStoredInvestorCountry(address,uint16)._country (node_modules/@tokenysolutions/t-rex/contracts/registry/implementation/IdentityRegistryStorage.sol#112) is not in mixedCase
Parameter IdentityRegistryStorage.removeIdentityFromStorage(address)._userAddress (node_modules/@tokenysolutions/t-rex/contracts/registry/implementation/IdentityRegistryStorage.sol#122) is not in mixedCase
Parameter IdentityRegistryStorage.bindIdentityRegistry(address)._identityRegistry (node_modules/@tokenysolutions/t-rex/contracts/registry/implementation/IdentityRegistryStorage.sol#133) is not in mixedCase
Parameter IdentityRegistryStorage.unbindIdentityRegistry(address)._identityRegistry (node_modules/@tokenysolutions/t-rex/contracts/registry/implementation/IdentityRegistryStorage.sol#144) is not in mixedCase
Parameter IdentityRegistryStorage.storedIdentity(address)._userAddress (node_modules/@tokenysolutions/t-rex/contracts/registry/implementation/IdentityRegistryStorage.sol#169) is not in mixedCase
Parameter IdentityRegistryStorage.storedInvestorCountry(address)._userAddress (node_modules/@tokenysolutions/t-rex/contracts/registry/implementation/IdentityRegistryStorage.sol#176) is not in mixedCase
Parameter TrustedIssuersRegistry.addTrustedIssuer(IClaimIssuer,uint256[])._trustedIssuer (node_modules/@tokenysolutions/t-rex/contracts/registry/implementation/TrustedIssuersRegistry.sol#81) is not in mixedCase
Parameter TrustedIssuersRegistry.addTrustedIssuer(IClaimIssuer,uint256[])._claimTopics (node_modules/@tokenysolutions/t-rex/contracts/registry/implementation/TrustedIssuersRegistry.sol#81) is not in mixedCase
Parameter TrustedIssuersRegistry.removeTrustedIssuer(IClaimIssuer)._trustedIssuer (node_modules/@tokenysolutions/t-rex/contracts/registry/implementation/TrustedIssuersRegistry.sol#98) is not in mixedCase
Parameter TrustedIssuersRegistry.updateIssuerClaimTopics(IClaimIssuer,uint256[])._trustedIssuer (node_modules/@tokenysolutions/t-rex/contracts/registry/implementation/TrustedIssuersRegistry.sol#131) is not in mixedCase
Parameter TrustedIssuersRegistry.updateIssuerClaimTopics(IClaimIssuer,uint256[])._claimTopics (node_modules/@tokenysolutions/t-rex/contracts/registry/implementation/TrustedIssuersRegistry.sol#131) is not in mixedCase
Parameter TrustedIssuersRegistry.isTrustedIssuer(address)._issuer (node_modules/@tokenysolutions/t-rex/contracts/registry/implementation/TrustedIssuersRegistry.sol#173) is not in mixedCase
Parameter TrustedIssuersRegistry.getTrustedIssuerClaimTopics(IClaimIssuer)._trustedIssuer (node_modules/@tokenysolutions/t-rex/contracts/registry/implementation/TrustedIssuersRegistry.sol#183) is not in mixedCase
Parameter TrustedIssuersRegistry.hasClaimTopic(address,uint256)._issuer (node_modules/@tokenysolutions/t-rex/contracts/registry/implementation/TrustedIssuersRegistry.sol#191) is not in mixedCase
Parameter TrustedIssuersRegistry.hasClaimTopic(address,uint256)._claimTopic (node_modules/@tokenysolutions/t-rex/contracts/registry/implementation/TrustedIssuersRegistry.sol#191) is not in mixedCase
Variable CTRStorage.__gap (node_modules/@tokenysolutions/t-rex/contracts/registry/storage/CTRStorage.sol#74) is not in mixedCase
Variable IRSStorage.__gap (node_modules/@tokenysolutions/t-rex/contracts/registry/storage/IRSStorage.sol#84) is not in mixedCase
Variable IRStorage.__gap (node_modules/@tokenysolutions/t-rex/contracts/registry/storage/IRStorage.sol#84) is not in mixedCase
Variable TIRStorage.__gap (node_modules/@tokenysolutions/t-rex/contracts/registry/storage/TIRStorage.sol#82) is not in mixedCase
Parameter AgentRoleUpgradeable.addAgent(address)._agent (node_modules/@tokenysolutions/t-rex/contracts/roles/AgentRoleUpgradeable.sol#83) is not in mixedCase
Parameter AgentRoleUpgradeable.removeAgent(address)._agent (node_modules/@tokenysolutions/t-rex/contracts/roles/AgentRoleUpgradeable.sol#89) is not in mixedCase
Parameter AgentRoleUpgradeable.isAgent(address)._agent (node_modules/@tokenysolutions/t-rex/contracts/roles/AgentRoleUpgradeable.sol#95) is not in mixedCase
Parameter Token.init(address,address,string,string,uint8,address)._identityRegistry (node_modules/@tokenysolutions/t-rex/contracts/token/Token.sol#101) is not in mixedCase
Parameter Token.init(address,address,string,string,uint8,address)._compliance (node_modules/@tokenysolutions/t-rex/contracts/token/Token.sol#102) is not in mixedCase
Parameter Token.init(address,address,string,string,uint8,address)._name (node_modules/@tokenysolutions/t-rex/contracts/token/Token.sol#103) is not in mixedCase
Parameter Token.init(address,address,string,string,uint8,address)._symbol (node_modules/@tokenysolutions/t-rex/contracts/token/Token.sol#104) is not in mixedCase
Parameter Token.init(address,address,string,string,uint8,address)._decimals (node_modules/@tokenysolutions/t-rex/contracts/token/Token.sol#105) is not in mixedCase
Parameter Token.init(address,address,string,string,uint8,address)._onchainID (node_modules/@tokenysolutions/t-rex/contracts/token/Token.sol#107) is not in mixedCase
Parameter Token.approve(address,uint256)._spender (node_modules/@tokenysolutions/t-rex/contracts/token/Token.sol#137) is not in mixedCase
Parameter Token.approve(address,uint256)._amount (node_modules/@tokenysolutions/t-rex/contracts/token/Token.sol#137) is not in mixedCase
Parameter Token.increaseAllowance(address,uint256)._spender (node_modules/@tokenysolutions/t-rex/contracts/token/Token.sol#145) is not in mixedCase
Parameter Token.increaseAllowance(address,uint256)._addedValue (node_modules/@tokenysolutions/t-rex/contracts/token/Token.sol#145) is not in mixedCase
Parameter Token.decreaseAllowance(address,uint256)._spender (node_modules/@tokenysolutions/t-rex/contracts/token/Token.sol#153) is not in mixedCase
Parameter Token.decreaseAllowance(address,uint256)._subtractedValue (node_modules/@tokenysolutions/t-rex/contracts/token/Token.sol#153) is not in mixedCase
Parameter Token.setName(string)._name (node_modules/@tokenysolutions/t-rex/contracts/token/Token.sol#161) is not in mixedCase
Parameter Token.setSymbol(string)._symbol (node_modules/@tokenysolutions/t-rex/contracts/token/Token.sol#170) is not in mixedCase
Parameter Token.setOnchainID(address)._onchainID (node_modules/@tokenysolutions/t-rex/contracts/token/Token.sol#180) is not in mixedCase
Parameter Token.batchTransfer(address[],uint256[])._toList (node_modules/@tokenysolutions/t-rex/contracts/token/Token.sol#204) is not in mixedCase
Parameter Token.batchTransfer(address[],uint256[])._amounts (node_modules/@tokenysolutions/t-rex/contracts/token/Token.sol#204) is not in mixedCase
Parameter Token.transferFrom(address,address,uint256)._from (node_modules/@tokenysolutions/t-rex/contracts/token/Token.sol#221) is not in mixedCase
Parameter Token.transferFrom(address,address,uint256)._to (node_modules/@tokenysolutions/t-rex/contracts/token/Token.sol#222) is not in mixedCase
Parameter Token.transferFrom(address,address,uint256)._amount (node_modules/@tokenysolutions/t-rex/contracts/token/Token.sol#223) is not in mixedCase
Parameter Token.batchForcedTransfer(address[],address[],uint256[])._fromList (node_modules/@tokenysolutions/t-rex/contracts/token/Token.sol#240) is not in mixedCase
Parameter Token.batchForcedTransfer(address[],address[],uint256[])._toList (node_modules/@tokenysolutions/t-rex/contracts/token/Token.sol#241) is not in mixedCase
Parameter Token.batchForcedTransfer(address[],address[],uint256[])._amounts (node_modules/@tokenysolutions/t-rex/contracts/token/Token.sol#242) is not in mixedCase
Parameter Token.batchMint(address[],uint256[])._toList (node_modules/@tokenysolutions/t-rex/contracts/token/Token.sol#252) is not in mixedCase
Parameter Token.batchMint(address[],uint256[])._amounts (node_modules/@tokenysolutions/t-rex/contracts/token/Token.sol#252) is not in mixedCase
Parameter Token.batchBurn(address[],uint256[])._userAddresses (node_modules/@tokenysolutions/t-rex/contracts/token/Token.sol#261) is not in mixedCase
Parameter Token.batchBurn(address[],uint256[])._amounts (node_modules/@tokenysolutions/t-rex/contracts/token/Token.sol#261) is not in mixedCase
Parameter Token.batchSetAddressFrozen(address[],bool[])._userAddresses (node_modules/@tokenysolutions/t-rex/contracts/token/Token.sol#270) is not in mixedCase
Parameter Token.batchSetAddressFrozen(address[],bool[])._freeze (node_modules/@tokenysolutions/t-rex/contracts/token/Token.sol#270) is not in mixedCase
Parameter Token.batchFreezePartialTokens(address[],uint256[])._userAddresses (node_modules/@tokenysolutions/t-rex/contracts/token/Token.sol#279) is not in mixedCase
Parameter Token.batchFreezePartialTokens(address[],uint256[])._amounts (node_modules/@tokenysolutions/t-rex/contracts/token/Token.sol#279) is not in mixedCase
Parameter Token.batchUnfreezePartialTokens(address[],uint256[])._userAddresses (node_modules/@tokenysolutions/t-rex/contracts/token/Token.sol#288) is not in mixedCase
Parameter Token.batchUnfreezePartialTokens(address[],uint256[])._amounts (node_modules/@tokenysolutions/t-rex/contracts/token/Token.sol#288) is not in mixedCase
Parameter Token.recoveryAddress(address,address,address)._lostWallet (node_modules/@tokenysolutions/t-rex/contracts/token/Token.sol#298) is not in mixedCase
Parameter Token.recoveryAddress(address,address,address)._newWallet (node_modules/@tokenysolutions/t-rex/contracts/token/Token.sol#299) is not in mixedCase
Parameter Token.recoveryAddress(address,address,address)._investorOnchainID (node_modules/@tokenysolutions/t-rex/contracts/token/Token.sol#300) is not in mixedCase
Parameter Token.allowance(address,address)._owner (node_modules/@tokenysolutions/t-rex/contracts/token/Token.sol#334) is not in mixedCase
Parameter Token.allowance(address,address)._spender (node_modules/@tokenysolutions/t-rex/contracts/token/Token.sol#334) is not in mixedCase
Parameter Token.isFrozen(address)._userAddress (node_modules/@tokenysolutions/t-rex/contracts/token/Token.sol#362) is not in mixedCase
Parameter Token.getFrozenTokens(address)._userAddress (node_modules/@tokenysolutions/t-rex/contracts/token/Token.sol#369) is not in mixedCase
Parameter Token.transfer(address,uint256)._to (node_modules/@tokenysolutions/t-rex/contracts/token/Token.sol#417) is not in mixedCase
Parameter Token.transfer(address,uint256)._amount (node_modules/@tokenysolutions/t-rex/contracts/token/Token.sol#417) is not in mixedCase
Parameter Token.forcedTransfer(address,address,uint256)._from (node_modules/@tokenysolutions/t-rex/contracts/token/Token.sol#432) is not in mixedCase
Parameter Token.forcedTransfer(address,address,uint256)._to (node_modules/@tokenysolutions/t-rex/contracts/token/Token.sol#433) is not in mixedCase
Parameter Token.forcedTransfer(address,address,uint256)._amount (node_modules/@tokenysolutions/t-rex/contracts/token/Token.sol#434) is not in mixedCase
Parameter Token.mint(address,uint256)._to (node_modules/@tokenysolutions/t-rex/contracts/token/Token.sol#454) is not in mixedCase
Parameter Token.mint(address,uint256)._amount (node_modules/@tokenysolutions/t-rex/contracts/token/Token.sol#454) is not in mixedCase
Parameter Token.burn(address,uint256)._userAddress (node_modules/@tokenysolutions/t-rex/contracts/token/Token.sol#464) is not in mixedCase
Parameter Token.burn(address,uint256)._amount (node_modules/@tokenysolutions/t-rex/contracts/token/Token.sol#464) is not in mixedCase
Parameter Token.setAddressFrozen(address,bool)._userAddress (node_modules/@tokenysolutions/t-rex/contracts/token/Token.sol#479) is not in mixedCase
Parameter Token.setAddressFrozen(address,bool)._freeze (node_modules/@tokenysolutions/t-rex/contracts/token/Token.sol#479) is not in mixedCase
Parameter Token.freezePartialTokens(address,uint256)._userAddress (node_modules/@tokenysolutions/t-rex/contracts/token/Token.sol#488) is not in mixedCase
Parameter Token.freezePartialTokens(address,uint256)._amount (node_modules/@tokenysolutions/t-rex/contracts/token/Token.sol#488) is not in mixedCase
Parameter Token.unfreezePartialTokens(address,uint256)._userAddress (node_modules/@tokenysolutions/t-rex/contracts/token/Token.sol#498) is not in mixedCase
Parameter Token.unfreezePartialTokens(address,uint256)._amount (node_modules/@tokenysolutions/t-rex/contracts/token/Token.sol#498) is not in mixedCase
Parameter Token.setIdentityRegistry(address)._identityRegistry (node_modules/@tokenysolutions/t-rex/contracts/token/Token.sol#507) is not in mixedCase
Parameter Token.setCompliance(address)._compliance (node_modules/@tokenysolutions/t-rex/contracts/token/Token.sol#515) is not in mixedCase
Parameter Token.balanceOf(address)._userAddress (node_modules/@tokenysolutions/t-rex/contracts/token/Token.sol#527) is not in mixedCase
Variable TokenStorage.__gap (node_modules/@tokenysolutions/t-rex/contracts/token/TokenStorage.sol#97) is not in mixedCase
Contract __IncludeTrexToken (contracts/_IncludeTrexToken.sol#5-6) is not in CapWords
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#conformance-to-solidity-naming-conventions
INFO:Detectors:
Variable TrustedIssuersRegistry.hasClaimTopic(address,uint256)._claimTopic (node_modules/@tokenysolutions/t-rex/contracts/registry/implementation/TrustedIssuersRegistry.sol#191) is too similar to TrustedIssuersRegistry.hasClaimTopic(address,uint256).claimTopics (node_modules/@tokenysolutions/t-rex/contracts/registry/implementation/TrustedIssuersRegistry.sol#193)
Variable ITrustedIssuersRegistry.hasClaimTopic(address,uint256)._claimTopic (node_modules/@tokenysolutions/t-rex/contracts/registry/interface/ITrustedIssuersRegistry.sol#161) is too similar to TrustedIssuersRegistry.hasClaimTopic(address,uint256).claimTopics (node_modules/@tokenysolutions/t-rex/contracts/registry/implementation/TrustedIssuersRegistry.sol#193)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#variable-names-too-similar
INFO:Slither:. analyzed (28 contracts with 94 detectors), 191 result(s) found
