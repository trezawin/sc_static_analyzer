{
  "$schema": "https://raw.githubusercontent.com/oasis-tcs/sarif-spec/master/Schemata/sarif-schema-2.1.0.json",
  "version": "2.1.0",
  "runs": [
    {
      "tool": {
        "driver": {
          "name": "Slither",
          "informationUri": "https://github.com/crytic/slither",
          "version": "0.10.1",
          "rules": [
            {
              "id": "1-1-reentrancy-no-eth",
              "name": "reentrancy-no-eth",
              "properties": {
                "precision": "high",
                "security-severity": "4.0"
              },
              "shortDescription": {
                "text": "Reentrancy vulnerabilities"
              },
              "help": {
                "text": "Apply the [`check-effects-interactions` pattern](http://solidity.readthedocs.io/en/v0.4.21/security-considerations.html#re-entrancy)."
              }
            },
            {
              "id": "1-0-tautology",
              "name": "tautology",
              "properties": {
                "precision": "very-high",
                "security-severity": "4.0"
              },
              "shortDescription": {
                "text": "Tautology or contradiction"
              },
              "help": {
                "text": "Fix the incorrect comparison by changing the value type or the comparison."
              }
            },
            {
              "id": "1-1-unused-return",
              "name": "unused-return",
              "properties": {
                "precision": "high",
                "security-severity": "4.0"
              },
              "shortDescription": {
                "text": "Unused return"
              },
              "help": {
                "text": "Ensure that all the return values of the function calls are used."
              }
            },
            {
              "id": "2-0-shadowing-local",
              "name": "shadowing-local",
              "properties": {
                "precision": "very-high",
                "security-severity": "3.0"
              },
              "shortDescription": {
                "text": "Local variable shadowing"
              },
              "help": {
                "text": "Rename the local variables that shadow another component."
              }
            },
            {
              "id": "2-1-missing-zero-check",
              "name": "missing-zero-check",
              "properties": {
                "precision": "high",
                "security-severity": "3.0"
              },
              "shortDescription": {
                "text": "Missing zero address validation"
              },
              "help": {
                "text": "Check that the address is not zero."
              }
            },
            {
              "id": "2-1-calls-loop",
              "name": "calls-loop",
              "properties": {
                "precision": "high",
                "security-severity": "3.0"
              },
              "shortDescription": {
                "text": "Calls inside a loop"
              },
              "help": {
                "text": "Favor [pull over push](https://github.com/ethereum/wiki/wiki/Safety#favor-pull-over-push-for-external-calls) strategy for external calls."
              }
            },
            {
              "id": "2-1-reentrancy-benign",
              "name": "reentrancy-benign",
              "properties": {
                "precision": "high",
                "security-severity": "3.0"
              },
              "shortDescription": {
                "text": "Reentrancy vulnerabilities"
              },
              "help": {
                "text": "Apply the [`check-effects-interactions` pattern](http://solidity.readthedocs.io/en/v0.4.21/security-considerations.html#re-entrancy)."
              }
            },
            {
              "id": "2-1-reentrancy-events",
              "name": "reentrancy-events",
              "properties": {
                "precision": "high",
                "security-severity": "3.0"
              },
              "shortDescription": {
                "text": "Reentrancy vulnerabilities"
              },
              "help": {
                "text": "Apply the [`check-effects-interactions` pattern](https://docs.soliditylang.org/en/latest/security-considerations.html#re-entrancy)."
              }
            },
            {
              "id": "3-0-assembly",
              "name": "assembly",
              "properties": {
                "precision": "very-high",
                "security-severity": "0.0"
              },
              "shortDescription": {
                "text": "Assembly usage"
              },
              "help": {
                "text": "Do not use `evm` assembly."
              }
            },
            {
              "id": "3-0-boolean-equal",
              "name": "boolean-equal",
              "properties": {
                "precision": "very-high",
                "security-severity": "0.0"
              },
              "shortDescription": {
                "text": "Boolean equality"
              },
              "help": {
                "text": "Remove the equality to the boolean constant."
              }
            },
            {
              "id": "3-0-pragma",
              "name": "pragma",
              "properties": {
                "precision": "very-high",
                "security-severity": "0.0"
              },
              "shortDescription": {
                "text": "Different pragma directives are used"
              },
              "help": {
                "text": "Use one Solidity version."
              }
            },
            {
              "id": "3-1-costly-loop",
              "name": "costly-loop",
              "properties": {
                "precision": "high",
                "security-severity": "0.0"
              },
              "shortDescription": {
                "text": "Costly operations inside a loop"
              },
              "help": {
                "text": "Use a local variable to hold the loop computation result."
              }
            },
            {
              "id": "3-0-solc-version",
              "name": "solc-version",
              "properties": {
                "precision": "very-high",
                "security-severity": "0.0"
              },
              "shortDescription": {
                "text": "Incorrect versions of Solidity"
              },
              "help": {
                "text": "\nDeploy with any of the following Solidity versions:\n- 0.8.18\n\nThe recommendations take into account:\n- Risks related to recent releases\n- Risks of complex code generation changes\n- Risks of new language features\n- Risks of known bugs\n\nUse a simple pragma version that allows any of these versions.\nConsider using the latest version of Solidity for testing."
              }
            },
            {
              "id": "3-0-low-level-calls",
              "name": "low-level-calls",
              "properties": {
                "precision": "very-high",
                "security-severity": "0.0"
              },
              "shortDescription": {
                "text": "Low-level calls"
              },
              "help": {
                "text": "Avoid low-level calls. Check the call success. If the call is meant for a contract, check for code existence."
              }
            },
            {
              "id": "3-0-naming-convention",
              "name": "naming-convention",
              "properties": {
                "precision": "very-high",
                "security-severity": "0.0"
              },
              "shortDescription": {
                "text": "Conformance to Solidity naming conventions"
              },
              "help": {
                "text": "Follow the Solidity [naming convention](https://solidity.readthedocs.io/en/v0.4.25/style-guide.html#naming-conventions)."
              }
            },
            {
              "id": "3-1-similar-names",
              "name": "similar-names",
              "properties": {
                "precision": "high",
                "security-severity": "0.0"
              },
              "shortDescription": {
                "text": "Variable names too similar"
              },
              "help": {
                "text": "Prevent variables from having similar names."
              }
            }
          ]
        }
      },
      "results": [
        {
          "ruleId": "1-1-reentrancy-no-eth",
          "message": {
            "text": "Reentrancy in Token.setCompliance(address) (node_modules/@tokenysolutions/t-rex/contracts/token/Token.sol#515-522):\n\tExternal calls:\n\t- _tokenCompliance.unbindToken(address(this)) (node_modules/@tokenysolutions/t-rex/contracts/token/Token.sol#517)\n\tState variables written after the call(s):\n\t- _tokenCompliance = IModularCompliance(_compliance) (node_modules/@tokenysolutions/t-rex/contracts/token/Token.sol#519)\n\tTokenStorage._tokenCompliance (node_modules/@tokenysolutions/t-rex/contracts/token/TokenStorage.sol#91) can be used in cross function reentrancies:\n\t- Token.burn(address,uint256) (node_modules/@tokenysolutions/t-rex/contracts/token/Token.sol#464-474)\n\t- Token.compliance() (node_modules/@tokenysolutions/t-rex/contracts/token/Token.sol#348-350)\n\t- Token.forcedTransfer(address,address,uint256) (node_modules/@tokenysolutions/t-rex/contracts/token/Token.sol#431-449)\n\t- Token.mint(address,uint256) (node_modules/@tokenysolutions/t-rex/contracts/token/Token.sol#454-459)\n\t- Token.setCompliance(address) (node_modules/@tokenysolutions/t-rex/contracts/token/Token.sol#515-522)\n\t- Token.transfer(address,uint256) (node_modules/@tokenysolutions/t-rex/contracts/token/Token.sol#417-426)\n\t- Token.transferFrom(address,address,uint256) (node_modules/@tokenysolutions/t-rex/contracts/token/Token.sol#220-234)\n",
            "markdown": "Reentrancy in [Token.setCompliance(address)](node_modules/@tokenysolutions/t-rex/contracts/token/Token.sol#L515-L522):\n\tExternal calls:\n\t- [_tokenCompliance.unbindToken(address(this))](node_modules/@tokenysolutions/t-rex/contracts/token/Token.sol#L517)\n\tState variables written after the call(s):\n\t- [_tokenCompliance = IModularCompliance(_compliance)](node_modules/@tokenysolutions/t-rex/contracts/token/Token.sol#L519)\n\t[TokenStorage._tokenCompliance](node_modules/@tokenysolutions/t-rex/contracts/token/TokenStorage.sol#L91) can be used in cross function reentrancies:\n\t- [Token.burn(address,uint256)](node_modules/@tokenysolutions/t-rex/contracts/token/Token.sol#L464-L474)\n\t- [Token.compliance()](node_modules/@tokenysolutions/t-rex/contracts/token/Token.sol#L348-L350)\n\t- [Token.forcedTransfer(address,address,uint256)](node_modules/@tokenysolutions/t-rex/contracts/token/Token.sol#L431-L449)\n\t- [Token.mint(address,uint256)](node_modules/@tokenysolutions/t-rex/contracts/token/Token.sol#L454-L459)\n\t- [Token.setCompliance(address)](node_modules/@tokenysolutions/t-rex/contracts/token/Token.sol#L515-L522)\n\t- [Token.transfer(address,uint256)](node_modules/@tokenysolutions/t-rex/contracts/token/Token.sol#L417-L426)\n\t- [Token.transferFrom(address,address,uint256)](node_modules/@tokenysolutions/t-rex/contracts/token/Token.sol#L220-L234)\n"
          },
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "node_modules/@tokenysolutions/t-rex/contracts/token/Token.sol"
                },
                "region": {
                  "startLine": 515,
                  "endLine": 522
                }
              }
            }
          ],
          "partialFingerprints": {
            "id": "4be793ef7b8d34e29f44b397e35ed8a1857dc07543dec0836661a11d1410db4b"
          }
        },
        {
          "ruleId": "1-1-reentrancy-no-eth",
          "message": {
            "text": "Reentrancy in Token.recoveryAddress(address,address,address) (node_modules/@tokenysolutions/t-rex/contracts/token/Token.sol#297-322):\n\tExternal calls:\n\t- _tokenIdentityRegistry.registerIdentity(_newWallet,_onchainID,_tokenIdentityRegistry.investorCountry(_lostWallet)) (node_modules/@tokenysolutions/t-rex/contracts/token/Token.sol#308-309)\n\t- forcedTransfer(_lostWallet,_newWallet,investorTokens) (node_modules/@tokenysolutions/t-rex/contracts/token/Token.sol#310)\n\t\t- _tokenCompliance.transferred(_from,_to,_amount) (node_modules/@tokenysolutions/t-rex/contracts/token/Token.sol#445)\n\tState variables written after the call(s):\n\t- forcedTransfer(_lostWallet,_newWallet,investorTokens) (node_modules/@tokenysolutions/t-rex/contracts/token/Token.sol#310)\n\t\t- _balances[_from] = _balances[_from] - _amount (node_modules/@tokenysolutions/t-rex/contracts/token/Token.sol#544)\n\t\t- _balances[_to] = _balances[_to] + _amount (node_modules/@tokenysolutions/t-rex/contracts/token/Token.sol#545)\n\tTokenStorage._balances (node_modules/@tokenysolutions/t-rex/contracts/token/TokenStorage.sol#70) can be used in cross function reentrancies:\n\t- Token._burn(address,uint256) (node_modules/@tokenysolutions/t-rex/contracts/token/Token.sol#565-573)\n\t- Token._mint(address,uint256) (node_modules/@tokenysolutions/t-rex/contracts/token/Token.sol#552-560)\n\t- Token._transfer(address,address,uint256) (node_modules/@tokenysolutions/t-rex/contracts/token/Token.sol#534-547)\n\t- Token.balanceOf(address) (node_modules/@tokenysolutions/t-rex/contracts/token/Token.sol#527-529)\n\t- forcedTransfer(_lostWallet,_newWallet,investorTokens) (node_modules/@tokenysolutions/t-rex/contracts/token/Token.sol#310)\n\t\t- _frozenTokens[_from] = _frozenTokens[_from] - (tokensToUnfreeze) (node_modules/@tokenysolutions/t-rex/contracts/token/Token.sol#440)\n\tTokenStorage._frozenTokens (node_modules/@tokenysolutions/t-rex/contracts/token/TokenStorage.sol#83) can be used in cross function reentrancies:\n\t- Token.burn(address,uint256) (node_modules/@tokenysolutions/t-rex/contracts/token/Token.sol#464-474)\n\t- Token.forcedTransfer(address,address,uint256) (node_modules/@tokenysolutions/t-rex/contracts/token/Token.sol#431-449)\n\t- Token.freezePartialTokens(address,uint256) (node_modules/@tokenysolutions/t-rex/contracts/token/Token.sol#488-493)\n\t- Token.getFrozenTokens(address) (node_modules/@tokenysolutions/t-rex/contracts/token/Token.sol#369-371)\n\t- Token.recoveryAddress(address,address,address) (node_modules/@tokenysolutions/t-rex/contracts/token/Token.sol#297-322)\n\t- Token.transfer(address,uint256) (node_modules/@tokenysolutions/t-rex/contracts/token/Token.sol#417-426)\n\t- Token.transferFrom(address,address,uint256) (node_modules/@tokenysolutions/t-rex/contracts/token/Token.sol#220-234)\n\t- Token.unfreezePartialTokens(address,uint256) (node_modules/@tokenysolutions/t-rex/contracts/token/Token.sol#498-502)\n\t- freezePartialTokens(_newWallet,frozenTokens) (node_modules/@tokenysolutions/t-rex/contracts/token/Token.sol#312)\n\t\t- _frozenTokens[_userAddress] = _frozenTokens[_userAddress] + (_amount) (node_modules/@tokenysolutions/t-rex/contracts/token/Token.sol#491)\n\tTokenStorage._frozenTokens (node_modules/@tokenysolutions/t-rex/contracts/token/TokenStorage.sol#83) can be used in cross function reentrancies:\n\t- Token.burn(address,uint256) (node_modules/@tokenysolutions/t-rex/contracts/token/Token.sol#464-474)\n\t- Token.forcedTransfer(address,address,uint256) (node_modules/@tokenysolutions/t-rex/contracts/token/Token.sol#431-449)\n\t- Token.freezePartialTokens(address,uint256) (node_modules/@tokenysolutions/t-rex/contracts/token/Token.sol#488-493)\n\t- Token.getFrozenTokens(address) (node_modules/@tokenysolutions/t-rex/contracts/token/Token.sol#369-371)\n\t- Token.recoveryAddress(address,address,address) (node_modules/@tokenysolutions/t-rex/contracts/token/Token.sol#297-322)\n\t- Token.transfer(address,uint256) (node_modules/@tokenysolutions/t-rex/contracts/token/Token.sol#417-426)\n\t- Token.transferFrom(address,address,uint256) (node_modules/@tokenysolutions/t-rex/contracts/token/Token.sol#220-234)\n\t- Token.unfreezePartialTokens(address,uint256) (node_modules/@tokenysolutions/t-rex/contracts/token/Token.sol#498-502)\n",
            "markdown": "Reentrancy in [Token.recoveryAddress(address,address,address)](node_modules/@tokenysolutions/t-rex/contracts/token/Token.sol#L297-L322):\n\tExternal calls:\n\t- [_tokenIdentityRegistry.registerIdentity(_newWallet,_onchainID,_tokenIdentityRegistry.investorCountry(_lostWallet))](node_modules/@tokenysolutions/t-rex/contracts/token/Token.sol#L308-L309)\n\t- [forcedTransfer(_lostWallet,_newWallet,investorTokens)](node_modules/@tokenysolutions/t-rex/contracts/token/Token.sol#L310)\n\t\t- [_tokenCompliance.transferred(_from,_to,_amount)](node_modules/@tokenysolutions/t-rex/contracts/token/Token.sol#L445)\n\tState variables written after the call(s):\n\t- [forcedTransfer(_lostWallet,_newWallet,investorTokens)](node_modules/@tokenysolutions/t-rex/contracts/token/Token.sol#L310)\n\t\t- [_balances[_from] = _balances[_from] - _amount](node_modules/@tokenysolutions/t-rex/contracts/token/Token.sol#L544)\n\t\t- [_balances[_to] = _balances[_to] + _amount](node_modules/@tokenysolutions/t-rex/contracts/token/Token.sol#L545)\n\t[TokenStorage._balances](node_modules/@tokenysolutions/t-rex/contracts/token/TokenStorage.sol#L70) can be used in cross function reentrancies:\n\t- [Token._burn(address,uint256)](node_modules/@tokenysolutions/t-rex/contracts/token/Token.sol#L565-L573)\n\t- [Token._mint(address,uint256)](node_modules/@tokenysolutions/t-rex/contracts/token/Token.sol#L552-L560)\n\t- [Token._transfer(address,address,uint256)](node_modules/@tokenysolutions/t-rex/contracts/token/Token.sol#L534-L547)\n\t- [Token.balanceOf(address)](node_modules/@tokenysolutions/t-rex/contracts/token/Token.sol#L527-L529)\n\t- [forcedTransfer(_lostWallet,_newWallet,investorTokens)](node_modules/@tokenysolutions/t-rex/contracts/token/Token.sol#L310)\n\t\t- [_frozenTokens[_from] = _frozenTokens[_from] - (tokensToUnfreeze)](node_modules/@tokenysolutions/t-rex/contracts/token/Token.sol#L440)\n\t[TokenStorage._frozenTokens](node_modules/@tokenysolutions/t-rex/contracts/token/TokenStorage.sol#L83) can be used in cross function reentrancies:\n\t- [Token.burn(address,uint256)](node_modules/@tokenysolutions/t-rex/contracts/token/Token.sol#L464-L474)\n\t- [Token.forcedTransfer(address,address,uint256)](node_modules/@tokenysolutions/t-rex/contracts/token/Token.sol#L431-L449)\n\t- [Token.freezePartialTokens(address,uint256)](node_modules/@tokenysolutions/t-rex/contracts/token/Token.sol#L488-L493)\n\t- [Token.getFrozenTokens(address)](node_modules/@tokenysolutions/t-rex/contracts/token/Token.sol#L369-L371)\n\t- [Token.recoveryAddress(address,address,address)](node_modules/@tokenysolutions/t-rex/contracts/token/Token.sol#L297-L322)\n\t- [Token.transfer(address,uint256)](node_modules/@tokenysolutions/t-rex/contracts/token/Token.sol#L417-L426)\n\t- [Token.transferFrom(address,address,uint256)](node_modules/@tokenysolutions/t-rex/contracts/token/Token.sol#L220-L234)\n\t- [Token.unfreezePartialTokens(address,uint256)](node_modules/@tokenysolutions/t-rex/contracts/token/Token.sol#L498-L502)\n\t- [freezePartialTokens(_newWallet,frozenTokens)](node_modules/@tokenysolutions/t-rex/contracts/token/Token.sol#L312)\n\t\t- [_frozenTokens[_userAddress] = _frozenTokens[_userAddress] + (_amount)](node_modules/@tokenysolutions/t-rex/contracts/token/Token.sol#L491)\n\t[TokenStorage._frozenTokens](node_modules/@tokenysolutions/t-rex/contracts/token/TokenStorage.sol#L83) can be used in cross function reentrancies:\n\t- [Token.burn(address,uint256)](node_modules/@tokenysolutions/t-rex/contracts/token/Token.sol#L464-L474)\n\t- [Token.forcedTransfer(address,address,uint256)](node_modules/@tokenysolutions/t-rex/contracts/token/Token.sol#L431-L449)\n\t- [Token.freezePartialTokens(address,uint256)](node_modules/@tokenysolutions/t-rex/contracts/token/Token.sol#L488-L493)\n\t- [Token.getFrozenTokens(address)](node_modules/@tokenysolutions/t-rex/contracts/token/Token.sol#L369-L371)\n\t- [Token.recoveryAddress(address,address,address)](node_modules/@tokenysolutions/t-rex/contracts/token/Token.sol#L297-L322)\n\t- [Token.transfer(address,uint256)](node_modules/@tokenysolutions/t-rex/contracts/token/Token.sol#L417-L426)\n\t- [Token.transferFrom(address,address,uint256)](node_modules/@tokenysolutions/t-rex/contracts/token/Token.sol#L220-L234)\n\t- [Token.unfreezePartialTokens(address,uint256)](node_modules/@tokenysolutions/t-rex/contracts/token/Token.sol#L498-L502)\n"
          },
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "node_modules/@tokenysolutions/t-rex/contracts/token/Token.sol"
                },
                "region": {
                  "startLine": 297,
                  "endLine": 322
                }
              }
            }
          ],
          "partialFingerprints": {
            "id": "fbc801e5ddf5d24495095f0e492f2dfee50358b5c9f43ac35458dbf10878ffb0"
          }
        },
        {
          "ruleId": "1-0-tautology",
          "message": {
            "text": "Token.init(address,address,string,string,uint8,address) (node_modules/@tokenysolutions/t-rex/contracts/token/Token.sol#100-132) contains a tautology or contradiction:\n\t- require(bool,string)(0 <= _decimals && _decimals <= 18,decimals between 0 and 18) (node_modules/@tokenysolutions/t-rex/contracts/token/Token.sol#122)\n",
            "markdown": "[Token.init(address,address,string,string,uint8,address)](node_modules/@tokenysolutions/t-rex/contracts/token/Token.sol#L100-L132) contains a tautology or contradiction:\n\t- [require(bool,string)(0 <= _decimals && _decimals <= 18,decimals between 0 and 18)](node_modules/@tokenysolutions/t-rex/contracts/token/Token.sol#L122)\n"
          },
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "node_modules/@tokenysolutions/t-rex/contracts/token/Token.sol"
                },
                "region": {
                  "startLine": 100,
                  "endLine": 132
                }
              }
            }
          ],
          "partialFingerprints": {
            "id": "e9010e2d8f6a5c6fd431f29f982280a18a403802029cf0f42d6c0fda7dc68d45"
          }
        },
        {
          "ruleId": "1-1-unused-return",
          "message": {
            "text": "IdentityRegistry.isVerified(address) (node_modules/@tokenysolutions/t-rex/contracts/registry/implementation/IdentityRegistry.sol#173-223) ignores return value by (foundClaimTopic,scheme,issuer,sig,data,None) = identity(_userAddress).getClaim(claimIds[j]) (node_modules/@tokenysolutions/t-rex/contracts/registry/implementation/IdentityRegistry.sol#198)\n",
            "markdown": "[IdentityRegistry.isVerified(address)](node_modules/@tokenysolutions/t-rex/contracts/registry/implementation/IdentityRegistry.sol#L173-L223) ignores return value by [(foundClaimTopic,scheme,issuer,sig,data,None) = identity(_userAddress).getClaim(claimIds[j])](node_modules/@tokenysolutions/t-rex/contracts/registry/implementation/IdentityRegistry.sol#L198)\n"
          },
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "node_modules/@tokenysolutions/t-rex/contracts/registry/implementation/IdentityRegistry.sol"
                },
                "region": {
                  "startLine": 173,
                  "endLine": 223
                }
              }
            }
          ],
          "partialFingerprints": {
            "id": "0804184949f2eb2628363503b8ba925dc61d3f938f05311a2a6652a31a7c714e"
          }
        },
        {
          "ruleId": "2-0-shadowing-local",
          "message": {
            "text": "Token.allowance(address,address)._owner (node_modules/@tokenysolutions/t-rex/contracts/token/Token.sol#334) shadows:\n\t- OwnableUpgradeable._owner (node_modules/@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol#22) (state variable)\n",
            "markdown": "[Token.allowance(address,address)._owner](node_modules/@tokenysolutions/t-rex/contracts/token/Token.sol#L334) shadows:\n\t- [OwnableUpgradeable._owner](node_modules/@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol#L22) (state variable)\n"
          },
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "node_modules/@tokenysolutions/t-rex/contracts/token/Token.sol"
                },
                "region": {
                  "startLine": 334,
                  "endLine": 334
                }
              }
            }
          ],
          "partialFingerprints": {
            "id": "84df8e4560455f4e169b21ce23426adf49224e5a57d894b33a22274047c8882e"
          }
        },
        {
          "ruleId": "2-0-shadowing-local",
          "message": {
            "text": "Token._approve(address,address,uint256)._owner (node_modules/@tokenysolutions/t-rex/contracts/token/Token.sol#579) shadows:\n\t- OwnableUpgradeable._owner (node_modules/@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol#22) (state variable)\n",
            "markdown": "[Token._approve(address,address,uint256)._owner](node_modules/@tokenysolutions/t-rex/contracts/token/Token.sol#L579) shadows:\n\t- [OwnableUpgradeable._owner](node_modules/@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol#L22) (state variable)\n"
          },
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "node_modules/@tokenysolutions/t-rex/contracts/token/Token.sol"
                },
                "region": {
                  "startLine": 579,
                  "endLine": 579
                }
              }
            }
          ],
          "partialFingerprints": {
            "id": "a3a73b91ad9e4192d07bf8e4eb03317cded3fcc0b781f75695ef2ca89f59f5f8"
          }
        },
        {
          "ruleId": "2-1-missing-zero-check",
          "message": {
            "text": "Token.init(address,address,string,string,uint8,address)._onchainID (node_modules/@tokenysolutions/t-rex/contracts/token/Token.sol#107) lacks a zero-check on :\n\t\t- _tokenOnchainID = _onchainID (node_modules/@tokenysolutions/t-rex/contracts/token/Token.sol#127)\n",
            "markdown": "[Token.init(address,address,string,string,uint8,address)._onchainID](node_modules/@tokenysolutions/t-rex/contracts/token/Token.sol#L107) lacks a zero-check on :\n\t\t- [_tokenOnchainID = _onchainID](node_modules/@tokenysolutions/t-rex/contracts/token/Token.sol#L127)\n"
          },
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "node_modules/@tokenysolutions/t-rex/contracts/token/Token.sol"
                },
                "region": {
                  "startLine": 107,
                  "endLine": 107
                }
              }
            }
          ],
          "partialFingerprints": {
            "id": "5376b7279bd0bc3ae42f66f97b2e86db4af2470bb32c356af7bb3ff54cbcebf8"
          }
        },
        {
          "ruleId": "2-1-missing-zero-check",
          "message": {
            "text": "Token.setOnchainID(address)._onchainID (node_modules/@tokenysolutions/t-rex/contracts/token/Token.sol#180) lacks a zero-check on :\n\t\t- _tokenOnchainID = _onchainID (node_modules/@tokenysolutions/t-rex/contracts/token/Token.sol#181)\n",
            "markdown": "[Token.setOnchainID(address)._onchainID](node_modules/@tokenysolutions/t-rex/contracts/token/Token.sol#L180) lacks a zero-check on :\n\t\t- [_tokenOnchainID = _onchainID](node_modules/@tokenysolutions/t-rex/contracts/token/Token.sol#L181)\n"
          },
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "node_modules/@tokenysolutions/t-rex/contracts/token/Token.sol"
                },
                "region": {
                  "startLine": 180,
                  "endLine": 180
                }
              }
            }
          ],
          "partialFingerprints": {
            "id": "ff16f20148a9b7d0674b7e21628acc34c55a004165b3fd57cf151f485088a8c4"
          }
        },
        {
          "ruleId": "2-1-calls-loop",
          "message": {
            "text": "Token.mint(address,uint256) (node_modules/@tokenysolutions/t-rex/contracts/token/Token.sol#454-459) has external calls inside a loop: require(bool,string)(_tokenCompliance.canTransfer(address(0),_to,_amount),Compliance not followed) (node_modules/@tokenysolutions/t-rex/contracts/token/Token.sol#456)\n",
            "markdown": "[Token.mint(address,uint256)](node_modules/@tokenysolutions/t-rex/contracts/token/Token.sol#L454-L459) has external calls inside a loop: [require(bool,string)(_tokenCompliance.canTransfer(address(0),_to,_amount),Compliance not followed)](node_modules/@tokenysolutions/t-rex/contracts/token/Token.sol#L456)\n"
          },
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "node_modules/@tokenysolutions/t-rex/contracts/token/Token.sol"
                },
                "region": {
                  "startLine": 454,
                  "endLine": 459
                }
              }
            }
          ],
          "partialFingerprints": {
            "id": "079330323d1240900e584b05b588d40aa68d531397101c6c50085d99815d7790"
          }
        },
        {
          "ruleId": "2-1-calls-loop",
          "message": {
            "text": "IdentityRegistry.isVerified(address) (node_modules/@tokenysolutions/t-rex/contracts/registry/implementation/IdentityRegistry.sol#173-223) has external calls inside a loop: trustedIssuers = _tokenIssuersRegistry.getTrustedIssuersForClaimTopic(requiredClaimTopics[claimTopic]) (node_modules/@tokenysolutions/t-rex/contracts/registry/implementation/IdentityRegistry.sol#187-188)\n",
            "markdown": "[IdentityRegistry.isVerified(address)](node_modules/@tokenysolutions/t-rex/contracts/registry/implementation/IdentityRegistry.sol#L173-L223) has external calls inside a loop: [trustedIssuers = _tokenIssuersRegistry.getTrustedIssuersForClaimTopic(requiredClaimTopics[claimTopic])](node_modules/@tokenysolutions/t-rex/contracts/registry/implementation/IdentityRegistry.sol#L187-L188)\n"
          },
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "node_modules/@tokenysolutions/t-rex/contracts/registry/implementation/IdentityRegistry.sol"
                },
                "region": {
                  "startLine": 173,
                  "endLine": 223
                }
              }
            }
          ],
          "partialFingerprints": {
            "id": "4195eed7ae83244bf226d35474ea6c4c8707b2934d46a6c46b966713391c51db"
          }
        },
        {
          "ruleId": "2-1-calls-loop",
          "message": {
            "text": "IdentityRegistry.identity(address) (node_modules/@tokenysolutions/t-rex/contracts/registry/implementation/IdentityRegistry.sol#278-280) has external calls inside a loop: _tokenIdentityStorage.storedIdentity(_userAddress) (node_modules/@tokenysolutions/t-rex/contracts/registry/implementation/IdentityRegistry.sol#279)\n",
            "markdown": "[IdentityRegistry.identity(address)](node_modules/@tokenysolutions/t-rex/contracts/registry/implementation/IdentityRegistry.sol#L278-L280) has external calls inside a loop: [_tokenIdentityStorage.storedIdentity(_userAddress)](node_modules/@tokenysolutions/t-rex/contracts/registry/implementation/IdentityRegistry.sol#L279)\n"
          },
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "node_modules/@tokenysolutions/t-rex/contracts/registry/implementation/IdentityRegistry.sol"
                },
                "region": {
                  "startLine": 278,
                  "endLine": 280
                }
              }
            }
          ],
          "partialFingerprints": {
            "id": "5a9bbfdeb4922896dd89d89ec10e7095a1c630b3a00ecbf8905eabc43f7be494"
          }
        },
        {
          "ruleId": "2-1-calls-loop",
          "message": {
            "text": "Token.forcedTransfer(address,address,uint256) (node_modules/@tokenysolutions/t-rex/contracts/token/Token.sol#431-449) has external calls inside a loop: _tokenCompliance.transferred(_from,_to,_amount) (node_modules/@tokenysolutions/t-rex/contracts/token/Token.sol#445)\n",
            "markdown": "[Token.forcedTransfer(address,address,uint256)](node_modules/@tokenysolutions/t-rex/contracts/token/Token.sol#L431-L449) has external calls inside a loop: [_tokenCompliance.transferred(_from,_to,_amount)](node_modules/@tokenysolutions/t-rex/contracts/token/Token.sol#L445)\n"
          },
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "node_modules/@tokenysolutions/t-rex/contracts/token/Token.sol"
                },
                "region": {
                  "startLine": 431,
                  "endLine": 449
                }
              }
            }
          ],
          "partialFingerprints": {
            "id": "6d524fd10241059e20a1c893406a800105a3c1fd32af84cb97ff68821141f8d9"
          }
        },
        {
          "ruleId": "2-1-calls-loop",
          "message": {
            "text": "Token.transfer(address,uint256) (node_modules/@tokenysolutions/t-rex/contracts/token/Token.sol#417-426) has external calls inside a loop: _tokenIdentityRegistry.isVerified(_to) && _tokenCompliance.canTransfer(msg.sender,_to,_amount) (node_modules/@tokenysolutions/t-rex/contracts/token/Token.sol#420)\n",
            "markdown": "[Token.transfer(address,uint256)](node_modules/@tokenysolutions/t-rex/contracts/token/Token.sol#L417-L426) has external calls inside a loop: [_tokenIdentityRegistry.isVerified(_to) && _tokenCompliance.canTransfer(msg.sender,_to,_amount)](node_modules/@tokenysolutions/t-rex/contracts/token/Token.sol#L420)\n"
          },
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "node_modules/@tokenysolutions/t-rex/contracts/token/Token.sol"
                },
                "region": {
                  "startLine": 417,
                  "endLine": 426
                }
              }
            }
          ],
          "partialFingerprints": {
            "id": "75f3d0a401f66e360dec1ddb9772d8838c0e5a31ebd600321c0bcc86c929a353"
          }
        },
        {
          "ruleId": "2-1-calls-loop",
          "message": {
            "text": "IdentityRegistry.isVerified(address) (node_modules/@tokenysolutions/t-rex/contracts/registry/implementation/IdentityRegistry.sol#173-223) has external calls inside a loop: _validity = IClaimIssuer(issuer).isClaimValid(identity(_userAddress),requiredClaimTopics[claimTopic],sig,data) (node_modules/@tokenysolutions/t-rex/contracts/registry/implementation/IdentityRegistry.sol#201-216)\n",
            "markdown": "[IdentityRegistry.isVerified(address)](node_modules/@tokenysolutions/t-rex/contracts/registry/implementation/IdentityRegistry.sol#L173-L223) has external calls inside a loop: [_validity = IClaimIssuer(issuer).isClaimValid(identity(_userAddress),requiredClaimTopics[claimTopic],sig,data)](node_modules/@tokenysolutions/t-rex/contracts/registry/implementation/IdentityRegistry.sol#L201-L216)\n"
          },
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "node_modules/@tokenysolutions/t-rex/contracts/registry/implementation/IdentityRegistry.sol"
                },
                "region": {
                  "startLine": 173,
                  "endLine": 223
                }
              }
            }
          ],
          "partialFingerprints": {
            "id": "8c18237c3b0ae66e7e5d62706f042566e5bfefd3363a28e5293d668a74fb2600"
          }
        },
        {
          "ruleId": "2-1-calls-loop",
          "message": {
            "text": "Token.mint(address,uint256) (node_modules/@tokenysolutions/t-rex/contracts/token/Token.sol#454-459) has external calls inside a loop: _tokenCompliance.created(_to,_amount) (node_modules/@tokenysolutions/t-rex/contracts/token/Token.sol#458)\n",
            "markdown": "[Token.mint(address,uint256)](node_modules/@tokenysolutions/t-rex/contracts/token/Token.sol#L454-L459) has external calls inside a loop: [_tokenCompliance.created(_to,_amount)](node_modules/@tokenysolutions/t-rex/contracts/token/Token.sol#L458)\n"
          },
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "node_modules/@tokenysolutions/t-rex/contracts/token/Token.sol"
                },
                "region": {
                  "startLine": 454,
                  "endLine": 459
                }
              }
            }
          ],
          "partialFingerprints": {
            "id": "91587e0ebf2318bae54be56ad3a893e8e4a8080ec9d156e77f8b0d154bbc6f44"
          }
        },
        {
          "ruleId": "2-1-calls-loop",
          "message": {
            "text": "Token.mint(address,uint256) (node_modules/@tokenysolutions/t-rex/contracts/token/Token.sol#454-459) has external calls inside a loop: require(bool,string)(_tokenIdentityRegistry.isVerified(_to),Identity is not verified.) (node_modules/@tokenysolutions/t-rex/contracts/token/Token.sol#455)\n",
            "markdown": "[Token.mint(address,uint256)](node_modules/@tokenysolutions/t-rex/contracts/token/Token.sol#L454-L459) has external calls inside a loop: [require(bool,string)(_tokenIdentityRegistry.isVerified(_to),Identity is not verified.)](node_modules/@tokenysolutions/t-rex/contracts/token/Token.sol#L455)\n"
          },
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "node_modules/@tokenysolutions/t-rex/contracts/token/Token.sol"
                },
                "region": {
                  "startLine": 454,
                  "endLine": 459
                }
              }
            }
          ],
          "partialFingerprints": {
            "id": "9e4a8ae5fd31832dc7183330d97a99b21d215afe0b34ac64af6dd60767d7abd4"
          }
        },
        {
          "ruleId": "2-1-calls-loop",
          "message": {
            "text": "IdentityRegistry.registerIdentity(address,IIdentity,uint16) (node_modules/@tokenysolutions/t-rex/contracts/registry/implementation/IdentityRegistry.sol#266-273) has external calls inside a loop: _tokenIdentityStorage.addIdentityToStorage(_userAddress,_identity,_country) (node_modules/@tokenysolutions/t-rex/contracts/registry/implementation/IdentityRegistry.sol#271)\n",
            "markdown": "[IdentityRegistry.registerIdentity(address,IIdentity,uint16)](node_modules/@tokenysolutions/t-rex/contracts/registry/implementation/IdentityRegistry.sol#L266-L273) has external calls inside a loop: [_tokenIdentityStorage.addIdentityToStorage(_userAddress,_identity,_country)](node_modules/@tokenysolutions/t-rex/contracts/registry/implementation/IdentityRegistry.sol#L271)\n"
          },
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "node_modules/@tokenysolutions/t-rex/contracts/registry/implementation/IdentityRegistry.sol"
                },
                "region": {
                  "startLine": 266,
                  "endLine": 273
                }
              }
            }
          ],
          "partialFingerprints": {
            "id": "c020b6519ccd10878a1732e3d11cdb24c73b0efb8ef3bc7ae642c245bbd47efa"
          }
        },
        {
          "ruleId": "2-1-calls-loop",
          "message": {
            "text": "IdentityRegistry.isVerified(address) (node_modules/@tokenysolutions/t-rex/contracts/registry/implementation/IdentityRegistry.sol#173-223) has external calls inside a loop: (foundClaimTopic,scheme,issuer,sig,data,None) = identity(_userAddress).getClaim(claimIds[j]) (node_modules/@tokenysolutions/t-rex/contracts/registry/implementation/IdentityRegistry.sol#198)\n",
            "markdown": "[IdentityRegistry.isVerified(address)](node_modules/@tokenysolutions/t-rex/contracts/registry/implementation/IdentityRegistry.sol#L173-L223) has external calls inside a loop: [(foundClaimTopic,scheme,issuer,sig,data,None) = identity(_userAddress).getClaim(claimIds[j])](node_modules/@tokenysolutions/t-rex/contracts/registry/implementation/IdentityRegistry.sol#L198)\n"
          },
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "node_modules/@tokenysolutions/t-rex/contracts/registry/implementation/IdentityRegistry.sol"
                },
                "region": {
                  "startLine": 173,
                  "endLine": 223
                }
              }
            }
          ],
          "partialFingerprints": {
            "id": "c8f6fa67aa45d18a5be6a872417409390148033b060ccc6cf5bcbb1a1ff584ce"
          }
        },
        {
          "ruleId": "2-1-calls-loop",
          "message": {
            "text": "Token.burn(address,uint256) (node_modules/@tokenysolutions/t-rex/contracts/token/Token.sol#464-474) has external calls inside a loop: _tokenCompliance.destroyed(_userAddress,_amount) (node_modules/@tokenysolutions/t-rex/contracts/token/Token.sol#473)\n",
            "markdown": "[Token.burn(address,uint256)](node_modules/@tokenysolutions/t-rex/contracts/token/Token.sol#L464-L474) has external calls inside a loop: [_tokenCompliance.destroyed(_userAddress,_amount)](node_modules/@tokenysolutions/t-rex/contracts/token/Token.sol#L473)\n"
          },
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "node_modules/@tokenysolutions/t-rex/contracts/token/Token.sol"
                },
                "region": {
                  "startLine": 464,
                  "endLine": 474
                }
              }
            }
          ],
          "partialFingerprints": {
            "id": "cb86476e9cfd2a90b6f62b48df0d8a7a58c1d268e21fa25d82e9b6f0f315f10e"
          }
        },
        {
          "ruleId": "2-1-calls-loop",
          "message": {
            "text": "Token.forcedTransfer(address,address,uint256) (node_modules/@tokenysolutions/t-rex/contracts/token/Token.sol#431-449) has external calls inside a loop: _tokenIdentityRegistry.isVerified(_to) (node_modules/@tokenysolutions/t-rex/contracts/token/Token.sol#443)\n",
            "markdown": "[Token.forcedTransfer(address,address,uint256)](node_modules/@tokenysolutions/t-rex/contracts/token/Token.sol#L431-L449) has external calls inside a loop: [_tokenIdentityRegistry.isVerified(_to)](node_modules/@tokenysolutions/t-rex/contracts/token/Token.sol#L443)\n"
          },
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "node_modules/@tokenysolutions/t-rex/contracts/token/Token.sol"
                },
                "region": {
                  "startLine": 431,
                  "endLine": 449
                }
              }
            }
          ],
          "partialFingerprints": {
            "id": "eae102316049dd1605d2619bc232c36f6448f43576796d948acb43306d4cf2de"
          }
        },
        {
          "ruleId": "2-1-calls-loop",
          "message": {
            "text": "Token.transfer(address,uint256) (node_modules/@tokenysolutions/t-rex/contracts/token/Token.sol#417-426) has external calls inside a loop: _tokenCompliance.transferred(msg.sender,_to,_amount) (node_modules/@tokenysolutions/t-rex/contracts/token/Token.sol#422)\n",
            "markdown": "[Token.transfer(address,uint256)](node_modules/@tokenysolutions/t-rex/contracts/token/Token.sol#L417-L426) has external calls inside a loop: [_tokenCompliance.transferred(msg.sender,_to,_amount)](node_modules/@tokenysolutions/t-rex/contracts/token/Token.sol#L422)\n"
          },
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "node_modules/@tokenysolutions/t-rex/contracts/token/Token.sol"
                },
                "region": {
                  "startLine": 417,
                  "endLine": 426
                }
              }
            }
          ],
          "partialFingerprints": {
            "id": "ec36f73717a6e5fed1ac2a43c390be02149ddc96fa470d909cd6947428f8013f"
          }
        },
        {
          "ruleId": "2-1-reentrancy-benign",
          "message": {
            "text": "Reentrancy in Token.recoveryAddress(address,address,address) (node_modules/@tokenysolutions/t-rex/contracts/token/Token.sol#297-322):\n\tExternal calls:\n\t- _tokenIdentityRegistry.registerIdentity(_newWallet,_onchainID,_tokenIdentityRegistry.investorCountry(_lostWallet)) (node_modules/@tokenysolutions/t-rex/contracts/token/Token.sol#308-309)\n\t- forcedTransfer(_lostWallet,_newWallet,investorTokens) (node_modules/@tokenysolutions/t-rex/contracts/token/Token.sol#310)\n\t\t- _tokenCompliance.transferred(_from,_to,_amount) (node_modules/@tokenysolutions/t-rex/contracts/token/Token.sol#445)\n\tState variables written after the call(s):\n\t- setAddressFrozen(_newWallet,true) (node_modules/@tokenysolutions/t-rex/contracts/token/Token.sol#315)\n\t\t- _frozen[_userAddress] = _freeze (node_modules/@tokenysolutions/t-rex/contracts/token/Token.sol#480)\n",
            "markdown": "Reentrancy in [Token.recoveryAddress(address,address,address)](node_modules/@tokenysolutions/t-rex/contracts/token/Token.sol#L297-L322):\n\tExternal calls:\n\t- [_tokenIdentityRegistry.registerIdentity(_newWallet,_onchainID,_tokenIdentityRegistry.investorCountry(_lostWallet))](node_modules/@tokenysolutions/t-rex/contracts/token/Token.sol#L308-L309)\n\t- [forcedTransfer(_lostWallet,_newWallet,investorTokens)](node_modules/@tokenysolutions/t-rex/contracts/token/Token.sol#L310)\n\t\t- [_tokenCompliance.transferred(_from,_to,_amount)](node_modules/@tokenysolutions/t-rex/contracts/token/Token.sol#L445)\n\tState variables written after the call(s):\n\t- [setAddressFrozen(_newWallet,true)](node_modules/@tokenysolutions/t-rex/contracts/token/Token.sol#L315)\n\t\t- [_frozen[_userAddress] = _freeze](node_modules/@tokenysolutions/t-rex/contracts/token/Token.sol#L480)\n"
          },
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "node_modules/@tokenysolutions/t-rex/contracts/token/Token.sol"
                },
                "region": {
                  "startLine": 297,
                  "endLine": 322
                }
              }
            }
          ],
          "partialFingerprints": {
            "id": "8bf4da4fe6e5431529223632f91640c3b9c98e55efb83b66b1e4f988dd69f645"
          }
        },
        {
          "ruleId": "2-1-reentrancy-events",
          "message": {
            "text": "Reentrancy in Token.recoveryAddress(address,address,address) (node_modules/@tokenysolutions/t-rex/contracts/token/Token.sol#297-322):\n\tExternal calls:\n\t- _tokenIdentityRegistry.registerIdentity(_newWallet,_onchainID,_tokenIdentityRegistry.investorCountry(_lostWallet)) (node_modules/@tokenysolutions/t-rex/contracts/token/Token.sol#308-309)\n\t- forcedTransfer(_lostWallet,_newWallet,investorTokens) (node_modules/@tokenysolutions/t-rex/contracts/token/Token.sol#310)\n\t\t- _tokenCompliance.transferred(_from,_to,_amount) (node_modules/@tokenysolutions/t-rex/contracts/token/Token.sol#445)\n\tEvent emitted after the call(s):\n\t- AddressFrozen(_userAddress,_freeze,msg.sender) (node_modules/@tokenysolutions/t-rex/contracts/token/Token.sol#482)\n\t\t- setAddressFrozen(_newWallet,true) (node_modules/@tokenysolutions/t-rex/contracts/token/Token.sol#315)\n\t- TokensFrozen(_userAddress,_amount) (node_modules/@tokenysolutions/t-rex/contracts/token/Token.sol#492)\n\t\t- freezePartialTokens(_newWallet,frozenTokens) (node_modules/@tokenysolutions/t-rex/contracts/token/Token.sol#312)\n\t- TokensUnfrozen(_from,tokensToUnfreeze) (node_modules/@tokenysolutions/t-rex/contracts/token/Token.sol#441)\n\t\t- forcedTransfer(_lostWallet,_newWallet,investorTokens) (node_modules/@tokenysolutions/t-rex/contracts/token/Token.sol#310)\n\t- Transfer(_from,_to,_amount) (node_modules/@tokenysolutions/t-rex/contracts/token/Token.sol#546)\n\t\t- forcedTransfer(_lostWallet,_newWallet,investorTokens) (node_modules/@tokenysolutions/t-rex/contracts/token/Token.sol#310)\n",
            "markdown": "Reentrancy in [Token.recoveryAddress(address,address,address)](node_modules/@tokenysolutions/t-rex/contracts/token/Token.sol#L297-L322):\n\tExternal calls:\n\t- [_tokenIdentityRegistry.registerIdentity(_newWallet,_onchainID,_tokenIdentityRegistry.investorCountry(_lostWallet))](node_modules/@tokenysolutions/t-rex/contracts/token/Token.sol#L308-L309)\n\t- [forcedTransfer(_lostWallet,_newWallet,investorTokens)](node_modules/@tokenysolutions/t-rex/contracts/token/Token.sol#L310)\n\t\t- [_tokenCompliance.transferred(_from,_to,_amount)](node_modules/@tokenysolutions/t-rex/contracts/token/Token.sol#L445)\n\tEvent emitted after the call(s):\n\t- [AddressFrozen(_userAddress,_freeze,msg.sender)](node_modules/@tokenysolutions/t-rex/contracts/token/Token.sol#L482)\n\t\t- [setAddressFrozen(_newWallet,true)](node_modules/@tokenysolutions/t-rex/contracts/token/Token.sol#L315)\n\t- [TokensFrozen(_userAddress,_amount)](node_modules/@tokenysolutions/t-rex/contracts/token/Token.sol#L492)\n\t\t- [freezePartialTokens(_newWallet,frozenTokens)](node_modules/@tokenysolutions/t-rex/contracts/token/Token.sol#L312)\n\t- [TokensUnfrozen(_from,tokensToUnfreeze)](node_modules/@tokenysolutions/t-rex/contracts/token/Token.sol#L441)\n\t\t- [forcedTransfer(_lostWallet,_newWallet,investorTokens)](node_modules/@tokenysolutions/t-rex/contracts/token/Token.sol#L310)\n\t- [Transfer(_from,_to,_amount)](node_modules/@tokenysolutions/t-rex/contracts/token/Token.sol#L546)\n\t\t- [forcedTransfer(_lostWallet,_newWallet,investorTokens)](node_modules/@tokenysolutions/t-rex/contracts/token/Token.sol#L310)\n"
          },
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "node_modules/@tokenysolutions/t-rex/contracts/token/Token.sol"
                },
                "region": {
                  "startLine": 297,
                  "endLine": 322
                }
              }
            }
          ],
          "partialFingerprints": {
            "id": "0bd49cff942d8759100eca7bacf92df8142717c055bd14cd7bcf551517044a22"
          }
        },
        {
          "ruleId": "2-1-reentrancy-events",
          "message": {
            "text": "Reentrancy in IdentityRegistry.updateCountry(address,uint16) (node_modules/@tokenysolutions/t-rex/contracts/registry/implementation/IdentityRegistry.sol#131-134):\n\tExternal calls:\n\t- _tokenIdentityStorage.modifyStoredInvestorCountry(_userAddress,_country) (node_modules/@tokenysolutions/t-rex/contracts/registry/implementation/IdentityRegistry.sol#132)\n\tEvent emitted after the call(s):\n\t- CountryUpdated(_userAddress,_country) (node_modules/@tokenysolutions/t-rex/contracts/registry/implementation/IdentityRegistry.sol#133)\n",
            "markdown": "Reentrancy in [IdentityRegistry.updateCountry(address,uint16)](node_modules/@tokenysolutions/t-rex/contracts/registry/implementation/IdentityRegistry.sol#L131-L134):\n\tExternal calls:\n\t- [_tokenIdentityStorage.modifyStoredInvestorCountry(_userAddress,_country)](node_modules/@tokenysolutions/t-rex/contracts/registry/implementation/IdentityRegistry.sol#L132)\n\tEvent emitted after the call(s):\n\t- [CountryUpdated(_userAddress,_country)](node_modules/@tokenysolutions/t-rex/contracts/registry/implementation/IdentityRegistry.sol#L133)\n"
          },
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "node_modules/@tokenysolutions/t-rex/contracts/registry/implementation/IdentityRegistry.sol"
                },
                "region": {
                  "startLine": 131,
                  "endLine": 134
                }
              }
            }
          ],
          "partialFingerprints": {
            "id": "2f0a84256993b35eb457b54cea2d5d3cd510be4543650756e525d11aca8f17b3"
          }
        },
        {
          "ruleId": "2-1-reentrancy-events",
          "message": {
            "text": "Reentrancy in IdentityRegistry.updateIdentity(address,IIdentity) (node_modules/@tokenysolutions/t-rex/contracts/registry/implementation/IdentityRegistry.sol#122-126):\n\tExternal calls:\n\t- _tokenIdentityStorage.modifyStoredIdentity(_userAddress,_identity) (node_modules/@tokenysolutions/t-rex/contracts/registry/implementation/IdentityRegistry.sol#124)\n\tEvent emitted after the call(s):\n\t- IdentityUpdated(oldIdentity,_identity) (node_modules/@tokenysolutions/t-rex/contracts/registry/implementation/IdentityRegistry.sol#125)\n",
            "markdown": "Reentrancy in [IdentityRegistry.updateIdentity(address,IIdentity)](node_modules/@tokenysolutions/t-rex/contracts/registry/implementation/IdentityRegistry.sol#L122-L126):\n\tExternal calls:\n\t- [_tokenIdentityStorage.modifyStoredIdentity(_userAddress,_identity)](node_modules/@tokenysolutions/t-rex/contracts/registry/implementation/IdentityRegistry.sol#L124)\n\tEvent emitted after the call(s):\n\t- [IdentityUpdated(oldIdentity,_identity)](node_modules/@tokenysolutions/t-rex/contracts/registry/implementation/IdentityRegistry.sol#L125)\n"
          },
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "node_modules/@tokenysolutions/t-rex/contracts/registry/implementation/IdentityRegistry.sol"
                },
                "region": {
                  "startLine": 122,
                  "endLine": 126
                }
              }
            }
          ],
          "partialFingerprints": {
            "id": "4bf0478d7dd1d5d6e964a7f873de6a6bbbbcaa6610968b402bdfd9fa1129a00a"
          }
        },
        {
          "ruleId": "2-1-reentrancy-events",
          "message": {
            "text": "Reentrancy in IdentityRegistry.deleteIdentity(address) (node_modules/@tokenysolutions/t-rex/contracts/registry/implementation/IdentityRegistry.sol#139-143):\n\tExternal calls:\n\t- _tokenIdentityStorage.removeIdentityFromStorage(_userAddress) (node_modules/@tokenysolutions/t-rex/contracts/registry/implementation/IdentityRegistry.sol#141)\n\tEvent emitted after the call(s):\n\t- IdentityRemoved(_userAddress,oldIdentity) (node_modules/@tokenysolutions/t-rex/contracts/registry/implementation/IdentityRegistry.sol#142)\n",
            "markdown": "Reentrancy in [IdentityRegistry.deleteIdentity(address)](node_modules/@tokenysolutions/t-rex/contracts/registry/implementation/IdentityRegistry.sol#L139-L143):\n\tExternal calls:\n\t- [_tokenIdentityStorage.removeIdentityFromStorage(_userAddress)](node_modules/@tokenysolutions/t-rex/contracts/registry/implementation/IdentityRegistry.sol#L141)\n\tEvent emitted after the call(s):\n\t- [IdentityRemoved(_userAddress,oldIdentity)](node_modules/@tokenysolutions/t-rex/contracts/registry/implementation/IdentityRegistry.sol#L142)\n"
          },
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "node_modules/@tokenysolutions/t-rex/contracts/registry/implementation/IdentityRegistry.sol"
                },
                "region": {
                  "startLine": 139,
                  "endLine": 143
                }
              }
            }
          ],
          "partialFingerprints": {
            "id": "4d7051fb742d59a46fb46a3e84b0ef76cdb0851b9cbc2de0d1418c69076ca257"
          }
        },
        {
          "ruleId": "2-1-reentrancy-events",
          "message": {
            "text": "Reentrancy in Token.recoveryAddress(address,address,address) (node_modules/@tokenysolutions/t-rex/contracts/token/Token.sol#297-322):\n\tExternal calls:\n\t- _tokenIdentityRegistry.registerIdentity(_newWallet,_onchainID,_tokenIdentityRegistry.investorCountry(_lostWallet)) (node_modules/@tokenysolutions/t-rex/contracts/token/Token.sol#308-309)\n\t- forcedTransfer(_lostWallet,_newWallet,investorTokens) (node_modules/@tokenysolutions/t-rex/contracts/token/Token.sol#310)\n\t\t- _tokenCompliance.transferred(_from,_to,_amount) (node_modules/@tokenysolutions/t-rex/contracts/token/Token.sol#445)\n\t- _tokenIdentityRegistry.deleteIdentity(_lostWallet) (node_modules/@tokenysolutions/t-rex/contracts/token/Token.sol#317)\n\tEvent emitted after the call(s):\n\t- RecoverySuccess(_lostWallet,_newWallet,_investorOnchainID) (node_modules/@tokenysolutions/t-rex/contracts/token/Token.sol#318)\n",
            "markdown": "Reentrancy in [Token.recoveryAddress(address,address,address)](node_modules/@tokenysolutions/t-rex/contracts/token/Token.sol#L297-L322):\n\tExternal calls:\n\t- [_tokenIdentityRegistry.registerIdentity(_newWallet,_onchainID,_tokenIdentityRegistry.investorCountry(_lostWallet))](node_modules/@tokenysolutions/t-rex/contracts/token/Token.sol#L308-L309)\n\t- [forcedTransfer(_lostWallet,_newWallet,investorTokens)](node_modules/@tokenysolutions/t-rex/contracts/token/Token.sol#L310)\n\t\t- [_tokenCompliance.transferred(_from,_to,_amount)](node_modules/@tokenysolutions/t-rex/contracts/token/Token.sol#L445)\n\t- [_tokenIdentityRegistry.deleteIdentity(_lostWallet)](node_modules/@tokenysolutions/t-rex/contracts/token/Token.sol#L317)\n\tEvent emitted after the call(s):\n\t- [RecoverySuccess(_lostWallet,_newWallet,_investorOnchainID)](node_modules/@tokenysolutions/t-rex/contracts/token/Token.sol#L318)\n"
          },
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "node_modules/@tokenysolutions/t-rex/contracts/token/Token.sol"
                },
                "region": {
                  "startLine": 297,
                  "endLine": 322
                }
              }
            }
          ],
          "partialFingerprints": {
            "id": "51281c7e996a93469b1c368a5fe675d77a82403b770d96d7f73ae67ca1e524e1"
          }
        },
        {
          "ruleId": "2-1-reentrancy-events",
          "message": {
            "text": "Reentrancy in Token.init(address,address,string,string,uint8,address) (node_modules/@tokenysolutions/t-rex/contracts/token/Token.sol#100-132):\n\tExternal calls:\n\t- setCompliance(_compliance) (node_modules/@tokenysolutions/t-rex/contracts/token/Token.sol#130)\n\t\t- _tokenCompliance.unbindToken(address(this)) (node_modules/@tokenysolutions/t-rex/contracts/token/Token.sol#517)\n\t\t- _tokenCompliance.bindToken(address(this)) (node_modules/@tokenysolutions/t-rex/contracts/token/Token.sol#520)\n\tEvent emitted after the call(s):\n\t- UpdatedTokenInformation(_tokenName,_tokenSymbol,_tokenDecimals,_TOKEN_VERSION,_tokenOnchainID) (node_modules/@tokenysolutions/t-rex/contracts/token/Token.sol#131)\n",
            "markdown": "Reentrancy in [Token.init(address,address,string,string,uint8,address)](node_modules/@tokenysolutions/t-rex/contracts/token/Token.sol#L100-L132):\n\tExternal calls:\n\t- [setCompliance(_compliance)](node_modules/@tokenysolutions/t-rex/contracts/token/Token.sol#L130)\n\t\t- [_tokenCompliance.unbindToken(address(this))](node_modules/@tokenysolutions/t-rex/contracts/token/Token.sol#L517)\n\t\t- [_tokenCompliance.bindToken(address(this))](node_modules/@tokenysolutions/t-rex/contracts/token/Token.sol#L520)\n\tEvent emitted after the call(s):\n\t- [UpdatedTokenInformation(_tokenName,_tokenSymbol,_tokenDecimals,_TOKEN_VERSION,_tokenOnchainID)](node_modules/@tokenysolutions/t-rex/contracts/token/Token.sol#L131)\n"
          },
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "node_modules/@tokenysolutions/t-rex/contracts/token/Token.sol"
                },
                "region": {
                  "startLine": 100,
                  "endLine": 132
                }
              }
            }
          ],
          "partialFingerprints": {
            "id": "74143b620c2fbc0c3924c8d4f08e58acfe1a5451e716b224ebbec39b8ef206e4"
          }
        },
        {
          "ruleId": "2-1-reentrancy-events",
          "message": {
            "text": "Reentrancy in IdentityRegistry.registerIdentity(address,IIdentity,uint16) (node_modules/@tokenysolutions/t-rex/contracts/registry/implementation/IdentityRegistry.sol#266-273):\n\tExternal calls:\n\t- _tokenIdentityStorage.addIdentityToStorage(_userAddress,_identity,_country) (node_modules/@tokenysolutions/t-rex/contracts/registry/implementation/IdentityRegistry.sol#271)\n\tEvent emitted after the call(s):\n\t- IdentityRegistered(_userAddress,_identity) (node_modules/@tokenysolutions/t-rex/contracts/registry/implementation/IdentityRegistry.sol#272)\n",
            "markdown": "Reentrancy in [IdentityRegistry.registerIdentity(address,IIdentity,uint16)](node_modules/@tokenysolutions/t-rex/contracts/registry/implementation/IdentityRegistry.sol#L266-L273):\n\tExternal calls:\n\t- [_tokenIdentityStorage.addIdentityToStorage(_userAddress,_identity,_country)](node_modules/@tokenysolutions/t-rex/contracts/registry/implementation/IdentityRegistry.sol#L271)\n\tEvent emitted after the call(s):\n\t- [IdentityRegistered(_userAddress,_identity)](node_modules/@tokenysolutions/t-rex/contracts/registry/implementation/IdentityRegistry.sol#L272)\n"
          },
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "node_modules/@tokenysolutions/t-rex/contracts/registry/implementation/IdentityRegistry.sol"
                },
                "region": {
                  "startLine": 266,
                  "endLine": 273
                }
              }
            }
          ],
          "partialFingerprints": {
            "id": "75d67c0fac2b0f48ab53b8199e234c99de5d180d5efd196d333b4b451aaf2c53"
          }
        },
        {
          "ruleId": "2-1-reentrancy-events",
          "message": {
            "text": "Reentrancy in Token.setCompliance(address) (node_modules/@tokenysolutions/t-rex/contracts/token/Token.sol#515-522):\n\tExternal calls:\n\t- _tokenCompliance.unbindToken(address(this)) (node_modules/@tokenysolutions/t-rex/contracts/token/Token.sol#517)\n\t- _tokenCompliance.bindToken(address(this)) (node_modules/@tokenysolutions/t-rex/contracts/token/Token.sol#520)\n\tEvent emitted after the call(s):\n\t- ComplianceAdded(_compliance) (node_modules/@tokenysolutions/t-rex/contracts/token/Token.sol#521)\n",
            "markdown": "Reentrancy in [Token.setCompliance(address)](node_modules/@tokenysolutions/t-rex/contracts/token/Token.sol#L515-L522):\n\tExternal calls:\n\t- [_tokenCompliance.unbindToken(address(this))](node_modules/@tokenysolutions/t-rex/contracts/token/Token.sol#L517)\n\t- [_tokenCompliance.bindToken(address(this))](node_modules/@tokenysolutions/t-rex/contracts/token/Token.sol#L520)\n\tEvent emitted after the call(s):\n\t- [ComplianceAdded(_compliance)](node_modules/@tokenysolutions/t-rex/contracts/token/Token.sol#L521)\n"
          },
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "node_modules/@tokenysolutions/t-rex/contracts/token/Token.sol"
                },
                "region": {
                  "startLine": 515,
                  "endLine": 522
                }
              }
            }
          ],
          "partialFingerprints": {
            "id": "da7ca57f61bf463068a79b344032fe75543266e3a8ba8541cd2103463a911d40"
          }
        },
        {
          "ruleId": "3-0-assembly",
          "message": {
            "text": "AddressUpgradeable._revert(bytes,string) (node_modules/@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol#231-243) uses assembly\n\t- INLINE ASM (node_modules/@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol#236-239)\n",
            "markdown": "[AddressUpgradeable._revert(bytes,string)](node_modules/@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol#L231-L243) uses assembly\n\t- [INLINE ASM](node_modules/@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol#L236-L239)\n"
          },
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "node_modules/@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol"
                },
                "region": {
                  "startLine": 231,
                  "endLine": 243
                }
              }
            }
          ],
          "partialFingerprints": {
            "id": "41d98055557e70cfae51beb5c985f270243fa0aa616c6503eea9c0db2d35c447"
          }
        },
        {
          "ruleId": "3-0-boolean-equal",
          "message": {
            "text": "Token.recoveryAddress(address,address,address) (node_modules/@tokenysolutions/t-rex/contracts/token/Token.sol#297-322) compares to a boolean constant:\n\t-_frozen[_lostWallet] == true (node_modules/@tokenysolutions/t-rex/contracts/token/Token.sol#314)\n",
            "markdown": "[Token.recoveryAddress(address,address,address)](node_modules/@tokenysolutions/t-rex/contracts/token/Token.sol#L297-L322) compares to a boolean constant:\n\t-[_frozen[_lostWallet] == true](node_modules/@tokenysolutions/t-rex/contracts/token/Token.sol#L314)\n"
          },
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "node_modules/@tokenysolutions/t-rex/contracts/token/Token.sol"
                },
                "region": {
                  "startLine": 297,
                  "endLine": 322
                }
              }
            }
          ],
          "partialFingerprints": {
            "id": "6f77a7f4a0f4d345019de03f9a3492ff299270bce61973334f0da0157654a1fb"
          }
        },
        {
          "ruleId": "3-0-pragma",
          "message": {
            "text": "Different versions of Solidity are used:\n\t- Version used: ['0.8.17', '^0.8.0', '^0.8.1', '^0.8.2']\n\t- 0.8.17 (node_modules/@onchain-id/solidity/contracts/interface/IClaimIssuer.sol#2)\n\t- 0.8.17 (node_modules/@onchain-id/solidity/contracts/interface/IERC734.sol#2)\n\t- 0.8.17 (node_modules/@onchain-id/solidity/contracts/interface/IERC735.sol#2)\n\t- 0.8.17 (node_modules/@onchain-id/solidity/contracts/interface/IIdentity.sol#2)\n\t- 0.8.17 (node_modules/@tokenysolutions/t-rex/contracts/compliance/modular/IModularCompliance.sol#63)\n\t- 0.8.17 (node_modules/@tokenysolutions/t-rex/contracts/registry/implementation/ClaimTopicsRegistry.sol#63)\n\t- 0.8.17 (node_modules/@tokenysolutions/t-rex/contracts/registry/implementation/IdentityRegistry.sol#63)\n\t- 0.8.17 (node_modules/@tokenysolutions/t-rex/contracts/registry/implementation/IdentityRegistryStorage.sol#63)\n\t- 0.8.17 (node_modules/@tokenysolutions/t-rex/contracts/registry/implementation/TrustedIssuersRegistry.sol#64)\n\t- 0.8.17 (node_modules/@tokenysolutions/t-rex/contracts/registry/interface/IClaimTopicsRegistry.sol#63)\n\t- 0.8.17 (node_modules/@tokenysolutions/t-rex/contracts/registry/interface/IIdentityRegistry.sol#63)\n\t- 0.8.17 (node_modules/@tokenysolutions/t-rex/contracts/registry/interface/IIdentityRegistryStorage.sol#63)\n\t- 0.8.17 (node_modules/@tokenysolutions/t-rex/contracts/registry/interface/ITrustedIssuersRegistry.sol#64)\n\t- 0.8.17 (node_modules/@tokenysolutions/t-rex/contracts/registry/storage/CTRStorage.sol#64)\n\t- 0.8.17 (node_modules/@tokenysolutions/t-rex/contracts/registry/storage/IRSStorage.sol#64)\n\t- 0.8.17 (node_modules/@tokenysolutions/t-rex/contracts/registry/storage/IRStorage.sol#64)\n\t- 0.8.17 (node_modules/@tokenysolutions/t-rex/contracts/registry/storage/TIRStorage.sol#64)\n\t- 0.8.17 (node_modules/@tokenysolutions/t-rex/contracts/roles/AgentRoleUpgradeable.sol#64)\n\t- 0.8.17 (node_modules/@tokenysolutions/t-rex/contracts/roles/Roles.sol#64)\n\t- 0.8.17 (node_modules/@tokenysolutions/t-rex/contracts/token/IToken.sol#64)\n\t- 0.8.17 (node_modules/@tokenysolutions/t-rex/contracts/token/Token.sol#64)\n\t- 0.8.17 (node_modules/@tokenysolutions/t-rex/contracts/token/TokenStorage.sol#64)\n\t- 0.8.17 (contracts/TREXImports_0817.sol#2)\n\t- 0.8.17 (contracts/_IncludeTrexToken.sol#3)\n\t- ^0.8.0 (node_modules/@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol#4)\n\t- ^0.8.0 (node_modules/@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol#4)\n\t- ^0.8.0 (node_modules/@openzeppelin/contracts/token/ERC20/IERC20.sol#4)\n\t- ^0.8.1 (node_modules/@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol#4)\n\t- ^0.8.2 (node_modules/@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol#4)\n",
            "markdown": "Different versions of Solidity are used:\n\t- Version used: ['0.8.17', '^0.8.0', '^0.8.1', '^0.8.2']\n\t- [0.8.17](node_modules/@onchain-id/solidity/contracts/interface/IClaimIssuer.sol#L2)\n\t- [0.8.17](node_modules/@onchain-id/solidity/contracts/interface/IERC734.sol#L2)\n\t- [0.8.17](node_modules/@onchain-id/solidity/contracts/interface/IERC735.sol#L2)\n\t- [0.8.17](node_modules/@onchain-id/solidity/contracts/interface/IIdentity.sol#L2)\n\t- [0.8.17](node_modules/@tokenysolutions/t-rex/contracts/compliance/modular/IModularCompliance.sol#L63)\n\t- [0.8.17](node_modules/@tokenysolutions/t-rex/contracts/registry/implementation/ClaimTopicsRegistry.sol#L63)\n\t- [0.8.17](node_modules/@tokenysolutions/t-rex/contracts/registry/implementation/IdentityRegistry.sol#L63)\n\t- [0.8.17](node_modules/@tokenysolutions/t-rex/contracts/registry/implementation/IdentityRegistryStorage.sol#L63)\n\t- [0.8.17](node_modules/@tokenysolutions/t-rex/contracts/registry/implementation/TrustedIssuersRegistry.sol#L64)\n\t- [0.8.17](node_modules/@tokenysolutions/t-rex/contracts/registry/interface/IClaimTopicsRegistry.sol#L63)\n\t- [0.8.17](node_modules/@tokenysolutions/t-rex/contracts/registry/interface/IIdentityRegistry.sol#L63)\n\t- [0.8.17](node_modules/@tokenysolutions/t-rex/contracts/registry/interface/IIdentityRegistryStorage.sol#L63)\n\t- [0.8.17](node_modules/@tokenysolutions/t-rex/contracts/registry/interface/ITrustedIssuersRegistry.sol#L64)\n\t- [0.8.17](node_modules/@tokenysolutions/t-rex/contracts/registry/storage/CTRStorage.sol#L64)\n\t- [0.8.17](node_modules/@tokenysolutions/t-rex/contracts/registry/storage/IRSStorage.sol#L64)\n\t- [0.8.17](node_modules/@tokenysolutions/t-rex/contracts/registry/storage/IRStorage.sol#L64)\n\t- [0.8.17](node_modules/@tokenysolutions/t-rex/contracts/registry/storage/TIRStorage.sol#L64)\n\t- [0.8.17](node_modules/@tokenysolutions/t-rex/contracts/roles/AgentRoleUpgradeable.sol#L64)\n\t- [0.8.17](node_modules/@tokenysolutions/t-rex/contracts/roles/Roles.sol#L64)\n\t- [0.8.17](node_modules/@tokenysolutions/t-rex/contracts/token/IToken.sol#L64)\n\t- [0.8.17](node_modules/@tokenysolutions/t-rex/contracts/token/Token.sol#L64)\n\t- [0.8.17](node_modules/@tokenysolutions/t-rex/contracts/token/TokenStorage.sol#L64)\n\t- [0.8.17](contracts/TREXImports_0817.sol#L2)\n\t- [0.8.17](contracts/_IncludeTrexToken.sol#L3)\n\t- [^0.8.0](node_modules/@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol#L4)\n\t- [^0.8.0](node_modules/@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol#L4)\n\t- [^0.8.0](node_modules/@openzeppelin/contracts/token/ERC20/IERC20.sol#L4)\n\t- [^0.8.1](node_modules/@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol#L4)\n\t- [^0.8.2](node_modules/@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol#L4)\n"
          },
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "node_modules/@onchain-id/solidity/contracts/interface/IClaimIssuer.sol"
                },
                "region": {
                  "startLine": 2,
                  "endLine": 2
                }
              }
            }
          ],
          "partialFingerprints": {
            "id": "efa5880220558adf685604172a22cc56817642e18e6642da74d62b75216e30b9"
          }
        },
        {
          "ruleId": "3-1-costly-loop",
          "message": {
            "text": "Token._mint(address,uint256) (node_modules/@tokenysolutions/t-rex/contracts/token/Token.sol#552-560) has costly operations inside a loop:\n\t- _totalSupply = _totalSupply + _amount (node_modules/@tokenysolutions/t-rex/contracts/token/Token.sol#557)\n",
            "markdown": "[Token._mint(address,uint256)](node_modules/@tokenysolutions/t-rex/contracts/token/Token.sol#L552-L560) has costly operations inside a loop:\n\t- [_totalSupply = _totalSupply + _amount](node_modules/@tokenysolutions/t-rex/contracts/token/Token.sol#L557)\n"
          },
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "node_modules/@tokenysolutions/t-rex/contracts/token/Token.sol"
                },
                "region": {
                  "startLine": 552,
                  "endLine": 560
                }
              }
            }
          ],
          "partialFingerprints": {
            "id": "1b7a6c647923f3b8da31bfd31482f1ed3ccdd240bcbc426b1ea90d920137fbfa"
          }
        },
        {
          "ruleId": "3-1-costly-loop",
          "message": {
            "text": "TrustedIssuersRegistry.removeTrustedIssuer(IClaimIssuer) (node_modules/@tokenysolutions/t-rex/contracts/registry/implementation/TrustedIssuersRegistry.sol#98-126) has costly operations inside a loop:\n\t- _trustedIssuers.pop() (node_modules/@tokenysolutions/t-rex/contracts/registry/implementation/TrustedIssuersRegistry.sol#105)\n",
            "markdown": "[TrustedIssuersRegistry.removeTrustedIssuer(IClaimIssuer)](node_modules/@tokenysolutions/t-rex/contracts/registry/implementation/TrustedIssuersRegistry.sol#L98-L126) has costly operations inside a loop:\n\t- [_trustedIssuers.pop()](node_modules/@tokenysolutions/t-rex/contracts/registry/implementation/TrustedIssuersRegistry.sol#L105)\n"
          },
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "node_modules/@tokenysolutions/t-rex/contracts/registry/implementation/TrustedIssuersRegistry.sol"
                },
                "region": {
                  "startLine": 98,
                  "endLine": 126
                }
              }
            }
          ],
          "partialFingerprints": {
            "id": "69048731629f92daec307a74479f4e0d04d08844a0c46d4a22f2cb7eb45810fc"
          }
        },
        {
          "ruleId": "3-1-costly-loop",
          "message": {
            "text": "Token._burn(address,uint256) (node_modules/@tokenysolutions/t-rex/contracts/token/Token.sol#565-573) has costly operations inside a loop:\n\t- _totalSupply = _totalSupply - _amount (node_modules/@tokenysolutions/t-rex/contracts/token/Token.sol#571)\n",
            "markdown": "[Token._burn(address,uint256)](node_modules/@tokenysolutions/t-rex/contracts/token/Token.sol#L565-L573) has costly operations inside a loop:\n\t- [_totalSupply = _totalSupply - _amount](node_modules/@tokenysolutions/t-rex/contracts/token/Token.sol#L571)\n"
          },
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "node_modules/@tokenysolutions/t-rex/contracts/token/Token.sol"
                },
                "region": {
                  "startLine": 565,
                  "endLine": 573
                }
              }
            }
          ],
          "partialFingerprints": {
            "id": "bd9dd4fcca9877d4a6674c1fc565643d488a627f2f38a24f881f6ff16ca0fbfd"
          }
        },
        {
          "ruleId": "3-1-costly-loop",
          "message": {
            "text": "IdentityRegistryStorage.unbindIdentityRegistry(address) (node_modules/@tokenysolutions/t-rex/contracts/registry/implementation/IdentityRegistryStorage.sol#144-157) has costly operations inside a loop:\n\t- _identityRegistries.pop() (node_modules/@tokenysolutions/t-rex/contracts/registry/implementation/IdentityRegistryStorage.sol#151)\n",
            "markdown": "[IdentityRegistryStorage.unbindIdentityRegistry(address)](node_modules/@tokenysolutions/t-rex/contracts/registry/implementation/IdentityRegistryStorage.sol#L144-L157) has costly operations inside a loop:\n\t- [_identityRegistries.pop()](node_modules/@tokenysolutions/t-rex/contracts/registry/implementation/IdentityRegistryStorage.sol#L151)\n"
          },
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "node_modules/@tokenysolutions/t-rex/contracts/registry/implementation/IdentityRegistryStorage.sol"
                },
                "region": {
                  "startLine": 144,
                  "endLine": 157
                }
              }
            }
          ],
          "partialFingerprints": {
            "id": "e47c9a730dbc07baa690fb255161610bfa3a43b6b1c0b098d0774d0addf93fb2"
          }
        },
        {
          "ruleId": "3-1-costly-loop",
          "message": {
            "text": "ClaimTopicsRegistry.removeClaimTopic(uint256) (node_modules/@tokenysolutions/t-rex/contracts/registry/implementation/ClaimTopicsRegistry.sol#91-101) has costly operations inside a loop:\n\t- _claimTopics.pop() (node_modules/@tokenysolutions/t-rex/contracts/registry/implementation/ClaimTopicsRegistry.sol#96)\n",
            "markdown": "[ClaimTopicsRegistry.removeClaimTopic(uint256)](node_modules/@tokenysolutions/t-rex/contracts/registry/implementation/ClaimTopicsRegistry.sol#L91-L101) has costly operations inside a loop:\n\t- [_claimTopics.pop()](node_modules/@tokenysolutions/t-rex/contracts/registry/implementation/ClaimTopicsRegistry.sol#L96)\n"
          },
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "node_modules/@tokenysolutions/t-rex/contracts/registry/implementation/ClaimTopicsRegistry.sol"
                },
                "region": {
                  "startLine": 91,
                  "endLine": 101
                }
              }
            }
          ],
          "partialFingerprints": {
            "id": "fc8ffba299317ef3381b0e53ab40cdb999b21df2694c4dade62987391bde15a4"
          }
        },
        {
          "ruleId": "3-0-solc-version",
          "message": {
            "text": "Pragma version0.8.17 (node_modules/@tokenysolutions/t-rex/contracts/registry/implementation/TrustedIssuersRegistry.sol#64) allows old versions\n",
            "markdown": "Pragma version[0.8.17](node_modules/@tokenysolutions/t-rex/contracts/registry/implementation/TrustedIssuersRegistry.sol#L64) allows old versions\n"
          },
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "node_modules/@tokenysolutions/t-rex/contracts/registry/implementation/TrustedIssuersRegistry.sol"
                },
                "region": {
                  "startLine": 64,
                  "endLine": 64
                }
              }
            }
          ],
          "partialFingerprints": {
            "id": "0693e3648b9680d72510a2710abaacd70f5a69480b4da9108d4845e954e4182f"
          }
        },
        {
          "ruleId": "3-0-solc-version",
          "message": {
            "text": "Pragma version0.8.17 (node_modules/@onchain-id/solidity/contracts/interface/IERC735.sol#2) allows old versions\n",
            "markdown": "Pragma version[0.8.17](node_modules/@onchain-id/solidity/contracts/interface/IERC735.sol#L2) allows old versions\n"
          },
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "node_modules/@onchain-id/solidity/contracts/interface/IERC735.sol"
                },
                "region": {
                  "startLine": 2,
                  "endLine": 2
                }
              }
            }
          ],
          "partialFingerprints": {
            "id": "1bc75e64355bb5a2120471e209110ca3f66befb84a3c3d73dfe68c88c34b2008"
          }
        },
        {
          "ruleId": "3-0-solc-version",
          "message": {
            "text": "Pragma version0.8.17 (node_modules/@tokenysolutions/t-rex/contracts/token/Token.sol#64) allows old versions\n",
            "markdown": "Pragma version[0.8.17](node_modules/@tokenysolutions/t-rex/contracts/token/Token.sol#L64) allows old versions\n"
          },
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "node_modules/@tokenysolutions/t-rex/contracts/token/Token.sol"
                },
                "region": {
                  "startLine": 64,
                  "endLine": 64
                }
              }
            }
          ],
          "partialFingerprints": {
            "id": "285a44e0889069e0f6e6948a30d734e96edcfe539a03c87f2f0dcaacce30308f"
          }
        },
        {
          "ruleId": "3-0-solc-version",
          "message": {
            "text": "Pragma version0.8.17 (node_modules/@onchain-id/solidity/contracts/interface/IERC734.sol#2) allows old versions\n",
            "markdown": "Pragma version[0.8.17](node_modules/@onchain-id/solidity/contracts/interface/IERC734.sol#L2) allows old versions\n"
          },
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "node_modules/@onchain-id/solidity/contracts/interface/IERC734.sol"
                },
                "region": {
                  "startLine": 2,
                  "endLine": 2
                }
              }
            }
          ],
          "partialFingerprints": {
            "id": "2d29cc7e2905b05d73be2a5dc1b502f071bcf1a2be412af655d3a76422a2b27c"
          }
        },
        {
          "ruleId": "3-0-solc-version",
          "message": {
            "text": "Pragma version0.8.17 (node_modules/@tokenysolutions/t-rex/contracts/registry/interface/ITrustedIssuersRegistry.sol#64) allows old versions\n",
            "markdown": "Pragma version[0.8.17](node_modules/@tokenysolutions/t-rex/contracts/registry/interface/ITrustedIssuersRegistry.sol#L64) allows old versions\n"
          },
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "node_modules/@tokenysolutions/t-rex/contracts/registry/interface/ITrustedIssuersRegistry.sol"
                },
                "region": {
                  "startLine": 64,
                  "endLine": 64
                }
              }
            }
          ],
          "partialFingerprints": {
            "id": "2e7225fe9a5afdbd046b1f12c0dcb5524142487f0206c6b2a50ab0f0fb8fabb0"
          }
        },
        {
          "ruleId": "3-0-solc-version",
          "message": {
            "text": "Pragma version0.8.17 (node_modules/@onchain-id/solidity/contracts/interface/IIdentity.sol#2) allows old versions\n",
            "markdown": "Pragma version[0.8.17](node_modules/@onchain-id/solidity/contracts/interface/IIdentity.sol#L2) allows old versions\n"
          },
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "node_modules/@onchain-id/solidity/contracts/interface/IIdentity.sol"
                },
                "region": {
                  "startLine": 2,
                  "endLine": 2
                }
              }
            }
          ],
          "partialFingerprints": {
            "id": "43c53470783625a427feb1e0b2a0cf3c76e56a69cb7c8fdd85248ad95cac0423"
          }
        },
        {
          "ruleId": "3-0-solc-version",
          "message": {
            "text": "Pragma version0.8.17 (node_modules/@tokenysolutions/t-rex/contracts/registry/implementation/IdentityRegistryStorage.sol#63) allows old versions\n",
            "markdown": "Pragma version[0.8.17](node_modules/@tokenysolutions/t-rex/contracts/registry/implementation/IdentityRegistryStorage.sol#L63) allows old versions\n"
          },
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "node_modules/@tokenysolutions/t-rex/contracts/registry/implementation/IdentityRegistryStorage.sol"
                },
                "region": {
                  "startLine": 63,
                  "endLine": 63
                }
              }
            }
          ],
          "partialFingerprints": {
            "id": "48dd2691a26ab610f240ed6368f8a7fc0622c8ac1c7c99fc676a30515ae8ba98"
          }
        },
        {
          "ruleId": "3-0-solc-version",
          "message": {
            "text": "Pragma version0.8.17 (node_modules/@tokenysolutions/t-rex/contracts/token/TokenStorage.sol#64) allows old versions\n",
            "markdown": "Pragma version[0.8.17](node_modules/@tokenysolutions/t-rex/contracts/token/TokenStorage.sol#L64) allows old versions\n"
          },
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "node_modules/@tokenysolutions/t-rex/contracts/token/TokenStorage.sol"
                },
                "region": {
                  "startLine": 64,
                  "endLine": 64
                }
              }
            }
          ],
          "partialFingerprints": {
            "id": "4db38575a719cd2061ffaacc853fb278ffcf03cee8a0a20bb853d9d6aa869c12"
          }
        },
        {
          "ruleId": "3-0-solc-version",
          "message": {
            "text": "Pragma version0.8.17 (node_modules/@tokenysolutions/t-rex/contracts/roles/Roles.sol#64) allows old versions\n",
            "markdown": "Pragma version[0.8.17](node_modules/@tokenysolutions/t-rex/contracts/roles/Roles.sol#L64) allows old versions\n"
          },
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "node_modules/@tokenysolutions/t-rex/contracts/roles/Roles.sol"
                },
                "region": {
                  "startLine": 64,
                  "endLine": 64
                }
              }
            }
          ],
          "partialFingerprints": {
            "id": "5ae3edbf246b6fc78f8eefaefc277de663dbe21c81692e539ad36392a32440f4"
          }
        },
        {
          "ruleId": "3-0-solc-version",
          "message": {
            "text": "Pragma version0.8.17 (node_modules/@tokenysolutions/t-rex/contracts/roles/AgentRoleUpgradeable.sol#64) allows old versions\n",
            "markdown": "Pragma version[0.8.17](node_modules/@tokenysolutions/t-rex/contracts/roles/AgentRoleUpgradeable.sol#L64) allows old versions\n"
          },
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "node_modules/@tokenysolutions/t-rex/contracts/roles/AgentRoleUpgradeable.sol"
                },
                "region": {
                  "startLine": 64,
                  "endLine": 64
                }
              }
            }
          ],
          "partialFingerprints": {
            "id": "618a2aeecf981c74a99c46915e4c4931633f0690e6948f80bc82e25c0d7a10ce"
          }
        },
        {
          "ruleId": "3-0-solc-version",
          "message": {
            "text": "Pragma version^0.8.0 (node_modules/@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol#4) allows old versions\n",
            "markdown": "Pragma version[^0.8.0](node_modules/@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol#L4) allows old versions\n"
          },
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "node_modules/@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol"
                },
                "region": {
                  "startLine": 4,
                  "endLine": 4
                }
              }
            }
          ],
          "partialFingerprints": {
            "id": "64c7a36fb44f16abdac9a0a14b918bcae6b3a2d744ad2b65a81eddbec13cfd14"
          }
        },
        {
          "ruleId": "3-0-solc-version",
          "message": {
            "text": "Pragma version0.8.17 (contracts/_IncludeTrexToken.sol#3) allows old versions\n",
            "markdown": "Pragma version[0.8.17](contracts/_IncludeTrexToken.sol#L3) allows old versions\n"
          },
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "contracts/_IncludeTrexToken.sol"
                },
                "region": {
                  "startLine": 3,
                  "endLine": 3
                }
              }
            }
          ],
          "partialFingerprints": {
            "id": "67960f557664a3e610e33d6bcef2e55f8a74e1d20cebdee6f280446c772e3a54"
          }
        },
        {
          "ruleId": "3-0-solc-version",
          "message": {
            "text": "Pragma version0.8.17 (node_modules/@tokenysolutions/t-rex/contracts/registry/implementation/IdentityRegistry.sol#63) allows old versions\n",
            "markdown": "Pragma version[0.8.17](node_modules/@tokenysolutions/t-rex/contracts/registry/implementation/IdentityRegistry.sol#L63) allows old versions\n"
          },
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "node_modules/@tokenysolutions/t-rex/contracts/registry/implementation/IdentityRegistry.sol"
                },
                "region": {
                  "startLine": 63,
                  "endLine": 63
                }
              }
            }
          ],
          "partialFingerprints": {
            "id": "6acbdc2871a1007f2a48a44d780e7d90b51763314538399c14adb22238a74f82"
          }
        },
        {
          "ruleId": "3-0-solc-version",
          "message": {
            "text": "Pragma version0.8.17 (node_modules/@tokenysolutions/t-rex/contracts/token/IToken.sol#64) allows old versions\n",
            "markdown": "Pragma version[0.8.17](node_modules/@tokenysolutions/t-rex/contracts/token/IToken.sol#L64) allows old versions\n"
          },
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "node_modules/@tokenysolutions/t-rex/contracts/token/IToken.sol"
                },
                "region": {
                  "startLine": 64,
                  "endLine": 64
                }
              }
            }
          ],
          "partialFingerprints": {
            "id": "6e11e2408a2c1181a296b4b40be7672ecd37027f3ad884d3b35f052cab6e3b97"
          }
        },
        {
          "ruleId": "3-0-solc-version",
          "message": {
            "text": "Pragma version0.8.17 (node_modules/@onchain-id/solidity/contracts/interface/IClaimIssuer.sol#2) allows old versions\n",
            "markdown": "Pragma version[0.8.17](node_modules/@onchain-id/solidity/contracts/interface/IClaimIssuer.sol#L2) allows old versions\n"
          },
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "node_modules/@onchain-id/solidity/contracts/interface/IClaimIssuer.sol"
                },
                "region": {
                  "startLine": 2,
                  "endLine": 2
                }
              }
            }
          ],
          "partialFingerprints": {
            "id": "7530e62c9c8f90b3e5f108eb4cde8874b14e389447d1486e6cb14493eb88969e"
          }
        },
        {
          "ruleId": "3-0-solc-version",
          "message": {
            "text": "Pragma version^0.8.0 (node_modules/@openzeppelin/contracts/token/ERC20/IERC20.sol#4) allows old versions\n",
            "markdown": "Pragma version[^0.8.0](node_modules/@openzeppelin/contracts/token/ERC20/IERC20.sol#L4) allows old versions\n"
          },
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "node_modules/@openzeppelin/contracts/token/ERC20/IERC20.sol"
                },
                "region": {
                  "startLine": 4,
                  "endLine": 4
                }
              }
            }
          ],
          "partialFingerprints": {
            "id": "851a3cc70cf5a0e84cea60ba82f675bc668a61dfc08f0b82199206a5fbafb3b4"
          }
        },
        {
          "ruleId": "3-0-solc-version",
          "message": {
            "text": "Pragma version0.8.17 (node_modules/@tokenysolutions/t-rex/contracts/compliance/modular/IModularCompliance.sol#63) allows old versions\n",
            "markdown": "Pragma version[0.8.17](node_modules/@tokenysolutions/t-rex/contracts/compliance/modular/IModularCompliance.sol#L63) allows old versions\n"
          },
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "node_modules/@tokenysolutions/t-rex/contracts/compliance/modular/IModularCompliance.sol"
                },
                "region": {
                  "startLine": 63,
                  "endLine": 63
                }
              }
            }
          ],
          "partialFingerprints": {
            "id": "90c147f2014f06ffaac77394421c0d5832c6682475fae97eff078615d588ed5e"
          }
        },
        {
          "ruleId": "3-0-solc-version",
          "message": {
            "text": "Pragma version0.8.17 (node_modules/@tokenysolutions/t-rex/contracts/registry/implementation/ClaimTopicsRegistry.sol#63) allows old versions\n",
            "markdown": "Pragma version[0.8.17](node_modules/@tokenysolutions/t-rex/contracts/registry/implementation/ClaimTopicsRegistry.sol#L63) allows old versions\n"
          },
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "node_modules/@tokenysolutions/t-rex/contracts/registry/implementation/ClaimTopicsRegistry.sol"
                },
                "region": {
                  "startLine": 63,
                  "endLine": 63
                }
              }
            }
          ],
          "partialFingerprints": {
            "id": "9c7de83a51e82b3ad81e4287f61230d8f09fdcb9754c2595b9c6bc4a13faa730"
          }
        },
        {
          "ruleId": "3-0-solc-version",
          "message": {
            "text": "Pragma version0.8.17 (node_modules/@tokenysolutions/t-rex/contracts/registry/interface/IIdentityRegistryStorage.sol#63) allows old versions\n",
            "markdown": "Pragma version[0.8.17](node_modules/@tokenysolutions/t-rex/contracts/registry/interface/IIdentityRegistryStorage.sol#L63) allows old versions\n"
          },
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "node_modules/@tokenysolutions/t-rex/contracts/registry/interface/IIdentityRegistryStorage.sol"
                },
                "region": {
                  "startLine": 63,
                  "endLine": 63
                }
              }
            }
          ],
          "partialFingerprints": {
            "id": "a2cab7a514c7dfc1b3197fdb221a1db6b343e78758de609b6de5a9bfc93cdb88"
          }
        },
        {
          "ruleId": "3-0-solc-version",
          "message": {
            "text": "Pragma version0.8.17 (node_modules/@tokenysolutions/t-rex/contracts/registry/storage/CTRStorage.sol#64) allows old versions\n",
            "markdown": "Pragma version[0.8.17](node_modules/@tokenysolutions/t-rex/contracts/registry/storage/CTRStorage.sol#L64) allows old versions\n"
          },
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "node_modules/@tokenysolutions/t-rex/contracts/registry/storage/CTRStorage.sol"
                },
                "region": {
                  "startLine": 64,
                  "endLine": 64
                }
              }
            }
          ],
          "partialFingerprints": {
            "id": "c99ee67c7be384b238b5d0a2ba5d82919d385b664a004f97c247cf534e6e8e62"
          }
        },
        {
          "ruleId": "3-0-solc-version",
          "message": {
            "text": "Pragma version0.8.17 (contracts/TREXImports_0817.sol#2) allows old versions\n",
            "markdown": "Pragma version[0.8.17](contracts/TREXImports_0817.sol#L2) allows old versions\n"
          },
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "contracts/TREXImports_0817.sol"
                },
                "region": {
                  "startLine": 2,
                  "endLine": 2
                }
              }
            }
          ],
          "partialFingerprints": {
            "id": "cd63931e8c17c8a8f8b31ab9bdba18d4f764bcfa34b2f1883144b36409856959"
          }
        },
        {
          "ruleId": "3-0-solc-version",
          "message": {
            "text": "Pragma version0.8.17 (node_modules/@tokenysolutions/t-rex/contracts/registry/interface/IClaimTopicsRegistry.sol#63) allows old versions\n",
            "markdown": "Pragma version[0.8.17](node_modules/@tokenysolutions/t-rex/contracts/registry/interface/IClaimTopicsRegistry.sol#L63) allows old versions\n"
          },
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "node_modules/@tokenysolutions/t-rex/contracts/registry/interface/IClaimTopicsRegistry.sol"
                },
                "region": {
                  "startLine": 63,
                  "endLine": 63
                }
              }
            }
          ],
          "partialFingerprints": {
            "id": "cfdf069c41153d65bc0a027374cc62c4418d22312bcbf741340883b9c5b58109"
          }
        },
        {
          "ruleId": "3-0-solc-version",
          "message": {
            "text": "Pragma version0.8.17 (node_modules/@tokenysolutions/t-rex/contracts/registry/interface/IIdentityRegistry.sol#63) allows old versions\n",
            "markdown": "Pragma version[0.8.17](node_modules/@tokenysolutions/t-rex/contracts/registry/interface/IIdentityRegistry.sol#L63) allows old versions\n"
          },
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "node_modules/@tokenysolutions/t-rex/contracts/registry/interface/IIdentityRegistry.sol"
                },
                "region": {
                  "startLine": 63,
                  "endLine": 63
                }
              }
            }
          ],
          "partialFingerprints": {
            "id": "d3bbed4c1a0bf35df3d1e81da93ea4f24acd70c46bb2dd664f3c227baf207009"
          }
        },
        {
          "ruleId": "3-0-solc-version",
          "message": {
            "text": "Pragma version^0.8.2 (node_modules/@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol#4) allows old versions\n",
            "markdown": "Pragma version[^0.8.2](node_modules/@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol#L4) allows old versions\n"
          },
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "node_modules/@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol"
                },
                "region": {
                  "startLine": 4,
                  "endLine": 4
                }
              }
            }
          ],
          "partialFingerprints": {
            "id": "df5db7d467cb71fbad3cca7cef629a11b02bc8f14a74db90d7ac2cecf9dc0da6"
          }
        },
        {
          "ruleId": "3-0-solc-version",
          "message": {
            "text": "Pragma version^0.8.1 (node_modules/@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol#4) allows old versions\n",
            "markdown": "Pragma version[^0.8.1](node_modules/@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol#L4) allows old versions\n"
          },
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "node_modules/@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol"
                },
                "region": {
                  "startLine": 4,
                  "endLine": 4
                }
              }
            }
          ],
          "partialFingerprints": {
            "id": "e64ad37105cb312bce8c4abfb13684ee0f969472b655be82bca640b480c86acb"
          }
        },
        {
          "ruleId": "3-0-solc-version",
          "message": {
            "text": "Pragma version0.8.17 (node_modules/@tokenysolutions/t-rex/contracts/registry/storage/TIRStorage.sol#64) allows old versions\n",
            "markdown": "Pragma version[0.8.17](node_modules/@tokenysolutions/t-rex/contracts/registry/storage/TIRStorage.sol#L64) allows old versions\n"
          },
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "node_modules/@tokenysolutions/t-rex/contracts/registry/storage/TIRStorage.sol"
                },
                "region": {
                  "startLine": 64,
                  "endLine": 64
                }
              }
            }
          ],
          "partialFingerprints": {
            "id": "e7bb52d086752dd23c39fdb3aab961b90d5de84530d43f4533e7e88b70b3deca"
          }
        },
        {
          "ruleId": "3-0-solc-version",
          "message": {
            "text": "Pragma version^0.8.0 (node_modules/@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol#4) allows old versions\n",
            "markdown": "Pragma version[^0.8.0](node_modules/@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol#L4) allows old versions\n"
          },
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "node_modules/@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol"
                },
                "region": {
                  "startLine": 4,
                  "endLine": 4
                }
              }
            }
          ],
          "partialFingerprints": {
            "id": "e9c47fcdfa1d3ae1113c3ae2b3abd8022f7bce094dee282d48600fcba3bc4006"
          }
        },
        {
          "ruleId": "3-0-solc-version",
          "message": {
            "text": "Pragma version0.8.17 (node_modules/@tokenysolutions/t-rex/contracts/registry/storage/IRStorage.sol#64) allows old versions\n",
            "markdown": "Pragma version[0.8.17](node_modules/@tokenysolutions/t-rex/contracts/registry/storage/IRStorage.sol#L64) allows old versions\n"
          },
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "node_modules/@tokenysolutions/t-rex/contracts/registry/storage/IRStorage.sol"
                },
                "region": {
                  "startLine": 64,
                  "endLine": 64
                }
              }
            }
          ],
          "partialFingerprints": {
            "id": "e9eb81d8109b3a83d2c9c66ac7d4d2b8fbb1e05e9b2d1277c898e4136a2bdb6e"
          }
        },
        {
          "ruleId": "3-0-solc-version",
          "message": {
            "text": "Pragma version0.8.17 (node_modules/@tokenysolutions/t-rex/contracts/registry/storage/IRSStorage.sol#64) allows old versions\n",
            "markdown": "Pragma version[0.8.17](node_modules/@tokenysolutions/t-rex/contracts/registry/storage/IRSStorage.sol#L64) allows old versions\n"
          },
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "node_modules/@tokenysolutions/t-rex/contracts/registry/storage/IRSStorage.sol"
                },
                "region": {
                  "startLine": 64,
                  "endLine": 64
                }
              }
            }
          ],
          "partialFingerprints": {
            "id": "faef1f8427869d4fa0cdbffc7541ba6c27677c4c36bbb359354bfbc6e3e5ca32"
          }
        },
        {
          "ruleId": "3-0-low-level-calls",
          "message": {
            "text": "Low level call in AddressUpgradeable.functionDelegateCall(address,bytes,string) (node_modules/@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol#180-187):\n\t- (success,returndata) = target.delegatecall(data) (node_modules/@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol#185)\n",
            "markdown": "Low level call in [AddressUpgradeable.functionDelegateCall(address,bytes,string)](node_modules/@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol#L180-L187):\n\t- [(success,returndata) = target.delegatecall(data)](node_modules/@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol#L185)\n"
          },
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "node_modules/@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol"
                },
                "region": {
                  "startLine": 180,
                  "endLine": 187
                }
              }
            }
          ],
          "partialFingerprints": {
            "id": "4404c4f4c6ba2e7168eba016d20297521a807e8e2039898f140256ff429b8312"
          }
        },
        {
          "ruleId": "3-0-low-level-calls",
          "message": {
            "text": "Low level call in AddressUpgradeable.functionCallWithValue(address,bytes,uint256,string) (node_modules/@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol#128-137):\n\t- (success,returndata) = target.call{value: value}(data) (node_modules/@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol#135)\n",
            "markdown": "Low level call in [AddressUpgradeable.functionCallWithValue(address,bytes,uint256,string)](node_modules/@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol#L128-L137):\n\t- [(success,returndata) = target.call{value: value}(data)](node_modules/@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol#L135)\n"
          },
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "node_modules/@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol"
                },
                "region": {
                  "startLine": 128,
                  "endLine": 137
                }
              }
            }
          ],
          "partialFingerprints": {
            "id": "b055de1f0e32261bfc94f8376eed86e29658d2f588ddd1134abed80e6d35fadf"
          }
        },
        {
          "ruleId": "3-0-low-level-calls",
          "message": {
            "text": "Low level call in AddressUpgradeable.functionStaticCall(address,bytes,string) (node_modules/@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol#155-162):\n\t- (success,returndata) = target.staticcall(data) (node_modules/@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol#160)\n",
            "markdown": "Low level call in [AddressUpgradeable.functionStaticCall(address,bytes,string)](node_modules/@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol#L155-L162):\n\t- [(success,returndata) = target.staticcall(data)](node_modules/@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol#L160)\n"
          },
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "node_modules/@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol"
                },
                "region": {
                  "startLine": 155,
                  "endLine": 162
                }
              }
            }
          ],
          "partialFingerprints": {
            "id": "baa83774a2040bdc437f652779408968735ec53303d22392bc04bbabb86294e7"
          }
        },
        {
          "ruleId": "3-0-low-level-calls",
          "message": {
            "text": "Low level call in AddressUpgradeable.sendValue(address,uint256) (node_modules/@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol#64-69):\n\t- (success) = recipient.call{value: amount}() (node_modules/@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol#67)\n",
            "markdown": "Low level call in [AddressUpgradeable.sendValue(address,uint256)](node_modules/@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol#L64-L69):\n\t- [(success) = recipient.call{value: amount}()](node_modules/@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol#L67)\n"
          },
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "node_modules/@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol"
                },
                "region": {
                  "startLine": 64,
                  "endLine": 69
                }
              }
            }
          ],
          "partialFingerprints": {
            "id": "ef14535be070facbcddf130199fb1c430fee2cd1cb8e03a87a4d1acdbb419e17"
          }
        },
        {
          "ruleId": "3-0-naming-convention",
          "message": {
            "text": "Parameter Token.batchSetAddressFrozen(address[],bool[])._userAddresses (node_modules/@tokenysolutions/t-rex/contracts/token/Token.sol#270) is not in mixedCase\n",
            "markdown": "Parameter [Token.batchSetAddressFrozen(address[],bool[])._userAddresses](node_modules/@tokenysolutions/t-rex/contracts/token/Token.sol#L270) is not in mixedCase\n"
          },
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "node_modules/@tokenysolutions/t-rex/contracts/token/Token.sol"
                },
                "region": {
                  "startLine": 270,
                  "endLine": 270
                }
              }
            }
          ],
          "partialFingerprints": {
            "id": "014e58e0576ea97e47961e5f44836ff3929f8b28c24f861c6146ba8f1b0c7789"
          }
        },
        {
          "ruleId": "3-0-naming-convention",
          "message": {
            "text": "Parameter IdentityRegistryStorage.modifyStoredInvestorCountry(address,uint16)._userAddress (node_modules/@tokenysolutions/t-rex/contracts/registry/implementation/IdentityRegistryStorage.sol#112) is not in mixedCase\n",
            "markdown": "Parameter [IdentityRegistryStorage.modifyStoredInvestorCountry(address,uint16)._userAddress](node_modules/@tokenysolutions/t-rex/contracts/registry/implementation/IdentityRegistryStorage.sol#L112) is not in mixedCase\n"
          },
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "node_modules/@tokenysolutions/t-rex/contracts/registry/implementation/IdentityRegistryStorage.sol"
                },
                "region": {
                  "startLine": 112,
                  "endLine": 112
                }
              }
            }
          ],
          "partialFingerprints": {
            "id": "020c55e1383d49b09d3d02ff64f7dd3f1444b92ee932450101c3165ef1d78c89"
          }
        },
        {
          "ruleId": "3-0-naming-convention",
          "message": {
            "text": "Parameter IdentityRegistry.updateIdentity(address,IIdentity)._identity (node_modules/@tokenysolutions/t-rex/contracts/registry/implementation/IdentityRegistry.sol#122) is not in mixedCase\n",
            "markdown": "Parameter [IdentityRegistry.updateIdentity(address,IIdentity)._identity](node_modules/@tokenysolutions/t-rex/contracts/registry/implementation/IdentityRegistry.sol#L122) is not in mixedCase\n"
          },
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "node_modules/@tokenysolutions/t-rex/contracts/registry/implementation/IdentityRegistry.sol"
                },
                "region": {
                  "startLine": 122,
                  "endLine": 122
                }
              }
            }
          ],
          "partialFingerprints": {
            "id": "03f2da2978b1b355eca1c0c54f02b5ac29bf384bf0ca55943d41e0ce10a36476"
          }
        },
        {
          "ruleId": "3-0-naming-convention",
          "message": {
            "text": "Parameter AgentRoleUpgradeable.addAgent(address)._agent (node_modules/@tokenysolutions/t-rex/contracts/roles/AgentRoleUpgradeable.sol#83) is not in mixedCase\n",
            "markdown": "Parameter [AgentRoleUpgradeable.addAgent(address)._agent](node_modules/@tokenysolutions/t-rex/contracts/roles/AgentRoleUpgradeable.sol#L83) is not in mixedCase\n"
          },
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "node_modules/@tokenysolutions/t-rex/contracts/roles/AgentRoleUpgradeable.sol"
                },
                "region": {
                  "startLine": 83,
                  "endLine": 83
                }
              }
            }
          ],
          "partialFingerprints": {
            "id": "06bc49a038b974b7f51ad2edcedf05ba1556c18f626d921b9292913dbd3180ed"
          }
        },
        {
          "ruleId": "3-0-naming-convention",
          "message": {
            "text": "Parameter IdentityRegistryStorage.storedIdentity(address)._userAddress (node_modules/@tokenysolutions/t-rex/contracts/registry/implementation/IdentityRegistryStorage.sol#169) is not in mixedCase\n",
            "markdown": "Parameter [IdentityRegistryStorage.storedIdentity(address)._userAddress](node_modules/@tokenysolutions/t-rex/contracts/registry/implementation/IdentityRegistryStorage.sol#L169) is not in mixedCase\n"
          },
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "node_modules/@tokenysolutions/t-rex/contracts/registry/implementation/IdentityRegistryStorage.sol"
                },
                "region": {
                  "startLine": 169,
                  "endLine": 169
                }
              }
            }
          ],
          "partialFingerprints": {
            "id": "0766e75e7c0f7fca57436f848ce72da852fca8c40af60258cd8e4a576b5e55ce"
          }
        },
        {
          "ruleId": "3-0-naming-convention",
          "message": {
            "text": "Parameter Token.freezePartialTokens(address,uint256)._userAddress (node_modules/@tokenysolutions/t-rex/contracts/token/Token.sol#488) is not in mixedCase\n",
            "markdown": "Parameter [Token.freezePartialTokens(address,uint256)._userAddress](node_modules/@tokenysolutions/t-rex/contracts/token/Token.sol#L488) is not in mixedCase\n"
          },
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "node_modules/@tokenysolutions/t-rex/contracts/token/Token.sol"
                },
                "region": {
                  "startLine": 488,
                  "endLine": 488
                }
              }
            }
          ],
          "partialFingerprints": {
            "id": "093cc1b041d82714e97afb5404d3c3ff44601d57497d21b4fe8d216a4801e815"
          }
        },
        {
          "ruleId": "3-0-naming-convention",
          "message": {
            "text": "Parameter IdentityRegistryStorage.unbindIdentityRegistry(address)._identityRegistry (node_modules/@tokenysolutions/t-rex/contracts/registry/implementation/IdentityRegistryStorage.sol#144) is not in mixedCase\n",
            "markdown": "Parameter [IdentityRegistryStorage.unbindIdentityRegistry(address)._identityRegistry](node_modules/@tokenysolutions/t-rex/contracts/registry/implementation/IdentityRegistryStorage.sol#L144) is not in mixedCase\n"
          },
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "node_modules/@tokenysolutions/t-rex/contracts/registry/implementation/IdentityRegistryStorage.sol"
                },
                "region": {
                  "startLine": 144,
                  "endLine": 144
                }
              }
            }
          ],
          "partialFingerprints": {
            "id": "0ea39a058535b58d8ce0e4315eff439a379fdb0363552e9b8d3ccae829f8ff04"
          }
        },
        {
          "ruleId": "3-0-naming-convention",
          "message": {
            "text": "Variable CTRStorage.__gap (node_modules/@tokenysolutions/t-rex/contracts/registry/storage/CTRStorage.sol#74) is not in mixedCase\n",
            "markdown": "Variable [CTRStorage.__gap](node_modules/@tokenysolutions/t-rex/contracts/registry/storage/CTRStorage.sol#L74) is not in mixedCase\n"
          },
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "node_modules/@tokenysolutions/t-rex/contracts/registry/storage/CTRStorage.sol"
                },
                "region": {
                  "startLine": 74,
                  "endLine": 74
                }
              }
            }
          ],
          "partialFingerprints": {
            "id": "0f5e9de6a381b6f7ba6e2ca47f40cf09344cd8936f2a6641a2222b8b2e28b1e5"
          }
        },
        {
          "ruleId": "3-0-naming-convention",
          "message": {
            "text": "Parameter Token.decreaseAllowance(address,uint256)._spender (node_modules/@tokenysolutions/t-rex/contracts/token/Token.sol#153) is not in mixedCase\n",
            "markdown": "Parameter [Token.decreaseAllowance(address,uint256)._spender](node_modules/@tokenysolutions/t-rex/contracts/token/Token.sol#L153) is not in mixedCase\n"
          },
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "node_modules/@tokenysolutions/t-rex/contracts/token/Token.sol"
                },
                "region": {
                  "startLine": 153,
                  "endLine": 153
                }
              }
            }
          ],
          "partialFingerprints": {
            "id": "1163c1b29469e45866d74b1ef4c5a3f97266bc7222666f7bf2659719d7cac1a5"
          }
        },
        {
          "ruleId": "3-0-naming-convention",
          "message": {
            "text": "Parameter Token.recoveryAddress(address,address,address)._newWallet (node_modules/@tokenysolutions/t-rex/contracts/token/Token.sol#299) is not in mixedCase\n",
            "markdown": "Parameter [Token.recoveryAddress(address,address,address)._newWallet](node_modules/@tokenysolutions/t-rex/contracts/token/Token.sol#L299) is not in mixedCase\n"
          },
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "node_modules/@tokenysolutions/t-rex/contracts/token/Token.sol"
                },
                "region": {
                  "startLine": 299,
                  "endLine": 299
                }
              }
            }
          ],
          "partialFingerprints": {
            "id": "1359cb733675043d1ec88d414a5e25bf665cb3dc01c60e551c55101dc18620ac"
          }
        },
        {
          "ruleId": "3-0-naming-convention",
          "message": {
            "text": "Parameter IdentityRegistry.isVerified(address)._userAddress (node_modules/@tokenysolutions/t-rex/contracts/registry/implementation/IdentityRegistry.sol#173) is not in mixedCase\n",
            "markdown": "Parameter [IdentityRegistry.isVerified(address)._userAddress](node_modules/@tokenysolutions/t-rex/contracts/registry/implementation/IdentityRegistry.sol#L173) is not in mixedCase\n"
          },
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "node_modules/@tokenysolutions/t-rex/contracts/registry/implementation/IdentityRegistry.sol"
                },
                "region": {
                  "startLine": 173,
                  "endLine": 173
                }
              }
            }
          ],
          "partialFingerprints": {
            "id": "1510abd2b0850372d0fae432584aea4e9cf9472cef019b6df13d10b8874445c9"
          }
        },
        {
          "ruleId": "3-0-naming-convention",
          "message": {
            "text": "Variable IRSStorage.__gap (node_modules/@tokenysolutions/t-rex/contracts/registry/storage/IRSStorage.sol#84) is not in mixedCase\n",
            "markdown": "Variable [IRSStorage.__gap](node_modules/@tokenysolutions/t-rex/contracts/registry/storage/IRSStorage.sol#L84) is not in mixedCase\n"
          },
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "node_modules/@tokenysolutions/t-rex/contracts/registry/storage/IRSStorage.sol"
                },
                "region": {
                  "startLine": 84,
                  "endLine": 84
                }
              }
            }
          ],
          "partialFingerprints": {
            "id": "151d6bc60c23b6c5b596c6afd1d7382c1fa3e855e3634021c68319a4e008cb5b"
          }
        },
        {
          "ruleId": "3-0-naming-convention",
          "message": {
            "text": "Parameter Token.init(address,address,string,string,uint8,address)._onchainID (node_modules/@tokenysolutions/t-rex/contracts/token/Token.sol#107) is not in mixedCase\n",
            "markdown": "Parameter [Token.init(address,address,string,string,uint8,address)._onchainID](node_modules/@tokenysolutions/t-rex/contracts/token/Token.sol#L107) is not in mixedCase\n"
          },
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "node_modules/@tokenysolutions/t-rex/contracts/token/Token.sol"
                },
                "region": {
                  "startLine": 107,
                  "endLine": 107
                }
              }
            }
          ],
          "partialFingerprints": {
            "id": "1a65e889870a7dfdfc27ea7b69b0a6fc8cdf8e351bc6bc0d9ca5182f274755b6"
          }
        },
        {
          "ruleId": "3-0-naming-convention",
          "message": {
            "text": "Parameter Token.getFrozenTokens(address)._userAddress (node_modules/@tokenysolutions/t-rex/contracts/token/Token.sol#369) is not in mixedCase\n",
            "markdown": "Parameter [Token.getFrozenTokens(address)._userAddress](node_modules/@tokenysolutions/t-rex/contracts/token/Token.sol#L369) is not in mixedCase\n"
          },
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "node_modules/@tokenysolutions/t-rex/contracts/token/Token.sol"
                },
                "region": {
                  "startLine": 369,
                  "endLine": 369
                }
              }
            }
          ],
          "partialFingerprints": {
            "id": "1b9ec93aad32168f03210b0602595ee965bc1e95b5dd3a4e3ece5c46769eb3ea"
          }
        },
        {
          "ruleId": "3-0-naming-convention",
          "message": {
            "text": "Parameter Token.unfreezePartialTokens(address,uint256)._amount (node_modules/@tokenysolutions/t-rex/contracts/token/Token.sol#498) is not in mixedCase\n",
            "markdown": "Parameter [Token.unfreezePartialTokens(address,uint256)._amount](node_modules/@tokenysolutions/t-rex/contracts/token/Token.sol#L498) is not in mixedCase\n"
          },
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "node_modules/@tokenysolutions/t-rex/contracts/token/Token.sol"
                },
                "region": {
                  "startLine": 498,
                  "endLine": 498
                }
              }
            }
          ],
          "partialFingerprints": {
            "id": "1daf02fb8dc5bb326b31118b9fcb0cef439068271a32272daad9974646022aed"
          }
        },
        {
          "ruleId": "3-0-naming-convention",
          "message": {
            "text": "Parameter IdentityRegistry.investorCountry(address)._userAddress (node_modules/@tokenysolutions/t-rex/contracts/registry/implementation/IdentityRegistry.sol#228) is not in mixedCase\n",
            "markdown": "Parameter [IdentityRegistry.investorCountry(address)._userAddress](node_modules/@tokenysolutions/t-rex/contracts/registry/implementation/IdentityRegistry.sol#L228) is not in mixedCase\n"
          },
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "node_modules/@tokenysolutions/t-rex/contracts/registry/implementation/IdentityRegistry.sol"
                },
                "region": {
                  "startLine": 228,
                  "endLine": 228
                }
              }
            }
          ],
          "partialFingerprints": {
            "id": "2072a6dcb1818febb500c9b6f473946dabc2c2f991c843694b8cb8542d02c7c0"
          }
        },
        {
          "ruleId": "3-0-naming-convention",
          "message": {
            "text": "Parameter IdentityRegistry.init(address,address,address)._trustedIssuersRegistry (node_modules/@tokenysolutions/t-rex/contracts/registry/implementation/IdentityRegistry.sol#88) is not in mixedCase\n",
            "markdown": "Parameter [IdentityRegistry.init(address,address,address)._trustedIssuersRegistry](node_modules/@tokenysolutions/t-rex/contracts/registry/implementation/IdentityRegistry.sol#L88) is not in mixedCase\n"
          },
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "node_modules/@tokenysolutions/t-rex/contracts/registry/implementation/IdentityRegistry.sol"
                },
                "region": {
                  "startLine": 88,
                  "endLine": 88
                }
              }
            }
          ],
          "partialFingerprints": {
            "id": "228a28760746b6e1b69a8e1b6fd62f2e06b5f4cc04c46ac2ae98ee5b389e32a5"
          }
        },
        {
          "ruleId": "3-0-naming-convention",
          "message": {
            "text": "Parameter Token.increaseAllowance(address,uint256)._addedValue (node_modules/@tokenysolutions/t-rex/contracts/token/Token.sol#145) is not in mixedCase\n",
            "markdown": "Parameter [Token.increaseAllowance(address,uint256)._addedValue](node_modules/@tokenysolutions/t-rex/contracts/token/Token.sol#L145) is not in mixedCase\n"
          },
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "node_modules/@tokenysolutions/t-rex/contracts/token/Token.sol"
                },
                "region": {
                  "startLine": 145,
                  "endLine": 145
                }
              }
            }
          ],
          "partialFingerprints": {
            "id": "2315b6cb3ae2313abbe4d3fc8c7eb690b4a84e77eddfde5079825709545e5604"
          }
        },
        {
          "ruleId": "3-0-naming-convention",
          "message": {
            "text": "Parameter Token.batchBurn(address[],uint256[])._amounts (node_modules/@tokenysolutions/t-rex/contracts/token/Token.sol#261) is not in mixedCase\n",
            "markdown": "Parameter [Token.batchBurn(address[],uint256[])._amounts](node_modules/@tokenysolutions/t-rex/contracts/token/Token.sol#L261) is not in mixedCase\n"
          },
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "node_modules/@tokenysolutions/t-rex/contracts/token/Token.sol"
                },
                "region": {
                  "startLine": 261,
                  "endLine": 261
                }
              }
            }
          ],
          "partialFingerprints": {
            "id": "2352a9349f545bec2b46dd7cbd39b27ea0bf1427f4b2d43505091ed7d53909f2"
          }
        },
        {
          "ruleId": "3-0-naming-convention",
          "message": {
            "text": "Parameter IdentityRegistry.setTrustedIssuersRegistry(address)._trustedIssuersRegistry (node_modules/@tokenysolutions/t-rex/contracts/registry/implementation/IdentityRegistry.sol#164) is not in mixedCase\n",
            "markdown": "Parameter [IdentityRegistry.setTrustedIssuersRegistry(address)._trustedIssuersRegistry](node_modules/@tokenysolutions/t-rex/contracts/registry/implementation/IdentityRegistry.sol#L164) is not in mixedCase\n"
          },
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "node_modules/@tokenysolutions/t-rex/contracts/registry/implementation/IdentityRegistry.sol"
                },
                "region": {
                  "startLine": 164,
                  "endLine": 164
                }
              }
            }
          ],
          "partialFingerprints": {
            "id": "23f2bb8888389c698d2919ab111531d285a8fdb902146158607b0f3f41b6613b"
          }
        },
        {
          "ruleId": "3-0-naming-convention",
          "message": {
            "text": "Parameter IdentityRegistryStorage.removeIdentityFromStorage(address)._userAddress (node_modules/@tokenysolutions/t-rex/contracts/registry/implementation/IdentityRegistryStorage.sol#122) is not in mixedCase\n",
            "markdown": "Parameter [IdentityRegistryStorage.removeIdentityFromStorage(address)._userAddress](node_modules/@tokenysolutions/t-rex/contracts/registry/implementation/IdentityRegistryStorage.sol#L122) is not in mixedCase\n"
          },
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "node_modules/@tokenysolutions/t-rex/contracts/registry/implementation/IdentityRegistryStorage.sol"
                },
                "region": {
                  "startLine": 122,
                  "endLine": 122
                }
              }
            }
          ],
          "partialFingerprints": {
            "id": "243f34e5d4987b520a1bcc9bf25de464556fb896d63921a9c2bf218632dce1ed"
          }
        },
        {
          "ruleId": "3-0-naming-convention",
          "message": {
            "text": "Parameter Token.init(address,address,string,string,uint8,address)._name (node_modules/@tokenysolutions/t-rex/contracts/token/Token.sol#103) is not in mixedCase\n",
            "markdown": "Parameter [Token.init(address,address,string,string,uint8,address)._name](node_modules/@tokenysolutions/t-rex/contracts/token/Token.sol#L103) is not in mixedCase\n"
          },
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "node_modules/@tokenysolutions/t-rex/contracts/token/Token.sol"
                },
                "region": {
                  "startLine": 103,
                  "endLine": 103
                }
              }
            }
          ],
          "partialFingerprints": {
            "id": "25651b2a6340e4e6ddc022be3813701d0fe2f6cde3687f998b17947956dd16a1"
          }
        },
        {
          "ruleId": "3-0-naming-convention",
          "message": {
            "text": "Parameter IdentityRegistry.setClaimTopicsRegistry(address)._claimTopicsRegistry (node_modules/@tokenysolutions/t-rex/contracts/registry/implementation/IdentityRegistry.sol#156) is not in mixedCase\n",
            "markdown": "Parameter [IdentityRegistry.setClaimTopicsRegistry(address)._claimTopicsRegistry](node_modules/@tokenysolutions/t-rex/contracts/registry/implementation/IdentityRegistry.sol#L156) is not in mixedCase\n"
          },
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "node_modules/@tokenysolutions/t-rex/contracts/registry/implementation/IdentityRegistry.sol"
                },
                "region": {
                  "startLine": 156,
                  "endLine": 156
                }
              }
            }
          ],
          "partialFingerprints": {
            "id": "283a34b9cc577524f3683305cf0b7e3a4141dd51b2fb417fa56eb31014f7b256"
          }
        },
        {
          "ruleId": "3-0-naming-convention",
          "message": {
            "text": "Parameter ClaimTopicsRegistry.addClaimTopic(uint256)._claimTopic (node_modules/@tokenysolutions/t-rex/contracts/registry/implementation/ClaimTopicsRegistry.sol#78) is not in mixedCase\n",
            "markdown": "Parameter [ClaimTopicsRegistry.addClaimTopic(uint256)._claimTopic](node_modules/@tokenysolutions/t-rex/contracts/registry/implementation/ClaimTopicsRegistry.sol#L78) is not in mixedCase\n"
          },
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "node_modules/@tokenysolutions/t-rex/contracts/registry/implementation/ClaimTopicsRegistry.sol"
                },
                "region": {
                  "startLine": 78,
                  "endLine": 78
                }
              }
            }
          ],
          "partialFingerprints": {
            "id": "297955b2feb9944eb81b65ef19b6dcfe3a34824b8fb185e3a120f94e1d7ef48c"
          }
        },
        {
          "ruleId": "3-0-naming-convention",
          "message": {
            "text": "Parameter IdentityRegistry.updateIdentity(address,IIdentity)._userAddress (node_modules/@tokenysolutions/t-rex/contracts/registry/implementation/IdentityRegistry.sol#122) is not in mixedCase\n",
            "markdown": "Parameter [IdentityRegistry.updateIdentity(address,IIdentity)._userAddress](node_modules/@tokenysolutions/t-rex/contracts/registry/implementation/IdentityRegistry.sol#L122) is not in mixedCase\n"
          },
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "node_modules/@tokenysolutions/t-rex/contracts/registry/implementation/IdentityRegistry.sol"
                },
                "region": {
                  "startLine": 122,
                  "endLine": 122
                }
              }
            }
          ],
          "partialFingerprints": {
            "id": "2d45714b85c726b624d299438dc7b235b406ceb5c4a73c6312d6b960bcbe405f"
          }
        },
        {
          "ruleId": "3-0-naming-convention",
          "message": {
            "text": "Parameter Token.freezePartialTokens(address,uint256)._amount (node_modules/@tokenysolutions/t-rex/contracts/token/Token.sol#488) is not in mixedCase\n",
            "markdown": "Parameter [Token.freezePartialTokens(address,uint256)._amount](node_modules/@tokenysolutions/t-rex/contracts/token/Token.sol#L488) is not in mixedCase\n"
          },
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "node_modules/@tokenysolutions/t-rex/contracts/token/Token.sol"
                },
                "region": {
                  "startLine": 488,
                  "endLine": 488
                }
              }
            }
          ],
          "partialFingerprints": {
            "id": "2ea55ab5664e29199641a5512ef6dc541cfe02f9e6c6271066a6cff199039dff"
          }
        },
        {
          "ruleId": "3-0-naming-convention",
          "message": {
            "text": "Parameter IdentityRegistry.registerIdentity(address,IIdentity,uint16)._identity (node_modules/@tokenysolutions/t-rex/contracts/registry/implementation/IdentityRegistry.sol#268) is not in mixedCase\n",
            "markdown": "Parameter [IdentityRegistry.registerIdentity(address,IIdentity,uint16)._identity](node_modules/@tokenysolutions/t-rex/contracts/registry/implementation/IdentityRegistry.sol#L268) is not in mixedCase\n"
          },
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "node_modules/@tokenysolutions/t-rex/contracts/registry/implementation/IdentityRegistry.sol"
                },
                "region": {
                  "startLine": 268,
                  "endLine": 268
                }
              }
            }
          ],
          "partialFingerprints": {
            "id": "2f73ce5a678af32ce88ecee8c9e49889346a9b11b87f1bf20803facaf3c29070"
          }
        },
        {
          "ruleId": "3-0-naming-convention",
          "message": {
            "text": "Variable ContextUpgradeable.__gap (node_modules/@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol#36) is not in mixedCase\n",
            "markdown": "Variable [ContextUpgradeable.__gap](node_modules/@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol#L36) is not in mixedCase\n"
          },
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "node_modules/@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol"
                },
                "region": {
                  "startLine": 36,
                  "endLine": 36
                }
              }
            }
          ],
          "partialFingerprints": {
            "id": "36b0d7790b5ec0201a99f98a2f3b1afbd4248739c34889d0a9d08876f3462218"
          }
        },
        {
          "ruleId": "3-0-naming-convention",
          "message": {
            "text": "Parameter IdentityRegistry.init(address,address,address)._claimTopicsRegistry (node_modules/@tokenysolutions/t-rex/contracts/registry/implementation/IdentityRegistry.sol#89) is not in mixedCase\n",
            "markdown": "Parameter [IdentityRegistry.init(address,address,address)._claimTopicsRegistry](node_modules/@tokenysolutions/t-rex/contracts/registry/implementation/IdentityRegistry.sol#L89) is not in mixedCase\n"
          },
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "node_modules/@tokenysolutions/t-rex/contracts/registry/implementation/IdentityRegistry.sol"
                },
                "region": {
                  "startLine": 89,
                  "endLine": 89
                }
              }
            }
          ],
          "partialFingerprints": {
            "id": "38ad440c5f552ed7cfb83c87b27ce10a1326f007b8734004a1096e8d1fa7a9c8"
          }
        },
        {
          "ruleId": "3-0-naming-convention",
          "message": {
            "text": "Parameter Token.recoveryAddress(address,address,address)._lostWallet (node_modules/@tokenysolutions/t-rex/contracts/token/Token.sol#298) is not in mixedCase\n",
            "markdown": "Parameter [Token.recoveryAddress(address,address,address)._lostWallet](node_modules/@tokenysolutions/t-rex/contracts/token/Token.sol#L298) is not in mixedCase\n"
          },
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "node_modules/@tokenysolutions/t-rex/contracts/token/Token.sol"
                },
                "region": {
                  "startLine": 298,
                  "endLine": 298
                }
              }
            }
          ],
          "partialFingerprints": {
            "id": "3b981ccbb708841f95656ebf9f786ce17776208031e8b426aedcdfeca78b4110"
          }
        },
        {
          "ruleId": "3-0-naming-convention",
          "message": {
            "text": "Parameter Token.isFrozen(address)._userAddress (node_modules/@tokenysolutions/t-rex/contracts/token/Token.sol#362) is not in mixedCase\n",
            "markdown": "Parameter [Token.isFrozen(address)._userAddress](node_modules/@tokenysolutions/t-rex/contracts/token/Token.sol#L362) is not in mixedCase\n"
          },
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "node_modules/@tokenysolutions/t-rex/contracts/token/Token.sol"
                },
                "region": {
                  "startLine": 362,
                  "endLine": 362
                }
              }
            }
          ],
          "partialFingerprints": {
            "id": "3d38eedcad61b6af7edbfdcf21b23be5f62fba489936d18022d7631d8d5dd9f7"
          }
        },
        {
          "ruleId": "3-0-naming-convention",
          "message": {
            "text": "Parameter AgentRoleUpgradeable.removeAgent(address)._agent (node_modules/@tokenysolutions/t-rex/contracts/roles/AgentRoleUpgradeable.sol#89) is not in mixedCase\n",
            "markdown": "Parameter [AgentRoleUpgradeable.removeAgent(address)._agent](node_modules/@tokenysolutions/t-rex/contracts/roles/AgentRoleUpgradeable.sol#L89) is not in mixedCase\n"
          },
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "node_modules/@tokenysolutions/t-rex/contracts/roles/AgentRoleUpgradeable.sol"
                },
                "region": {
                  "startLine": 89,
                  "endLine": 89
                }
              }
            }
          ],
          "partialFingerprints": {
            "id": "4110b21f504896e23f202ce35fbde17c36ff8d38b8ca335b415ca8a1988d69ad"
          }
        },
        {
          "ruleId": "3-0-naming-convention",
          "message": {
            "text": "Parameter IdentityRegistry.batchRegisterIdentity(address[],IIdentity[],uint16[])._userAddresses (node_modules/@tokenysolutions/t-rex/contracts/registry/implementation/IdentityRegistry.sol#110) is not in mixedCase\n",
            "markdown": "Parameter [IdentityRegistry.batchRegisterIdentity(address[],IIdentity[],uint16[])._userAddresses](node_modules/@tokenysolutions/t-rex/contracts/registry/implementation/IdentityRegistry.sol#L110) is not in mixedCase\n"
          },
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "node_modules/@tokenysolutions/t-rex/contracts/registry/implementation/IdentityRegistry.sol"
                },
                "region": {
                  "startLine": 110,
                  "endLine": 110
                }
              }
            }
          ],
          "partialFingerprints": {
            "id": "48bd4ec60d2463c80923c91976d064ad23d41d258f1a5cf83450b924a8d9f3c5"
          }
        },
        {
          "ruleId": "3-0-naming-convention",
          "message": {
            "text": "Parameter IdentityRegistry.deleteIdentity(address)._userAddress (node_modules/@tokenysolutions/t-rex/contracts/registry/implementation/IdentityRegistry.sol#139) is not in mixedCase\n",
            "markdown": "Parameter [IdentityRegistry.deleteIdentity(address)._userAddress](node_modules/@tokenysolutions/t-rex/contracts/registry/implementation/IdentityRegistry.sol#L139) is not in mixedCase\n"
          },
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "node_modules/@tokenysolutions/t-rex/contracts/registry/implementation/IdentityRegistry.sol"
                },
                "region": {
                  "startLine": 139,
                  "endLine": 139
                }
              }
            }
          ],
          "partialFingerprints": {
            "id": "4c91f86187bccee59c38482f357dec03f62accd063c32f6a3b823832580e4db9"
          }
        },
        {
          "ruleId": "3-0-naming-convention",
          "message": {
            "text": "Parameter Token.batchSetAddressFrozen(address[],bool[])._freeze (node_modules/@tokenysolutions/t-rex/contracts/token/Token.sol#270) is not in mixedCase\n",
            "markdown": "Parameter [Token.batchSetAddressFrozen(address[],bool[])._freeze](node_modules/@tokenysolutions/t-rex/contracts/token/Token.sol#L270) is not in mixedCase\n"
          },
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "node_modules/@tokenysolutions/t-rex/contracts/token/Token.sol"
                },
                "region": {
                  "startLine": 270,
                  "endLine": 270
                }
              }
            }
          ],
          "partialFingerprints": {
            "id": "4cba0d3509ed72f681ee6bd5364bda90f04531b5ccc46b630b4de07bd8c7b2eb"
          }
        },
        {
          "ruleId": "3-0-naming-convention",
          "message": {
            "text": "Parameter TrustedIssuersRegistry.addTrustedIssuer(IClaimIssuer,uint256[])._claimTopics (node_modules/@tokenysolutions/t-rex/contracts/registry/implementation/TrustedIssuersRegistry.sol#81) is not in mixedCase\n",
            "markdown": "Parameter [TrustedIssuersRegistry.addTrustedIssuer(IClaimIssuer,uint256[])._claimTopics](node_modules/@tokenysolutions/t-rex/contracts/registry/implementation/TrustedIssuersRegistry.sol#L81) is not in mixedCase\n"
          },
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "node_modules/@tokenysolutions/t-rex/contracts/registry/implementation/TrustedIssuersRegistry.sol"
                },
                "region": {
                  "startLine": 81,
                  "endLine": 81
                }
              }
            }
          ],
          "partialFingerprints": {
            "id": "4fef5737d249678198f395affdb8b59878f78ac55917a77ced7e2602c66919af"
          }
        },
        {
          "ruleId": "3-0-naming-convention",
          "message": {
            "text": "Parameter ClaimTopicsRegistry.removeClaimTopic(uint256)._claimTopic (node_modules/@tokenysolutions/t-rex/contracts/registry/implementation/ClaimTopicsRegistry.sol#91) is not in mixedCase\n",
            "markdown": "Parameter [ClaimTopicsRegistry.removeClaimTopic(uint256)._claimTopic](node_modules/@tokenysolutions/t-rex/contracts/registry/implementation/ClaimTopicsRegistry.sol#L91) is not in mixedCase\n"
          },
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "node_modules/@tokenysolutions/t-rex/contracts/registry/implementation/ClaimTopicsRegistry.sol"
                },
                "region": {
                  "startLine": 91,
                  "endLine": 91
                }
              }
            }
          ],
          "partialFingerprints": {
            "id": "507191538b852363493b2a88a44d77d8ac1464c7a2c09400a7ada391ada55438"
          }
        },
        {
          "ruleId": "3-0-naming-convention",
          "message": {
            "text": "Parameter Token.allowance(address,address)._owner (node_modules/@tokenysolutions/t-rex/contracts/token/Token.sol#334) is not in mixedCase\n",
            "markdown": "Parameter [Token.allowance(address,address)._owner](node_modules/@tokenysolutions/t-rex/contracts/token/Token.sol#L334) is not in mixedCase\n"
          },
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "node_modules/@tokenysolutions/t-rex/contracts/token/Token.sol"
                },
                "region": {
                  "startLine": 334,
                  "endLine": 334
                }
              }
            }
          ],
          "partialFingerprints": {
            "id": "50daf3fa9511a1e6d739594a3537d68e913c100988a28a6e700d969d8087b2bb"
          }
        },
        {
          "ruleId": "3-0-naming-convention",
          "message": {
            "text": "Parameter Token.transferFrom(address,address,uint256)._amount (node_modules/@tokenysolutions/t-rex/contracts/token/Token.sol#223) is not in mixedCase\n",
            "markdown": "Parameter [Token.transferFrom(address,address,uint256)._amount](node_modules/@tokenysolutions/t-rex/contracts/token/Token.sol#L223) is not in mixedCase\n"
          },
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "node_modules/@tokenysolutions/t-rex/contracts/token/Token.sol"
                },
                "region": {
                  "startLine": 223,
                  "endLine": 223
                }
              }
            }
          ],
          "partialFingerprints": {
            "id": "534009f28b860ab567d9e5a32afc52d7af20df5bb44bc815b74be432a9e13f85"
          }
        },
        {
          "ruleId": "3-0-naming-convention",
          "message": {
            "text": "Parameter IdentityRegistry.registerIdentity(address,IIdentity,uint16)._userAddress (node_modules/@tokenysolutions/t-rex/contracts/registry/implementation/IdentityRegistry.sol#267) is not in mixedCase\n",
            "markdown": "Parameter [IdentityRegistry.registerIdentity(address,IIdentity,uint16)._userAddress](node_modules/@tokenysolutions/t-rex/contracts/registry/implementation/IdentityRegistry.sol#L267) is not in mixedCase\n"
          },
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "node_modules/@tokenysolutions/t-rex/contracts/registry/implementation/IdentityRegistry.sol"
                },
                "region": {
                  "startLine": 267,
                  "endLine": 267
                }
              }
            }
          ],
          "partialFingerprints": {
            "id": "53a2583db89a47adbbe7c7f6cf02c7acf90c7637087a28bc7dda9071bc3d3ded"
          }
        },
        {
          "ruleId": "3-0-naming-convention",
          "message": {
            "text": "Parameter Token.forcedTransfer(address,address,uint256)._from (node_modules/@tokenysolutions/t-rex/contracts/token/Token.sol#432) is not in mixedCase\n",
            "markdown": "Parameter [Token.forcedTransfer(address,address,uint256)._from](node_modules/@tokenysolutions/t-rex/contracts/token/Token.sol#L432) is not in mixedCase\n"
          },
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "node_modules/@tokenysolutions/t-rex/contracts/token/Token.sol"
                },
                "region": {
                  "startLine": 432,
                  "endLine": 432
                }
              }
            }
          ],
          "partialFingerprints": {
            "id": "53ac62f1c72d30d5a18f65e1caa6377fed036e082d9bc1cf45b2ff09f89fb8d3"
          }
        },
        {
          "ruleId": "3-0-naming-convention",
          "message": {
            "text": "Parameter Token.setOnchainID(address)._onchainID (node_modules/@tokenysolutions/t-rex/contracts/token/Token.sol#180) is not in mixedCase\n",
            "markdown": "Parameter [Token.setOnchainID(address)._onchainID](node_modules/@tokenysolutions/t-rex/contracts/token/Token.sol#L180) is not in mixedCase\n"
          },
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "node_modules/@tokenysolutions/t-rex/contracts/token/Token.sol"
                },
                "region": {
                  "startLine": 180,
                  "endLine": 180
                }
              }
            }
          ],
          "partialFingerprints": {
            "id": "562fc771f80985d3fa17521c37a8c0c5df720b6c83d819409e4e15e42f3f5714"
          }
        },
        {
          "ruleId": "3-0-naming-convention",
          "message": {
            "text": "Function OwnableUpgradeable.__Ownable_init() (node_modules/@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol#29-31) is not in mixedCase\n",
            "markdown": "Function [OwnableUpgradeable.__Ownable_init()](node_modules/@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol#L29-L31) is not in mixedCase\n"
          },
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "node_modules/@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol"
                },
                "region": {
                  "startLine": 29,
                  "endLine": 31
                }
              }
            }
          ],
          "partialFingerprints": {
            "id": "564a84db84ff90549701d9e3401970ecd35bb55e38a0ae2758178a34b03f99e8"
          }
        },
        {
          "ruleId": "3-0-naming-convention",
          "message": {
            "text": "Parameter TrustedIssuersRegistry.updateIssuerClaimTopics(IClaimIssuer,uint256[])._trustedIssuer (node_modules/@tokenysolutions/t-rex/contracts/registry/implementation/TrustedIssuersRegistry.sol#131) is not in mixedCase\n",
            "markdown": "Parameter [TrustedIssuersRegistry.updateIssuerClaimTopics(IClaimIssuer,uint256[])._trustedIssuer](node_modules/@tokenysolutions/t-rex/contracts/registry/implementation/TrustedIssuersRegistry.sol#L131) is not in mixedCase\n"
          },
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "node_modules/@tokenysolutions/t-rex/contracts/registry/implementation/TrustedIssuersRegistry.sol"
                },
                "region": {
                  "startLine": 131,
                  "endLine": 131
                }
              }
            }
          ],
          "partialFingerprints": {
            "id": "57feb35d8a22cfdeb6f98cb5c5c0b5056f79633209ddb94d65eca9aa10bd2df6"
          }
        },
        {
          "ruleId": "3-0-naming-convention",
          "message": {
            "text": "Parameter IdentityRegistry.registerIdentity(address,IIdentity,uint16)._country (node_modules/@tokenysolutions/t-rex/contracts/registry/implementation/IdentityRegistry.sol#269) is not in mixedCase\n",
            "markdown": "Parameter [IdentityRegistry.registerIdentity(address,IIdentity,uint16)._country](node_modules/@tokenysolutions/t-rex/contracts/registry/implementation/IdentityRegistry.sol#L269) is not in mixedCase\n"
          },
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "node_modules/@tokenysolutions/t-rex/contracts/registry/implementation/IdentityRegistry.sol"
                },
                "region": {
                  "startLine": 269,
                  "endLine": 269
                }
              }
            }
          ],
          "partialFingerprints": {
            "id": "58af12bc1b50605ed7587ace455c4c9fbe2528ed376c0b218f6200c07c9250a5"
          }
        },
        {
          "ruleId": "3-0-naming-convention",
          "message": {
            "text": "Contract __IncludeTrexToken (contracts/_IncludeTrexToken.sol#5-6) is not in CapWords\n",
            "markdown": "Contract [__IncludeTrexToken](contracts/_IncludeTrexToken.sol#L5-L6) is not in CapWords\n"
          },
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "contracts/_IncludeTrexToken.sol"
                },
                "region": {
                  "startLine": 5,
                  "endLine": 6
                }
              }
            }
          ],
          "partialFingerprints": {
            "id": "5a254062154be904a5e1da11649bee40b7a1bb94a95c58497e3be1d4f287ec60"
          }
        },
        {
          "ruleId": "3-0-naming-convention",
          "message": {
            "text": "Parameter TrustedIssuersRegistry.updateIssuerClaimTopics(IClaimIssuer,uint256[])._claimTopics (node_modules/@tokenysolutions/t-rex/contracts/registry/implementation/TrustedIssuersRegistry.sol#131) is not in mixedCase\n",
            "markdown": "Parameter [TrustedIssuersRegistry.updateIssuerClaimTopics(IClaimIssuer,uint256[])._claimTopics](node_modules/@tokenysolutions/t-rex/contracts/registry/implementation/TrustedIssuersRegistry.sol#L131) is not in mixedCase\n"
          },
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "node_modules/@tokenysolutions/t-rex/contracts/registry/implementation/TrustedIssuersRegistry.sol"
                },
                "region": {
                  "startLine": 131,
                  "endLine": 131
                }
              }
            }
          ],
          "partialFingerprints": {
            "id": "5fccc935366f957ef45d034487c8bad3b4de03d01a7b75719c0942143031cf10"
          }
        },
        {
          "ruleId": "3-0-naming-convention",
          "message": {
            "text": "Parameter Token.mint(address,uint256)._amount (node_modules/@tokenysolutions/t-rex/contracts/token/Token.sol#454) is not in mixedCase\n",
            "markdown": "Parameter [Token.mint(address,uint256)._amount](node_modules/@tokenysolutions/t-rex/contracts/token/Token.sol#L454) is not in mixedCase\n"
          },
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "node_modules/@tokenysolutions/t-rex/contracts/token/Token.sol"
                },
                "region": {
                  "startLine": 454,
                  "endLine": 454
                }
              }
            }
          ],
          "partialFingerprints": {
            "id": "605d6a6dc9022cfd06e0d268a95811b2baa7eb1f9c0c89f4363254ec26073d24"
          }
        },
        {
          "ruleId": "3-0-naming-convention",
          "message": {
            "text": "Parameter IdentityRegistry.contains(address)._userAddress (node_modules/@tokenysolutions/t-rex/contracts/registry/implementation/IdentityRegistry.sol#256) is not in mixedCase\n",
            "markdown": "Parameter [IdentityRegistry.contains(address)._userAddress](node_modules/@tokenysolutions/t-rex/contracts/registry/implementation/IdentityRegistry.sol#L256) is not in mixedCase\n"
          },
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "node_modules/@tokenysolutions/t-rex/contracts/registry/implementation/IdentityRegistry.sol"
                },
                "region": {
                  "startLine": 256,
                  "endLine": 256
                }
              }
            }
          ],
          "partialFingerprints": {
            "id": "61479eaec9adb45f47e73ee4bba0d49bd7cc61b53ee7111b50d8d51797e20dbf"
          }
        },
        {
          "ruleId": "3-0-naming-convention",
          "message": {
            "text": "Variable OwnableUpgradeable.__gap (node_modules/@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol#94) is not in mixedCase\n",
            "markdown": "Variable [OwnableUpgradeable.__gap](node_modules/@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol#L94) is not in mixedCase\n"
          },
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "node_modules/@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol"
                },
                "region": {
                  "startLine": 94,
                  "endLine": 94
                }
              }
            }
          ],
          "partialFingerprints": {
            "id": "64595b3b974ce422ded6f4c3e75f4b8f263d80fe654b483274d85ea78d93515d"
          }
        },
        {
          "ruleId": "3-0-naming-convention",
          "message": {
            "text": "Parameter Token.setCompliance(address)._compliance (node_modules/@tokenysolutions/t-rex/contracts/token/Token.sol#515) is not in mixedCase\n",
            "markdown": "Parameter [Token.setCompliance(address)._compliance](node_modules/@tokenysolutions/t-rex/contracts/token/Token.sol#L515) is not in mixedCase\n"
          },
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "node_modules/@tokenysolutions/t-rex/contracts/token/Token.sol"
                },
                "region": {
                  "startLine": 515,
                  "endLine": 515
                }
              }
            }
          ],
          "partialFingerprints": {
            "id": "65f83bf219c09759b90d3f219aed855aa2b1905d28480053dbb83500a121c478"
          }
        },
        {
          "ruleId": "3-0-naming-convention",
          "message": {
            "text": "Parameter Token.batchUnfreezePartialTokens(address[],uint256[])._amounts (node_modules/@tokenysolutions/t-rex/contracts/token/Token.sol#288) is not in mixedCase\n",
            "markdown": "Parameter [Token.batchUnfreezePartialTokens(address[],uint256[])._amounts](node_modules/@tokenysolutions/t-rex/contracts/token/Token.sol#L288) is not in mixedCase\n"
          },
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "node_modules/@tokenysolutions/t-rex/contracts/token/Token.sol"
                },
                "region": {
                  "startLine": 288,
                  "endLine": 288
                }
              }
            }
          ],
          "partialFingerprints": {
            "id": "67fe0ebb7ba38b7d4022ab8b050d123d19d9f24c5ca4db9203329d9f6fa2df6d"
          }
        },
        {
          "ruleId": "3-0-naming-convention",
          "message": {
            "text": "Parameter IdentityRegistry.batchRegisterIdentity(address[],IIdentity[],uint16[])._identities (node_modules/@tokenysolutions/t-rex/contracts/registry/implementation/IdentityRegistry.sol#111) is not in mixedCase\n",
            "markdown": "Parameter [IdentityRegistry.batchRegisterIdentity(address[],IIdentity[],uint16[])._identities](node_modules/@tokenysolutions/t-rex/contracts/registry/implementation/IdentityRegistry.sol#L111) is not in mixedCase\n"
          },
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "node_modules/@tokenysolutions/t-rex/contracts/registry/implementation/IdentityRegistry.sol"
                },
                "region": {
                  "startLine": 111,
                  "endLine": 111
                }
              }
            }
          ],
          "partialFingerprints": {
            "id": "690de6a5dd8a9a926d8c7fd09661d86dc982263ca592ff8f591562f263de13c3"
          }
        },
        {
          "ruleId": "3-0-naming-convention",
          "message": {
            "text": "Parameter Token.setSymbol(string)._symbol (node_modules/@tokenysolutions/t-rex/contracts/token/Token.sol#170) is not in mixedCase\n",
            "markdown": "Parameter [Token.setSymbol(string)._symbol](node_modules/@tokenysolutions/t-rex/contracts/token/Token.sol#L170) is not in mixedCase\n"
          },
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "node_modules/@tokenysolutions/t-rex/contracts/token/Token.sol"
                },
                "region": {
                  "startLine": 170,
                  "endLine": 170
                }
              }
            }
          ],
          "partialFingerprints": {
            "id": "6989b711705b58697c391980e0fb2b411474ff075a028040dd8438c9b936caf1"
          }
        },
        {
          "ruleId": "3-0-naming-convention",
          "message": {
            "text": "Parameter IdentityRegistry.identity(address)._userAddress (node_modules/@tokenysolutions/t-rex/contracts/registry/implementation/IdentityRegistry.sol#278) is not in mixedCase\n",
            "markdown": "Parameter [IdentityRegistry.identity(address)._userAddress](node_modules/@tokenysolutions/t-rex/contracts/registry/implementation/IdentityRegistry.sol#L278) is not in mixedCase\n"
          },
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "node_modules/@tokenysolutions/t-rex/contracts/registry/implementation/IdentityRegistry.sol"
                },
                "region": {
                  "startLine": 278,
                  "endLine": 278
                }
              }
            }
          ],
          "partialFingerprints": {
            "id": "6cbb65d6de7dc9ebeec54be665428571018af20f54e91c472c370779c7af4842"
          }
        },
        {
          "ruleId": "3-0-naming-convention",
          "message": {
            "text": "Parameter TrustedIssuersRegistry.getTrustedIssuerClaimTopics(IClaimIssuer)._trustedIssuer (node_modules/@tokenysolutions/t-rex/contracts/registry/implementation/TrustedIssuersRegistry.sol#183) is not in mixedCase\n",
            "markdown": "Parameter [TrustedIssuersRegistry.getTrustedIssuerClaimTopics(IClaimIssuer)._trustedIssuer](node_modules/@tokenysolutions/t-rex/contracts/registry/implementation/TrustedIssuersRegistry.sol#L183) is not in mixedCase\n"
          },
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "node_modules/@tokenysolutions/t-rex/contracts/registry/implementation/TrustedIssuersRegistry.sol"
                },
                "region": {
                  "startLine": 183,
                  "endLine": 183
                }
              }
            }
          ],
          "partialFingerprints": {
            "id": "7915fa69ec7b982ef825651715cfc4be067e0c48d4abcf20659c004e9fefc3b7"
          }
        },
        {
          "ruleId": "3-0-naming-convention",
          "message": {
            "text": "Parameter Token.recoveryAddress(address,address,address)._investorOnchainID (node_modules/@tokenysolutions/t-rex/contracts/token/Token.sol#300) is not in mixedCase\n",
            "markdown": "Parameter [Token.recoveryAddress(address,address,address)._investorOnchainID](node_modules/@tokenysolutions/t-rex/contracts/token/Token.sol#L300) is not in mixedCase\n"
          },
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "node_modules/@tokenysolutions/t-rex/contracts/token/Token.sol"
                },
                "region": {
                  "startLine": 300,
                  "endLine": 300
                }
              }
            }
          ],
          "partialFingerprints": {
            "id": "7b8a93b24125302dba485b33249587b37c53317ecbf5ffa0a56084918b483d68"
          }
        },
        {
          "ruleId": "3-0-naming-convention",
          "message": {
            "text": "Variable IRStorage.__gap (node_modules/@tokenysolutions/t-rex/contracts/registry/storage/IRStorage.sol#84) is not in mixedCase\n",
            "markdown": "Variable [IRStorage.__gap](node_modules/@tokenysolutions/t-rex/contracts/registry/storage/IRStorage.sol#L84) is not in mixedCase\n"
          },
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "node_modules/@tokenysolutions/t-rex/contracts/registry/storage/IRStorage.sol"
                },
                "region": {
                  "startLine": 84,
                  "endLine": 84
                }
              }
            }
          ],
          "partialFingerprints": {
            "id": "7bc4f8a1aea2a1e6465fecce91319809daf463b98d8424a3bf3537d0a3bcd91a"
          }
        },
        {
          "ruleId": "3-0-naming-convention",
          "message": {
            "text": "Parameter IdentityRegistry.setIdentityRegistryStorage(address)._identityRegistryStorage (node_modules/@tokenysolutions/t-rex/contracts/registry/implementation/IdentityRegistry.sol#148) is not in mixedCase\n",
            "markdown": "Parameter [IdentityRegistry.setIdentityRegistryStorage(address)._identityRegistryStorage](node_modules/@tokenysolutions/t-rex/contracts/registry/implementation/IdentityRegistry.sol#L148) is not in mixedCase\n"
          },
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "node_modules/@tokenysolutions/t-rex/contracts/registry/implementation/IdentityRegistry.sol"
                },
                "region": {
                  "startLine": 148,
                  "endLine": 148
                }
              }
            }
          ],
          "partialFingerprints": {
            "id": "7dff394076c55a75f2264d1fc4cfdf8ba9b48abe1bf83f37450964752960b696"
          }
        },
        {
          "ruleId": "3-0-naming-convention",
          "message": {
            "text": "Parameter Token.decreaseAllowance(address,uint256)._subtractedValue (node_modules/@tokenysolutions/t-rex/contracts/token/Token.sol#153) is not in mixedCase\n",
            "markdown": "Parameter [Token.decreaseAllowance(address,uint256)._subtractedValue](node_modules/@tokenysolutions/t-rex/contracts/token/Token.sol#L153) is not in mixedCase\n"
          },
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "node_modules/@tokenysolutions/t-rex/contracts/token/Token.sol"
                },
                "region": {
                  "startLine": 153,
                  "endLine": 153
                }
              }
            }
          ],
          "partialFingerprints": {
            "id": "7e2b2b9ae1dcc6c9d2162e019e48454bcfe66fb721b62206f6f7d0652cedf404"
          }
        },
        {
          "ruleId": "3-0-naming-convention",
          "message": {
            "text": "Parameter Token.batchTransfer(address[],uint256[])._toList (node_modules/@tokenysolutions/t-rex/contracts/token/Token.sol#204) is not in mixedCase\n",
            "markdown": "Parameter [Token.batchTransfer(address[],uint256[])._toList](node_modules/@tokenysolutions/t-rex/contracts/token/Token.sol#L204) is not in mixedCase\n"
          },
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "node_modules/@tokenysolutions/t-rex/contracts/token/Token.sol"
                },
                "region": {
                  "startLine": 204,
                  "endLine": 204
                }
              }
            }
          ],
          "partialFingerprints": {
            "id": "81cabcef1891742b0bbe1332d568f72bc8426c98ef9df0ee9e022d6b7f5daaf3"
          }
        },
        {
          "ruleId": "3-0-naming-convention",
          "message": {
            "text": "Parameter Token.unfreezePartialTokens(address,uint256)._userAddress (node_modules/@tokenysolutions/t-rex/contracts/token/Token.sol#498) is not in mixedCase\n",
            "markdown": "Parameter [Token.unfreezePartialTokens(address,uint256)._userAddress](node_modules/@tokenysolutions/t-rex/contracts/token/Token.sol#L498) is not in mixedCase\n"
          },
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "node_modules/@tokenysolutions/t-rex/contracts/token/Token.sol"
                },
                "region": {
                  "startLine": 498,
                  "endLine": 498
                }
              }
            }
          ],
          "partialFingerprints": {
            "id": "825d465d8439c45ecc83d64287508f8534a476685575bffc743ea45cc876d756"
          }
        },
        {
          "ruleId": "3-0-naming-convention",
          "message": {
            "text": "Parameter Token.batchForcedTransfer(address[],address[],uint256[])._fromList (node_modules/@tokenysolutions/t-rex/contracts/token/Token.sol#240) is not in mixedCase\n",
            "markdown": "Parameter [Token.batchForcedTransfer(address[],address[],uint256[])._fromList](node_modules/@tokenysolutions/t-rex/contracts/token/Token.sol#L240) is not in mixedCase\n"
          },
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "node_modules/@tokenysolutions/t-rex/contracts/token/Token.sol"
                },
                "region": {
                  "startLine": 240,
                  "endLine": 240
                }
              }
            }
          ],
          "partialFingerprints": {
            "id": "831ad1ca06cfa70a27024f59ade201d5e48c2d3aa3dc8e9f17eebe3785e91962"
          }
        },
        {
          "ruleId": "3-0-naming-convention",
          "message": {
            "text": "Parameter Token.balanceOf(address)._userAddress (node_modules/@tokenysolutions/t-rex/contracts/token/Token.sol#527) is not in mixedCase\n",
            "markdown": "Parameter [Token.balanceOf(address)._userAddress](node_modules/@tokenysolutions/t-rex/contracts/token/Token.sol#L527) is not in mixedCase\n"
          },
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "node_modules/@tokenysolutions/t-rex/contracts/token/Token.sol"
                },
                "region": {
                  "startLine": 527,
                  "endLine": 527
                }
              }
            }
          ],
          "partialFingerprints": {
            "id": "83a3e53619e0f6912aa802b321f2945e38b04be24f6edb706e82a1a71a663d3a"
          }
        },
        {
          "ruleId": "3-0-naming-convention",
          "message": {
            "text": "Parameter IdentityRegistryStorage.storedInvestorCountry(address)._userAddress (node_modules/@tokenysolutions/t-rex/contracts/registry/implementation/IdentityRegistryStorage.sol#176) is not in mixedCase\n",
            "markdown": "Parameter [IdentityRegistryStorage.storedInvestorCountry(address)._userAddress](node_modules/@tokenysolutions/t-rex/contracts/registry/implementation/IdentityRegistryStorage.sol#L176) is not in mixedCase\n"
          },
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "node_modules/@tokenysolutions/t-rex/contracts/registry/implementation/IdentityRegistryStorage.sol"
                },
                "region": {
                  "startLine": 176,
                  "endLine": 176
                }
              }
            }
          ],
          "partialFingerprints": {
            "id": "85b91c136236bf58361a88b6b585d4a34e693e354f292f6c0f9e3030f5faef16"
          }
        },
        {
          "ruleId": "3-0-naming-convention",
          "message": {
            "text": "Function ContextUpgradeable.__Context_init_unchained() (node_modules/@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol#21-22) is not in mixedCase\n",
            "markdown": "Function [ContextUpgradeable.__Context_init_unchained()](node_modules/@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol#L21-L22) is not in mixedCase\n"
          },
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "node_modules/@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol"
                },
                "region": {
                  "startLine": 21,
                  "endLine": 22
                }
              }
            }
          ],
          "partialFingerprints": {
            "id": "8629c89abc9e568d22212182eb038287fc4f676ff34add41294173d644b25bcb"
          }
        },
        {
          "ruleId": "3-0-naming-convention",
          "message": {
            "text": "Parameter IdentityRegistryStorage.addIdentityToStorage(address,IIdentity,uint16)._userAddress (node_modules/@tokenysolutions/t-rex/contracts/registry/implementation/IdentityRegistryStorage.sol#81) is not in mixedCase\n",
            "markdown": "Parameter [IdentityRegistryStorage.addIdentityToStorage(address,IIdentity,uint16)._userAddress](node_modules/@tokenysolutions/t-rex/contracts/registry/implementation/IdentityRegistryStorage.sol#L81) is not in mixedCase\n"
          },
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "node_modules/@tokenysolutions/t-rex/contracts/registry/implementation/IdentityRegistryStorage.sol"
                },
                "region": {
                  "startLine": 81,
                  "endLine": 81
                }
              }
            }
          ],
          "partialFingerprints": {
            "id": "93a00dd94cbadf3b9353017e47ae359bed098ab546b73c02e933fa88eab6aae1"
          }
        },
        {
          "ruleId": "3-0-naming-convention",
          "message": {
            "text": "Parameter Token.init(address,address,string,string,uint8,address)._decimals (node_modules/@tokenysolutions/t-rex/contracts/token/Token.sol#105) is not in mixedCase\n",
            "markdown": "Parameter [Token.init(address,address,string,string,uint8,address)._decimals](node_modules/@tokenysolutions/t-rex/contracts/token/Token.sol#L105) is not in mixedCase\n"
          },
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "node_modules/@tokenysolutions/t-rex/contracts/token/Token.sol"
                },
                "region": {
                  "startLine": 105,
                  "endLine": 105
                }
              }
            }
          ],
          "partialFingerprints": {
            "id": "9c5c3e271210d2f9654988a4e9d434bb31844c778671524e2c273eba33bfe269"
          }
        },
        {
          "ruleId": "3-0-naming-convention",
          "message": {
            "text": "Parameter TrustedIssuersRegistry.removeTrustedIssuer(IClaimIssuer)._trustedIssuer (node_modules/@tokenysolutions/t-rex/contracts/registry/implementation/TrustedIssuersRegistry.sol#98) is not in mixedCase\n",
            "markdown": "Parameter [TrustedIssuersRegistry.removeTrustedIssuer(IClaimIssuer)._trustedIssuer](node_modules/@tokenysolutions/t-rex/contracts/registry/implementation/TrustedIssuersRegistry.sol#L98) is not in mixedCase\n"
          },
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "node_modules/@tokenysolutions/t-rex/contracts/registry/implementation/TrustedIssuersRegistry.sol"
                },
                "region": {
                  "startLine": 98,
                  "endLine": 98
                }
              }
            }
          ],
          "partialFingerprints": {
            "id": "9e017dc2c4d68c897f3a687c7fb6c1054753f926faa1d91091d725542834b320"
          }
        },
        {
          "ruleId": "3-0-naming-convention",
          "message": {
            "text": "Parameter Token.forcedTransfer(address,address,uint256)._amount (node_modules/@tokenysolutions/t-rex/contracts/token/Token.sol#434) is not in mixedCase\n",
            "markdown": "Parameter [Token.forcedTransfer(address,address,uint256)._amount](node_modules/@tokenysolutions/t-rex/contracts/token/Token.sol#L434) is not in mixedCase\n"
          },
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "node_modules/@tokenysolutions/t-rex/contracts/token/Token.sol"
                },
                "region": {
                  "startLine": 434,
                  "endLine": 434
                }
              }
            }
          ],
          "partialFingerprints": {
            "id": "9eda0434495f8222326bba71e8468a30c18cc527d9e6d0334cd45c30c201a9c6"
          }
        },
        {
          "ruleId": "3-0-naming-convention",
          "message": {
            "text": "Parameter Token.mint(address,uint256)._to (node_modules/@tokenysolutions/t-rex/contracts/token/Token.sol#454) is not in mixedCase\n",
            "markdown": "Parameter [Token.mint(address,uint256)._to](node_modules/@tokenysolutions/t-rex/contracts/token/Token.sol#L454) is not in mixedCase\n"
          },
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "node_modules/@tokenysolutions/t-rex/contracts/token/Token.sol"
                },
                "region": {
                  "startLine": 454,
                  "endLine": 454
                }
              }
            }
          ],
          "partialFingerprints": {
            "id": "a24c21fef46828e8d93d3e9b2f0924bcbad42d8a0d3a1c6982fb5634ea008112"
          }
        },
        {
          "ruleId": "3-0-naming-convention",
          "message": {
            "text": "Parameter IdentityRegistry.updateCountry(address,uint16)._country (node_modules/@tokenysolutions/t-rex/contracts/registry/implementation/IdentityRegistry.sol#131) is not in mixedCase\n",
            "markdown": "Parameter [IdentityRegistry.updateCountry(address,uint16)._country](node_modules/@tokenysolutions/t-rex/contracts/registry/implementation/IdentityRegistry.sol#L131) is not in mixedCase\n"
          },
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "node_modules/@tokenysolutions/t-rex/contracts/registry/implementation/IdentityRegistry.sol"
                },
                "region": {
                  "startLine": 131,
                  "endLine": 131
                }
              }
            }
          ],
          "partialFingerprints": {
            "id": "a518da269bb1ada1c57ad817f020767f770a2d4fa7c320590e322d97b11fc70f"
          }
        },
        {
          "ruleId": "3-0-naming-convention",
          "message": {
            "text": "Parameter Token.setIdentityRegistry(address)._identityRegistry (node_modules/@tokenysolutions/t-rex/contracts/token/Token.sol#507) is not in mixedCase\n",
            "markdown": "Parameter [Token.setIdentityRegistry(address)._identityRegistry](node_modules/@tokenysolutions/t-rex/contracts/token/Token.sol#L507) is not in mixedCase\n"
          },
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "node_modules/@tokenysolutions/t-rex/contracts/token/Token.sol"
                },
                "region": {
                  "startLine": 507,
                  "endLine": 507
                }
              }
            }
          ],
          "partialFingerprints": {
            "id": "a821f401ce17997f64f1662a3414944c90a81653bd015baa9f17df7446cabfd6"
          }
        },
        {
          "ruleId": "3-0-naming-convention",
          "message": {
            "text": "Parameter Token.transfer(address,uint256)._amount (node_modules/@tokenysolutions/t-rex/contracts/token/Token.sol#417) is not in mixedCase\n",
            "markdown": "Parameter [Token.transfer(address,uint256)._amount](node_modules/@tokenysolutions/t-rex/contracts/token/Token.sol#L417) is not in mixedCase\n"
          },
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "node_modules/@tokenysolutions/t-rex/contracts/token/Token.sol"
                },
                "region": {
                  "startLine": 417,
                  "endLine": 417
                }
              }
            }
          ],
          "partialFingerprints": {
            "id": "aa4117dd99d5cdc53626effef91907fa690ae71dc8ac0a60637d62bbd5ebe516"
          }
        },
        {
          "ruleId": "3-0-naming-convention",
          "message": {
            "text": "Parameter IdentityRegistryStorage.modifyStoredIdentity(address,IIdentity)._userAddress (node_modules/@tokenysolutions/t-rex/contracts/registry/implementation/IdentityRegistryStorage.sol#98) is not in mixedCase\n",
            "markdown": "Parameter [IdentityRegistryStorage.modifyStoredIdentity(address,IIdentity)._userAddress](node_modules/@tokenysolutions/t-rex/contracts/registry/implementation/IdentityRegistryStorage.sol#L98) is not in mixedCase\n"
          },
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "node_modules/@tokenysolutions/t-rex/contracts/registry/implementation/IdentityRegistryStorage.sol"
                },
                "region": {
                  "startLine": 98,
                  "endLine": 98
                }
              }
            }
          ],
          "partialFingerprints": {
            "id": "ab7d755a4a8d2798f802f4b9ddf04fc7e873668448fb12d19e9e0a2c8b113a49"
          }
        },
        {
          "ruleId": "3-0-naming-convention",
          "message": {
            "text": "Parameter TrustedIssuersRegistry.addTrustedIssuer(IClaimIssuer,uint256[])._trustedIssuer (node_modules/@tokenysolutions/t-rex/contracts/registry/implementation/TrustedIssuersRegistry.sol#81) is not in mixedCase\n",
            "markdown": "Parameter [TrustedIssuersRegistry.addTrustedIssuer(IClaimIssuer,uint256[])._trustedIssuer](node_modules/@tokenysolutions/t-rex/contracts/registry/implementation/TrustedIssuersRegistry.sol#L81) is not in mixedCase\n"
          },
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "node_modules/@tokenysolutions/t-rex/contracts/registry/implementation/TrustedIssuersRegistry.sol"
                },
                "region": {
                  "startLine": 81,
                  "endLine": 81
                }
              }
            }
          ],
          "partialFingerprints": {
            "id": "b009d98747380e2b1417fbddd2da0ce1e3adf8c636333044aad17ad4a20e4494"
          }
        },
        {
          "ruleId": "3-0-naming-convention",
          "message": {
            "text": "Parameter TrustedIssuersRegistry.isTrustedIssuer(address)._issuer (node_modules/@tokenysolutions/t-rex/contracts/registry/implementation/TrustedIssuersRegistry.sol#173) is not in mixedCase\n",
            "markdown": "Parameter [TrustedIssuersRegistry.isTrustedIssuer(address)._issuer](node_modules/@tokenysolutions/t-rex/contracts/registry/implementation/TrustedIssuersRegistry.sol#L173) is not in mixedCase\n"
          },
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "node_modules/@tokenysolutions/t-rex/contracts/registry/implementation/TrustedIssuersRegistry.sol"
                },
                "region": {
                  "startLine": 173,
                  "endLine": 173
                }
              }
            }
          ],
          "partialFingerprints": {
            "id": "b2a6d72fb2a365ca8350054b1f6f2477476804a52eaf477bdec8be8ca57fe0e2"
          }
        },
        {
          "ruleId": "3-0-naming-convention",
          "message": {
            "text": "Parameter Token.transferFrom(address,address,uint256)._to (node_modules/@tokenysolutions/t-rex/contracts/token/Token.sol#222) is not in mixedCase\n",
            "markdown": "Parameter [Token.transferFrom(address,address,uint256)._to](node_modules/@tokenysolutions/t-rex/contracts/token/Token.sol#L222) is not in mixedCase\n"
          },
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "node_modules/@tokenysolutions/t-rex/contracts/token/Token.sol"
                },
                "region": {
                  "startLine": 222,
                  "endLine": 222
                }
              }
            }
          ],
          "partialFingerprints": {
            "id": "b8f89c5f1522e37d3d7733ead18b2b0f87a575f99f87df09ab03f9c785a6dd05"
          }
        },
        {
          "ruleId": "3-0-naming-convention",
          "message": {
            "text": "Parameter Token.burn(address,uint256)._userAddress (node_modules/@tokenysolutions/t-rex/contracts/token/Token.sol#464) is not in mixedCase\n",
            "markdown": "Parameter [Token.burn(address,uint256)._userAddress](node_modules/@tokenysolutions/t-rex/contracts/token/Token.sol#L464) is not in mixedCase\n"
          },
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "node_modules/@tokenysolutions/t-rex/contracts/token/Token.sol"
                },
                "region": {
                  "startLine": 464,
                  "endLine": 464
                }
              }
            }
          ],
          "partialFingerprints": {
            "id": "ba45d3b3f4f65d8fbf00bf99dbf4a43e95b757b171d5b1b66011c05b974e59fe"
          }
        },
        {
          "ruleId": "3-0-naming-convention",
          "message": {
            "text": "Parameter Token.batchMint(address[],uint256[])._amounts (node_modules/@tokenysolutions/t-rex/contracts/token/Token.sol#252) is not in mixedCase\n",
            "markdown": "Parameter [Token.batchMint(address[],uint256[])._amounts](node_modules/@tokenysolutions/t-rex/contracts/token/Token.sol#L252) is not in mixedCase\n"
          },
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "node_modules/@tokenysolutions/t-rex/contracts/token/Token.sol"
                },
                "region": {
                  "startLine": 252,
                  "endLine": 252
                }
              }
            }
          ],
          "partialFingerprints": {
            "id": "bc9d7dd8b343c715dcf88477e6edf435bcf21c0ed23cfe8b7d7a2a616e6fad99"
          }
        },
        {
          "ruleId": "3-0-naming-convention",
          "message": {
            "text": "Function OwnableUpgradeable.__Ownable_init_unchained() (node_modules/@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol#33-35) is not in mixedCase\n",
            "markdown": "Function [OwnableUpgradeable.__Ownable_init_unchained()](node_modules/@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol#L33-L35) is not in mixedCase\n"
          },
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "node_modules/@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol"
                },
                "region": {
                  "startLine": 33,
                  "endLine": 35
                }
              }
            }
          ],
          "partialFingerprints": {
            "id": "be1436ad6e7661ea17048b9b8432553bbd982a53256f0d44f0dddb582fee6a05"
          }
        },
        {
          "ruleId": "3-0-naming-convention",
          "message": {
            "text": "Parameter Token.init(address,address,string,string,uint8,address)._compliance (node_modules/@tokenysolutions/t-rex/contracts/token/Token.sol#102) is not in mixedCase\n",
            "markdown": "Parameter [Token.init(address,address,string,string,uint8,address)._compliance](node_modules/@tokenysolutions/t-rex/contracts/token/Token.sol#L102) is not in mixedCase\n"
          },
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "node_modules/@tokenysolutions/t-rex/contracts/token/Token.sol"
                },
                "region": {
                  "startLine": 102,
                  "endLine": 102
                }
              }
            }
          ],
          "partialFingerprints": {
            "id": "bebe8ace14d7f890ccf7aca3bf1a5d0cb43853caa4ea1c7d880c85f92b26c508"
          }
        },
        {
          "ruleId": "3-0-naming-convention",
          "message": {
            "text": "Parameter Token.increaseAllowance(address,uint256)._spender (node_modules/@tokenysolutions/t-rex/contracts/token/Token.sol#145) is not in mixedCase\n",
            "markdown": "Parameter [Token.increaseAllowance(address,uint256)._spender](node_modules/@tokenysolutions/t-rex/contracts/token/Token.sol#L145) is not in mixedCase\n"
          },
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "node_modules/@tokenysolutions/t-rex/contracts/token/Token.sol"
                },
                "region": {
                  "startLine": 145,
                  "endLine": 145
                }
              }
            }
          ],
          "partialFingerprints": {
            "id": "bfe0c23fca41e54108416d10cf71d343e8a11be3a3713566c638073a3136cb4b"
          }
        },
        {
          "ruleId": "3-0-naming-convention",
          "message": {
            "text": "Parameter Token.approve(address,uint256)._spender (node_modules/@tokenysolutions/t-rex/contracts/token/Token.sol#137) is not in mixedCase\n",
            "markdown": "Parameter [Token.approve(address,uint256)._spender](node_modules/@tokenysolutions/t-rex/contracts/token/Token.sol#L137) is not in mixedCase\n"
          },
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "node_modules/@tokenysolutions/t-rex/contracts/token/Token.sol"
                },
                "region": {
                  "startLine": 137,
                  "endLine": 137
                }
              }
            }
          ],
          "partialFingerprints": {
            "id": "c6378d6f655cad1d6960e0c4e4f5cd67ea720ebe5de911ec3f0c286984216135"
          }
        },
        {
          "ruleId": "3-0-naming-convention",
          "message": {
            "text": "Variable TIRStorage.__gap (node_modules/@tokenysolutions/t-rex/contracts/registry/storage/TIRStorage.sol#82) is not in mixedCase\n",
            "markdown": "Variable [TIRStorage.__gap](node_modules/@tokenysolutions/t-rex/contracts/registry/storage/TIRStorage.sol#L82) is not in mixedCase\n"
          },
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "node_modules/@tokenysolutions/t-rex/contracts/registry/storage/TIRStorage.sol"
                },
                "region": {
                  "startLine": 82,
                  "endLine": 82
                }
              }
            }
          ],
          "partialFingerprints": {
            "id": "c79f3cbeaefa9b886d084fafbbe7ca82181af0d71f8b2dfbd94e53f3edf4ebe4"
          }
        },
        {
          "ruleId": "3-0-naming-convention",
          "message": {
            "text": "Parameter IdentityRegistryStorage.addIdentityToStorage(address,IIdentity,uint16)._identity (node_modules/@tokenysolutions/t-rex/contracts/registry/implementation/IdentityRegistryStorage.sol#82) is not in mixedCase\n",
            "markdown": "Parameter [IdentityRegistryStorage.addIdentityToStorage(address,IIdentity,uint16)._identity](node_modules/@tokenysolutions/t-rex/contracts/registry/implementation/IdentityRegistryStorage.sol#L82) is not in mixedCase\n"
          },
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "node_modules/@tokenysolutions/t-rex/contracts/registry/implementation/IdentityRegistryStorage.sol"
                },
                "region": {
                  "startLine": 82,
                  "endLine": 82
                }
              }
            }
          ],
          "partialFingerprints": {
            "id": "c902bc9438306840cbd0e0b0dc9d56be7cc3207752375e75a68b50d0f31220df"
          }
        },
        {
          "ruleId": "3-0-naming-convention",
          "message": {
            "text": "Parameter IdentityRegistry.batchRegisterIdentity(address[],IIdentity[],uint16[])._countries (node_modules/@tokenysolutions/t-rex/contracts/registry/implementation/IdentityRegistry.sol#112) is not in mixedCase\n",
            "markdown": "Parameter [IdentityRegistry.batchRegisterIdentity(address[],IIdentity[],uint16[])._countries](node_modules/@tokenysolutions/t-rex/contracts/registry/implementation/IdentityRegistry.sol#L112) is not in mixedCase\n"
          },
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "node_modules/@tokenysolutions/t-rex/contracts/registry/implementation/IdentityRegistry.sol"
                },
                "region": {
                  "startLine": 112,
                  "endLine": 112
                }
              }
            }
          ],
          "partialFingerprints": {
            "id": "ca763a22bf24640c2422bb1b02d805c2eb666036d2e0f69392cee2b0e07b80d3"
          }
        },
        {
          "ruleId": "3-0-naming-convention",
          "message": {
            "text": "Parameter Token.batchForcedTransfer(address[],address[],uint256[])._amounts (node_modules/@tokenysolutions/t-rex/contracts/token/Token.sol#242) is not in mixedCase\n",
            "markdown": "Parameter [Token.batchForcedTransfer(address[],address[],uint256[])._amounts](node_modules/@tokenysolutions/t-rex/contracts/token/Token.sol#L242) is not in mixedCase\n"
          },
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "node_modules/@tokenysolutions/t-rex/contracts/token/Token.sol"
                },
                "region": {
                  "startLine": 242,
                  "endLine": 242
                }
              }
            }
          ],
          "partialFingerprints": {
            "id": "cc2af62273d23787866e055751c47171d2dcb91bde3ea03e62c878d2513fc93d"
          }
        },
        {
          "ruleId": "3-0-naming-convention",
          "message": {
            "text": "Parameter Token.transferFrom(address,address,uint256)._from (node_modules/@tokenysolutions/t-rex/contracts/token/Token.sol#221) is not in mixedCase\n",
            "markdown": "Parameter [Token.transferFrom(address,address,uint256)._from](node_modules/@tokenysolutions/t-rex/contracts/token/Token.sol#L221) is not in mixedCase\n"
          },
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "node_modules/@tokenysolutions/t-rex/contracts/token/Token.sol"
                },
                "region": {
                  "startLine": 221,
                  "endLine": 221
                }
              }
            }
          ],
          "partialFingerprints": {
            "id": "cf8660d0623778ddeef4bdf6a0fd78bd9574e818877feb180b0e3905b7f7469a"
          }
        },
        {
          "ruleId": "3-0-naming-convention",
          "message": {
            "text": "Parameter Token.init(address,address,string,string,uint8,address)._identityRegistry (node_modules/@tokenysolutions/t-rex/contracts/token/Token.sol#101) is not in mixedCase\n",
            "markdown": "Parameter [Token.init(address,address,string,string,uint8,address)._identityRegistry](node_modules/@tokenysolutions/t-rex/contracts/token/Token.sol#L101) is not in mixedCase\n"
          },
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "node_modules/@tokenysolutions/t-rex/contracts/token/Token.sol"
                },
                "region": {
                  "startLine": 101,
                  "endLine": 101
                }
              }
            }
          ],
          "partialFingerprints": {
            "id": "cf9c543cc82d44c6306139c705234b2f51ec408bda3db7bcbd4a6b8e485dcf72"
          }
        },
        {
          "ruleId": "3-0-naming-convention",
          "message": {
            "text": "Parameter IdentityRegistryStorage.modifyStoredInvestorCountry(address,uint16)._country (node_modules/@tokenysolutions/t-rex/contracts/registry/implementation/IdentityRegistryStorage.sol#112) is not in mixedCase\n",
            "markdown": "Parameter [IdentityRegistryStorage.modifyStoredInvestorCountry(address,uint16)._country](node_modules/@tokenysolutions/t-rex/contracts/registry/implementation/IdentityRegistryStorage.sol#L112) is not in mixedCase\n"
          },
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "node_modules/@tokenysolutions/t-rex/contracts/registry/implementation/IdentityRegistryStorage.sol"
                },
                "region": {
                  "startLine": 112,
                  "endLine": 112
                }
              }
            }
          ],
          "partialFingerprints": {
            "id": "d1f306a087786e356c23817c472774b3f1e7c2219afadc02b3f889caa7971745"
          }
        },
        {
          "ruleId": "3-0-naming-convention",
          "message": {
            "text": "Variable TokenStorage.__gap (node_modules/@tokenysolutions/t-rex/contracts/token/TokenStorage.sol#97) is not in mixedCase\n",
            "markdown": "Variable [TokenStorage.__gap](node_modules/@tokenysolutions/t-rex/contracts/token/TokenStorage.sol#L97) is not in mixedCase\n"
          },
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "node_modules/@tokenysolutions/t-rex/contracts/token/TokenStorage.sol"
                },
                "region": {
                  "startLine": 97,
                  "endLine": 97
                }
              }
            }
          ],
          "partialFingerprints": {
            "id": "d47b2a5e39e401b21c0989dff1d510a84fe968ec3dcc2637565b00657813ae85"
          }
        },
        {
          "ruleId": "3-0-naming-convention",
          "message": {
            "text": "Parameter IdentityRegistryStorage.bindIdentityRegistry(address)._identityRegistry (node_modules/@tokenysolutions/t-rex/contracts/registry/implementation/IdentityRegistryStorage.sol#133) is not in mixedCase\n",
            "markdown": "Parameter [IdentityRegistryStorage.bindIdentityRegistry(address)._identityRegistry](node_modules/@tokenysolutions/t-rex/contracts/registry/implementation/IdentityRegistryStorage.sol#L133) is not in mixedCase\n"
          },
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "node_modules/@tokenysolutions/t-rex/contracts/registry/implementation/IdentityRegistryStorage.sol"
                },
                "region": {
                  "startLine": 133,
                  "endLine": 133
                }
              }
            }
          ],
          "partialFingerprints": {
            "id": "d6c05467b12aa9522cec6eb750cac31bf74a1dde515e2ab5d690dbeb7a6ba48b"
          }
        },
        {
          "ruleId": "3-0-naming-convention",
          "message": {
            "text": "Parameter Token.batchFreezePartialTokens(address[],uint256[])._userAddresses (node_modules/@tokenysolutions/t-rex/contracts/token/Token.sol#279) is not in mixedCase\n",
            "markdown": "Parameter [Token.batchFreezePartialTokens(address[],uint256[])._userAddresses](node_modules/@tokenysolutions/t-rex/contracts/token/Token.sol#L279) is not in mixedCase\n"
          },
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "node_modules/@tokenysolutions/t-rex/contracts/token/Token.sol"
                },
                "region": {
                  "startLine": 279,
                  "endLine": 279
                }
              }
            }
          ],
          "partialFingerprints": {
            "id": "d6f5abaf30ddd302d0ef907e6c56dea2247ef9b428e8fdf705940656b5bf74c4"
          }
        },
        {
          "ruleId": "3-0-naming-convention",
          "message": {
            "text": "Parameter Token.transfer(address,uint256)._to (node_modules/@tokenysolutions/t-rex/contracts/token/Token.sol#417) is not in mixedCase\n",
            "markdown": "Parameter [Token.transfer(address,uint256)._to](node_modules/@tokenysolutions/t-rex/contracts/token/Token.sol#L417) is not in mixedCase\n"
          },
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "node_modules/@tokenysolutions/t-rex/contracts/token/Token.sol"
                },
                "region": {
                  "startLine": 417,
                  "endLine": 417
                }
              }
            }
          ],
          "partialFingerprints": {
            "id": "d73bfe9802eb34e88f3feecb0066f9d6b84cebc355fcd39a368283e6a21fa1da"
          }
        },
        {
          "ruleId": "3-0-naming-convention",
          "message": {
            "text": "Parameter Token.setName(string)._name (node_modules/@tokenysolutions/t-rex/contracts/token/Token.sol#161) is not in mixedCase\n",
            "markdown": "Parameter [Token.setName(string)._name](node_modules/@tokenysolutions/t-rex/contracts/token/Token.sol#L161) is not in mixedCase\n"
          },
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "node_modules/@tokenysolutions/t-rex/contracts/token/Token.sol"
                },
                "region": {
                  "startLine": 161,
                  "endLine": 161
                }
              }
            }
          ],
          "partialFingerprints": {
            "id": "d889aa9141a618feb74bb01ace533178fd69406ff093c04369ae4289d6e749f2"
          }
        },
        {
          "ruleId": "3-0-naming-convention",
          "message": {
            "text": "Parameter Token.batchBurn(address[],uint256[])._userAddresses (node_modules/@tokenysolutions/t-rex/contracts/token/Token.sol#261) is not in mixedCase\n",
            "markdown": "Parameter [Token.batchBurn(address[],uint256[])._userAddresses](node_modules/@tokenysolutions/t-rex/contracts/token/Token.sol#L261) is not in mixedCase\n"
          },
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "node_modules/@tokenysolutions/t-rex/contracts/token/Token.sol"
                },
                "region": {
                  "startLine": 261,
                  "endLine": 261
                }
              }
            }
          ],
          "partialFingerprints": {
            "id": "db84a295686e5dfbd48a63c0c01efed5e05f3dee71534f525f5538f6c132ba6b"
          }
        },
        {
          "ruleId": "3-0-naming-convention",
          "message": {
            "text": "Parameter TrustedIssuersRegistry.hasClaimTopic(address,uint256)._issuer (node_modules/@tokenysolutions/t-rex/contracts/registry/implementation/TrustedIssuersRegistry.sol#191) is not in mixedCase\n",
            "markdown": "Parameter [TrustedIssuersRegistry.hasClaimTopic(address,uint256)._issuer](node_modules/@tokenysolutions/t-rex/contracts/registry/implementation/TrustedIssuersRegistry.sol#L191) is not in mixedCase\n"
          },
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "node_modules/@tokenysolutions/t-rex/contracts/registry/implementation/TrustedIssuersRegistry.sol"
                },
                "region": {
                  "startLine": 191,
                  "endLine": 191
                }
              }
            }
          ],
          "partialFingerprints": {
            "id": "df9921e2f912f2f0e791db009b38145c880f143a4d7ce4615b2fd20258932a72"
          }
        },
        {
          "ruleId": "3-0-naming-convention",
          "message": {
            "text": "Parameter TrustedIssuersRegistry.hasClaimTopic(address,uint256)._claimTopic (node_modules/@tokenysolutions/t-rex/contracts/registry/implementation/TrustedIssuersRegistry.sol#191) is not in mixedCase\n",
            "markdown": "Parameter [TrustedIssuersRegistry.hasClaimTopic(address,uint256)._claimTopic](node_modules/@tokenysolutions/t-rex/contracts/registry/implementation/TrustedIssuersRegistry.sol#L191) is not in mixedCase\n"
          },
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "node_modules/@tokenysolutions/t-rex/contracts/registry/implementation/TrustedIssuersRegistry.sol"
                },
                "region": {
                  "startLine": 191,
                  "endLine": 191
                }
              }
            }
          ],
          "partialFingerprints": {
            "id": "e01628b45d81457205faddb60b4bef6bcfac07006260aeb422ba11dd9c8655ac"
          }
        },
        {
          "ruleId": "3-0-naming-convention",
          "message": {
            "text": "Parameter Token.setAddressFrozen(address,bool)._userAddress (node_modules/@tokenysolutions/t-rex/contracts/token/Token.sol#479) is not in mixedCase\n",
            "markdown": "Parameter [Token.setAddressFrozen(address,bool)._userAddress](node_modules/@tokenysolutions/t-rex/contracts/token/Token.sol#L479) is not in mixedCase\n"
          },
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "node_modules/@tokenysolutions/t-rex/contracts/token/Token.sol"
                },
                "region": {
                  "startLine": 479,
                  "endLine": 479
                }
              }
            }
          ],
          "partialFingerprints": {
            "id": "e3d4fb54cff4fcc75c4b6305f4e5795cec05f002b378b848a3a0bc8af8ef77da"
          }
        },
        {
          "ruleId": "3-0-naming-convention",
          "message": {
            "text": "Parameter Token.forcedTransfer(address,address,uint256)._to (node_modules/@tokenysolutions/t-rex/contracts/token/Token.sol#433) is not in mixedCase\n",
            "markdown": "Parameter [Token.forcedTransfer(address,address,uint256)._to](node_modules/@tokenysolutions/t-rex/contracts/token/Token.sol#L433) is not in mixedCase\n"
          },
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "node_modules/@tokenysolutions/t-rex/contracts/token/Token.sol"
                },
                "region": {
                  "startLine": 433,
                  "endLine": 433
                }
              }
            }
          ],
          "partialFingerprints": {
            "id": "e412bee3c7810ec80d7949ba29dbfcf16a069fafb3f9562b080b3f3b1b0c0df7"
          }
        },
        {
          "ruleId": "3-0-naming-convention",
          "message": {
            "text": "Parameter Token.burn(address,uint256)._amount (node_modules/@tokenysolutions/t-rex/contracts/token/Token.sol#464) is not in mixedCase\n",
            "markdown": "Parameter [Token.burn(address,uint256)._amount](node_modules/@tokenysolutions/t-rex/contracts/token/Token.sol#L464) is not in mixedCase\n"
          },
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "node_modules/@tokenysolutions/t-rex/contracts/token/Token.sol"
                },
                "region": {
                  "startLine": 464,
                  "endLine": 464
                }
              }
            }
          ],
          "partialFingerprints": {
            "id": "e64bca78f0d3e5f302229faf74151989126d5081019d97d27ff4fef231dbd6d2"
          }
        },
        {
          "ruleId": "3-0-naming-convention",
          "message": {
            "text": "Parameter Token.batchFreezePartialTokens(address[],uint256[])._amounts (node_modules/@tokenysolutions/t-rex/contracts/token/Token.sol#279) is not in mixedCase\n",
            "markdown": "Parameter [Token.batchFreezePartialTokens(address[],uint256[])._amounts](node_modules/@tokenysolutions/t-rex/contracts/token/Token.sol#L279) is not in mixedCase\n"
          },
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "node_modules/@tokenysolutions/t-rex/contracts/token/Token.sol"
                },
                "region": {
                  "startLine": 279,
                  "endLine": 279
                }
              }
            }
          ],
          "partialFingerprints": {
            "id": "e74d7c5771bbc059d768178e2ed07bd4be53603795bc003905b4b41397d325b7"
          }
        },
        {
          "ruleId": "3-0-naming-convention",
          "message": {
            "text": "Parameter Token.batchTransfer(address[],uint256[])._amounts (node_modules/@tokenysolutions/t-rex/contracts/token/Token.sol#204) is not in mixedCase\n",
            "markdown": "Parameter [Token.batchTransfer(address[],uint256[])._amounts](node_modules/@tokenysolutions/t-rex/contracts/token/Token.sol#L204) is not in mixedCase\n"
          },
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "node_modules/@tokenysolutions/t-rex/contracts/token/Token.sol"
                },
                "region": {
                  "startLine": 204,
                  "endLine": 204
                }
              }
            }
          ],
          "partialFingerprints": {
            "id": "e83738b9ca8ba65c9e017851cd3a446b9d36dafbefd29fc38300ef99d519ee94"
          }
        },
        {
          "ruleId": "3-0-naming-convention",
          "message": {
            "text": "Parameter Token.init(address,address,string,string,uint8,address)._symbol (node_modules/@tokenysolutions/t-rex/contracts/token/Token.sol#104) is not in mixedCase\n",
            "markdown": "Parameter [Token.init(address,address,string,string,uint8,address)._symbol](node_modules/@tokenysolutions/t-rex/contracts/token/Token.sol#L104) is not in mixedCase\n"
          },
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "node_modules/@tokenysolutions/t-rex/contracts/token/Token.sol"
                },
                "region": {
                  "startLine": 104,
                  "endLine": 104
                }
              }
            }
          ],
          "partialFingerprints": {
            "id": "e92bed2c00be76fe9302229c44afcbf112a3a643b33dee071eddfbbc1f9aae2b"
          }
        },
        {
          "ruleId": "3-0-naming-convention",
          "message": {
            "text": "Parameter IdentityRegistry.init(address,address,address)._identityStorage (node_modules/@tokenysolutions/t-rex/contracts/registry/implementation/IdentityRegistry.sol#90) is not in mixedCase\n",
            "markdown": "Parameter [IdentityRegistry.init(address,address,address)._identityStorage](node_modules/@tokenysolutions/t-rex/contracts/registry/implementation/IdentityRegistry.sol#L90) is not in mixedCase\n"
          },
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "node_modules/@tokenysolutions/t-rex/contracts/registry/implementation/IdentityRegistry.sol"
                },
                "region": {
                  "startLine": 90,
                  "endLine": 90
                }
              }
            }
          ],
          "partialFingerprints": {
            "id": "e9a39b763c6a60565f776cafa64cc94cbbbaed9f15bec8197c438f214d351bf3"
          }
        },
        {
          "ruleId": "3-0-naming-convention",
          "message": {
            "text": "Parameter AgentRoleUpgradeable.isAgent(address)._agent (node_modules/@tokenysolutions/t-rex/contracts/roles/AgentRoleUpgradeable.sol#95) is not in mixedCase\n",
            "markdown": "Parameter [AgentRoleUpgradeable.isAgent(address)._agent](node_modules/@tokenysolutions/t-rex/contracts/roles/AgentRoleUpgradeable.sol#L95) is not in mixedCase\n"
          },
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "node_modules/@tokenysolutions/t-rex/contracts/roles/AgentRoleUpgradeable.sol"
                },
                "region": {
                  "startLine": 95,
                  "endLine": 95
                }
              }
            }
          ],
          "partialFingerprints": {
            "id": "eaddf481a12231d08273078e811ef7dc60e7067589d089f129cf486dde534d95"
          }
        },
        {
          "ruleId": "3-0-naming-convention",
          "message": {
            "text": "Parameter Token.batchForcedTransfer(address[],address[],uint256[])._toList (node_modules/@tokenysolutions/t-rex/contracts/token/Token.sol#241) is not in mixedCase\n",
            "markdown": "Parameter [Token.batchForcedTransfer(address[],address[],uint256[])._toList](node_modules/@tokenysolutions/t-rex/contracts/token/Token.sol#L241) is not in mixedCase\n"
          },
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "node_modules/@tokenysolutions/t-rex/contracts/token/Token.sol"
                },
                "region": {
                  "startLine": 241,
                  "endLine": 241
                }
              }
            }
          ],
          "partialFingerprints": {
            "id": "eaef8357257b4013ae39eb904d49a5da440af04db502810a5393e56836edb6c4"
          }
        },
        {
          "ruleId": "3-0-naming-convention",
          "message": {
            "text": "Function ContextUpgradeable.__Context_init() (node_modules/@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol#18-19) is not in mixedCase\n",
            "markdown": "Function [ContextUpgradeable.__Context_init()](node_modules/@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol#L18-L19) is not in mixedCase\n"
          },
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "node_modules/@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol"
                },
                "region": {
                  "startLine": 18,
                  "endLine": 19
                }
              }
            }
          ],
          "partialFingerprints": {
            "id": "ec47067e22967ab37ddb79c5eae4c225b0c9f1e4e15f1452db70b0a6f86103e0"
          }
        },
        {
          "ruleId": "3-0-naming-convention",
          "message": {
            "text": "Parameter IdentityRegistryStorage.modifyStoredIdentity(address,IIdentity)._identity (node_modules/@tokenysolutions/t-rex/contracts/registry/implementation/IdentityRegistryStorage.sol#98) is not in mixedCase\n",
            "markdown": "Parameter [IdentityRegistryStorage.modifyStoredIdentity(address,IIdentity)._identity](node_modules/@tokenysolutions/t-rex/contracts/registry/implementation/IdentityRegistryStorage.sol#L98) is not in mixedCase\n"
          },
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "node_modules/@tokenysolutions/t-rex/contracts/registry/implementation/IdentityRegistryStorage.sol"
                },
                "region": {
                  "startLine": 98,
                  "endLine": 98
                }
              }
            }
          ],
          "partialFingerprints": {
            "id": "ecb9b0e58ec36d444d90f58937ece2fe54be87dcbb878351e1066f87a4f6f4a4"
          }
        },
        {
          "ruleId": "3-0-naming-convention",
          "message": {
            "text": "Parameter IdentityRegistryStorage.addIdentityToStorage(address,IIdentity,uint16)._country (node_modules/@tokenysolutions/t-rex/contracts/registry/implementation/IdentityRegistryStorage.sol#83) is not in mixedCase\n",
            "markdown": "Parameter [IdentityRegistryStorage.addIdentityToStorage(address,IIdentity,uint16)._country](node_modules/@tokenysolutions/t-rex/contracts/registry/implementation/IdentityRegistryStorage.sol#L83) is not in mixedCase\n"
          },
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "node_modules/@tokenysolutions/t-rex/contracts/registry/implementation/IdentityRegistryStorage.sol"
                },
                "region": {
                  "startLine": 83,
                  "endLine": 83
                }
              }
            }
          ],
          "partialFingerprints": {
            "id": "eea243e92fcdba51ddfb9039656a0c4bb4bf5eff039538191d29cd9fc5f73aa1"
          }
        },
        {
          "ruleId": "3-0-naming-convention",
          "message": {
            "text": "Parameter Token.batchMint(address[],uint256[])._toList (node_modules/@tokenysolutions/t-rex/contracts/token/Token.sol#252) is not in mixedCase\n",
            "markdown": "Parameter [Token.batchMint(address[],uint256[])._toList](node_modules/@tokenysolutions/t-rex/contracts/token/Token.sol#L252) is not in mixedCase\n"
          },
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "node_modules/@tokenysolutions/t-rex/contracts/token/Token.sol"
                },
                "region": {
                  "startLine": 252,
                  "endLine": 252
                }
              }
            }
          ],
          "partialFingerprints": {
            "id": "f00e082760ccb433aedf9166aaf79c0d271543c52139f349d273c492f2ccd10e"
          }
        },
        {
          "ruleId": "3-0-naming-convention",
          "message": {
            "text": "Parameter Token.setAddressFrozen(address,bool)._freeze (node_modules/@tokenysolutions/t-rex/contracts/token/Token.sol#479) is not in mixedCase\n",
            "markdown": "Parameter [Token.setAddressFrozen(address,bool)._freeze](node_modules/@tokenysolutions/t-rex/contracts/token/Token.sol#L479) is not in mixedCase\n"
          },
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "node_modules/@tokenysolutions/t-rex/contracts/token/Token.sol"
                },
                "region": {
                  "startLine": 479,
                  "endLine": 479
                }
              }
            }
          ],
          "partialFingerprints": {
            "id": "f1f49878309b7652dacc98daab9284103b62f5f9c7de4647edbb5f9bcb75a75e"
          }
        },
        {
          "ruleId": "3-0-naming-convention",
          "message": {
            "text": "Parameter Token.allowance(address,address)._spender (node_modules/@tokenysolutions/t-rex/contracts/token/Token.sol#334) is not in mixedCase\n",
            "markdown": "Parameter [Token.allowance(address,address)._spender](node_modules/@tokenysolutions/t-rex/contracts/token/Token.sol#L334) is not in mixedCase\n"
          },
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "node_modules/@tokenysolutions/t-rex/contracts/token/Token.sol"
                },
                "region": {
                  "startLine": 334,
                  "endLine": 334
                }
              }
            }
          ],
          "partialFingerprints": {
            "id": "f8c800ac2e1afcb4c917f3f198ed84450474ef54efd140f3518327fc1d14bc77"
          }
        },
        {
          "ruleId": "3-0-naming-convention",
          "message": {
            "text": "Parameter Token.batchUnfreezePartialTokens(address[],uint256[])._userAddresses (node_modules/@tokenysolutions/t-rex/contracts/token/Token.sol#288) is not in mixedCase\n",
            "markdown": "Parameter [Token.batchUnfreezePartialTokens(address[],uint256[])._userAddresses](node_modules/@tokenysolutions/t-rex/contracts/token/Token.sol#L288) is not in mixedCase\n"
          },
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "node_modules/@tokenysolutions/t-rex/contracts/token/Token.sol"
                },
                "region": {
                  "startLine": 288,
                  "endLine": 288
                }
              }
            }
          ],
          "partialFingerprints": {
            "id": "fbc7f6e63734f99eda0b29d62c1571e7baac6c724401b22dbf761b217faaeda6"
          }
        },
        {
          "ruleId": "3-0-naming-convention",
          "message": {
            "text": "Parameter IdentityRegistry.updateCountry(address,uint16)._userAddress (node_modules/@tokenysolutions/t-rex/contracts/registry/implementation/IdentityRegistry.sol#131) is not in mixedCase\n",
            "markdown": "Parameter [IdentityRegistry.updateCountry(address,uint16)._userAddress](node_modules/@tokenysolutions/t-rex/contracts/registry/implementation/IdentityRegistry.sol#L131) is not in mixedCase\n"
          },
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "node_modules/@tokenysolutions/t-rex/contracts/registry/implementation/IdentityRegistry.sol"
                },
                "region": {
                  "startLine": 131,
                  "endLine": 131
                }
              }
            }
          ],
          "partialFingerprints": {
            "id": "fd7153fa935b5b6dbc90de7098735819d8876257d5add15ee60fbb6fa3c4ba13"
          }
        },
        {
          "ruleId": "3-0-naming-convention",
          "message": {
            "text": "Parameter Token.approve(address,uint256)._amount (node_modules/@tokenysolutions/t-rex/contracts/token/Token.sol#137) is not in mixedCase\n",
            "markdown": "Parameter [Token.approve(address,uint256)._amount](node_modules/@tokenysolutions/t-rex/contracts/token/Token.sol#L137) is not in mixedCase\n"
          },
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "node_modules/@tokenysolutions/t-rex/contracts/token/Token.sol"
                },
                "region": {
                  "startLine": 137,
                  "endLine": 137
                }
              }
            }
          ],
          "partialFingerprints": {
            "id": "fe4b878859b11974846f39c249d17fc4a1df81e58351a5a4d225f8153bdb74a1"
          }
        },
        {
          "ruleId": "3-1-similar-names",
          "message": {
            "text": "Variable ITrustedIssuersRegistry.hasClaimTopic(address,uint256)._claimTopic (node_modules/@tokenysolutions/t-rex/contracts/registry/interface/ITrustedIssuersRegistry.sol#161) is too similar to TrustedIssuersRegistry.hasClaimTopic(address,uint256).claimTopics (node_modules/@tokenysolutions/t-rex/contracts/registry/implementation/TrustedIssuersRegistry.sol#193)\n",
            "markdown": "Variable [ITrustedIssuersRegistry.hasClaimTopic(address,uint256)._claimTopic](node_modules/@tokenysolutions/t-rex/contracts/registry/interface/ITrustedIssuersRegistry.sol#L161) is too similar to [TrustedIssuersRegistry.hasClaimTopic(address,uint256).claimTopics](node_modules/@tokenysolutions/t-rex/contracts/registry/implementation/TrustedIssuersRegistry.sol#L193)\n"
          },
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "node_modules/@tokenysolutions/t-rex/contracts/registry/interface/ITrustedIssuersRegistry.sol"
                },
                "region": {
                  "startLine": 161,
                  "endLine": 161
                }
              }
            }
          ],
          "partialFingerprints": {
            "id": "4c09f92652ead03417da840fd36a1568fec8428e749cc89e77866fcc40ac89d6"
          }
        },
        {
          "ruleId": "3-1-similar-names",
          "message": {
            "text": "Variable TrustedIssuersRegistry.hasClaimTopic(address,uint256)._claimTopic (node_modules/@tokenysolutions/t-rex/contracts/registry/implementation/TrustedIssuersRegistry.sol#191) is too similar to TrustedIssuersRegistry.hasClaimTopic(address,uint256).claimTopics (node_modules/@tokenysolutions/t-rex/contracts/registry/implementation/TrustedIssuersRegistry.sol#193)\n",
            "markdown": "Variable [TrustedIssuersRegistry.hasClaimTopic(address,uint256)._claimTopic](node_modules/@tokenysolutions/t-rex/contracts/registry/implementation/TrustedIssuersRegistry.sol#L191) is too similar to [TrustedIssuersRegistry.hasClaimTopic(address,uint256).claimTopics](node_modules/@tokenysolutions/t-rex/contracts/registry/implementation/TrustedIssuersRegistry.sol#L193)\n"
          },
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "node_modules/@tokenysolutions/t-rex/contracts/registry/implementation/TrustedIssuersRegistry.sol"
                },
                "region": {
                  "startLine": 191,
                  "endLine": 191
                }
              }
            }
          ],
          "partialFingerprints": {
            "id": "df4f6cf3534219794d270b9e8c9468fc84ee0b796e455d54762f45a86265c054"
          }
        }
      ]
    }
  ]
}